// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: models.proto

package mrtech.smarthome.rpc;

public final class Models {
  private Models() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registry.add(mrtech.smarthome.rpc.Models.ZigBeeDevice.detail);
    registry.add(mrtech.smarthome.rpc.Models.OnOffCluster.detail);
    registry.add(mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.detail);
    registry.add(mrtech.smarthome.rpc.Models.SimpleMeteringCluster.detail);
    registry.add(mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.detail);
    registry.add(mrtech.smarthome.rpc.Models.CameraDevice.detail);
  }
  public enum SeverityLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    INFO(0, 1),
    WARNING(1, 2),
    ERROR(2, 3),
    FATAL(3, 4),
    ;
    
    public static final int INFO_VALUE = 1;
    public static final int WARNING_VALUE = 2;
    public static final int ERROR_VALUE = 3;
    public static final int FATAL_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static SeverityLevel valueOf(int value) {
      switch (value) {
        case 1: return INFO;
        case 2: return WARNING;
        case 3: return ERROR;
        case 4: return FATAL;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SeverityLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SeverityLevel>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SeverityLevel>() {
            public SeverityLevel findValueByNumber(int number) {
              return SeverityLevel.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final SeverityLevel[] VALUES = {
      INFO, WARNING, ERROR, FATAL, 
    };
    
    public static SeverityLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SeverityLevel(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.SeverityLevel)
  }
  
  public enum BatteryStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    BATTERY_STATUS_NO_BATTERY(0, 0),
    BATTERY_STATUS_CHARGING(1, 1),
    BATTERY_STATUS_DISCHARGING(2, 2),
    BATTERY_STATUS_NOT_CHARGING(3, 3),
    ;
    
    public static final int BATTERY_STATUS_NO_BATTERY_VALUE = 0;
    public static final int BATTERY_STATUS_CHARGING_VALUE = 1;
    public static final int BATTERY_STATUS_DISCHARGING_VALUE = 2;
    public static final int BATTERY_STATUS_NOT_CHARGING_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static BatteryStatus valueOf(int value) {
      switch (value) {
        case 0: return BATTERY_STATUS_NO_BATTERY;
        case 1: return BATTERY_STATUS_CHARGING;
        case 2: return BATTERY_STATUS_DISCHARGING;
        case 3: return BATTERY_STATUS_NOT_CHARGING;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<BatteryStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BatteryStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BatteryStatus>() {
            public BatteryStatus findValueByNumber(int number) {
              return BatteryStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final BatteryStatus[] VALUES = {
      BATTERY_STATUS_NO_BATTERY, BATTERY_STATUS_CHARGING, BATTERY_STATUS_DISCHARGING, BATTERY_STATUS_NOT_CHARGING, 
    };
    
    public static BatteryStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private BatteryStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.BatteryStatus)
  }
  
  public enum ServiceStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    SERVICE_STATUS_NO_SERVICE(0, 0),
    SERVICE_STATUS_RESTRICTED(1, 1),
    SERVICE_STATUS_VALID(2, 2),
    SERVICE_STATUS_RESTRICTED_REGIONAL_SERVICE(3, 3),
    SERVICE_STATUS_HIBERNATE(4, 4),
    ;
    
    public static final int SERVICE_STATUS_NO_SERVICE_VALUE = 0;
    public static final int SERVICE_STATUS_RESTRICTED_VALUE = 1;
    public static final int SERVICE_STATUS_VALID_VALUE = 2;
    public static final int SERVICE_STATUS_RESTRICTED_REGIONAL_SERVICE_VALUE = 3;
    public static final int SERVICE_STATUS_HIBERNATE_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static ServiceStatus valueOf(int value) {
      switch (value) {
        case 0: return SERVICE_STATUS_NO_SERVICE;
        case 1: return SERVICE_STATUS_RESTRICTED;
        case 2: return SERVICE_STATUS_VALID;
        case 3: return SERVICE_STATUS_RESTRICTED_REGIONAL_SERVICE;
        case 4: return SERVICE_STATUS_HIBERNATE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ServiceStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ServiceStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServiceStatus>() {
            public ServiceStatus findValueByNumber(int number) {
              return ServiceStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final ServiceStatus[] VALUES = {
      SERVICE_STATUS_NO_SERVICE, SERVICE_STATUS_RESTRICTED, SERVICE_STATUS_VALID, SERVICE_STATUS_RESTRICTED_REGIONAL_SERVICE, SERVICE_STATUS_HIBERNATE, 
    };
    
    public static ServiceStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ServiceStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ServiceStatus)
  }
  
  public enum ServiceDomain
      implements com.google.protobuf.ProtocolMessageEnum {
    SERVICE_DOMAIN_NO_SERVICE(0, 0),
    SERVICE_DOMAIN_CS(1, 1),
    SERVICE_DOMAIN_PS(2, 2),
    SERVICE_DOMAIN_PS_CS(3, 3),
    SERVICE_DOMAIN_NOT_REGISTERED(4, 4),
    SERVICE_DOMAIN_CDMA(5, 255),
    ;
    
    public static final int SERVICE_DOMAIN_NO_SERVICE_VALUE = 0;
    public static final int SERVICE_DOMAIN_CS_VALUE = 1;
    public static final int SERVICE_DOMAIN_PS_VALUE = 2;
    public static final int SERVICE_DOMAIN_PS_CS_VALUE = 3;
    public static final int SERVICE_DOMAIN_NOT_REGISTERED_VALUE = 4;
    public static final int SERVICE_DOMAIN_CDMA_VALUE = 255;
    
    
    public final int getNumber() { return value; }
    
    public static ServiceDomain valueOf(int value) {
      switch (value) {
        case 0: return SERVICE_DOMAIN_NO_SERVICE;
        case 1: return SERVICE_DOMAIN_CS;
        case 2: return SERVICE_DOMAIN_PS;
        case 3: return SERVICE_DOMAIN_PS_CS;
        case 4: return SERVICE_DOMAIN_NOT_REGISTERED;
        case 255: return SERVICE_DOMAIN_CDMA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ServiceDomain>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ServiceDomain>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ServiceDomain>() {
            public ServiceDomain findValueByNumber(int number) {
              return ServiceDomain.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final ServiceDomain[] VALUES = {
      SERVICE_DOMAIN_NO_SERVICE, SERVICE_DOMAIN_CS, SERVICE_DOMAIN_PS, SERVICE_DOMAIN_PS_CS, SERVICE_DOMAIN_NOT_REGISTERED, SERVICE_DOMAIN_CDMA, 
    };
    
    public static ServiceDomain valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ServiceDomain(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ServiceDomain)
  }
  
  public enum OperationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    OPERATION_MODE_NO_SERVICE(0, 0),
    OPERATION_MODE_AMPS(1, 1),
    OPERATION_MODE_CDMA(2, 2),
    OPERATION_MODE_GSM_GPRS(3, 3),
    OPERATION_MODE_HDR(4, 4),
    OPERATION_MODE_WCDMA(5, 5),
    OPERATION_MODE_GPS(6, 6),
    OPERATION_MODE_GSM_WCDMA(7, 7),
    OPERATION_MODE_CDMA_HDR(8, 8),
    OPERATION_MODE_TD_SCDMA(9, 15),
    ;
    
    public static final int OPERATION_MODE_NO_SERVICE_VALUE = 0;
    public static final int OPERATION_MODE_AMPS_VALUE = 1;
    public static final int OPERATION_MODE_CDMA_VALUE = 2;
    public static final int OPERATION_MODE_GSM_GPRS_VALUE = 3;
    public static final int OPERATION_MODE_HDR_VALUE = 4;
    public static final int OPERATION_MODE_WCDMA_VALUE = 5;
    public static final int OPERATION_MODE_GPS_VALUE = 6;
    public static final int OPERATION_MODE_GSM_WCDMA_VALUE = 7;
    public static final int OPERATION_MODE_CDMA_HDR_VALUE = 8;
    public static final int OPERATION_MODE_TD_SCDMA_VALUE = 15;
    
    
    public final int getNumber() { return value; }
    
    public static OperationMode valueOf(int value) {
      switch (value) {
        case 0: return OPERATION_MODE_NO_SERVICE;
        case 1: return OPERATION_MODE_AMPS;
        case 2: return OPERATION_MODE_CDMA;
        case 3: return OPERATION_MODE_GSM_GPRS;
        case 4: return OPERATION_MODE_HDR;
        case 5: return OPERATION_MODE_WCDMA;
        case 6: return OPERATION_MODE_GPS;
        case 7: return OPERATION_MODE_GSM_WCDMA;
        case 8: return OPERATION_MODE_CDMA_HDR;
        case 15: return OPERATION_MODE_TD_SCDMA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<OperationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<OperationMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<OperationMode>() {
            public OperationMode findValueByNumber(int number) {
              return OperationMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(4);
    }
    
    private static final OperationMode[] VALUES = {
      OPERATION_MODE_NO_SERVICE, OPERATION_MODE_AMPS, OPERATION_MODE_CDMA, OPERATION_MODE_GSM_GPRS, OPERATION_MODE_HDR, OPERATION_MODE_WCDMA, OPERATION_MODE_GPS, OPERATION_MODE_GSM_WCDMA, OPERATION_MODE_CDMA_HDR, OPERATION_MODE_TD_SCDMA, 
    };
    
    public static OperationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private OperationMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.OperationMode)
  }
  
  public enum SimState
      implements com.google.protobuf.ProtocolMessageEnum {
    SIM_STATE_INVALID(0, 0),
    SIM_STATE_VALID(1, 1),
    SIM_STATE_CS_INVALID(2, 2),
    SIM_STATE_PS_INVALID(3, 3),
    SIM_STATE_PS_CS_INVALID(4, 4),
    SIM_STATE_ROMSIM(5, 240),
    SIM_STATE_NO_SIM(6, 250),
    ;
    
    public static final int SIM_STATE_INVALID_VALUE = 0;
    public static final int SIM_STATE_VALID_VALUE = 1;
    public static final int SIM_STATE_CS_INVALID_VALUE = 2;
    public static final int SIM_STATE_PS_INVALID_VALUE = 3;
    public static final int SIM_STATE_PS_CS_INVALID_VALUE = 4;
    public static final int SIM_STATE_ROMSIM_VALUE = 240;
    public static final int SIM_STATE_NO_SIM_VALUE = 250;
    
    
    public final int getNumber() { return value; }
    
    public static SimState valueOf(int value) {
      switch (value) {
        case 0: return SIM_STATE_INVALID;
        case 1: return SIM_STATE_VALID;
        case 2: return SIM_STATE_CS_INVALID;
        case 3: return SIM_STATE_PS_INVALID;
        case 4: return SIM_STATE_PS_CS_INVALID;
        case 240: return SIM_STATE_ROMSIM;
        case 250: return SIM_STATE_NO_SIM;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SimState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SimState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SimState>() {
            public SimState findValueByNumber(int number) {
              return SimState.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(5);
    }
    
    private static final SimState[] VALUES = {
      SIM_STATE_INVALID, SIM_STATE_VALID, SIM_STATE_CS_INVALID, SIM_STATE_PS_INVALID, SIM_STATE_PS_CS_INVALID, SIM_STATE_ROMSIM, SIM_STATE_NO_SIM, 
    };
    
    public static SimState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SimState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.SimState)
  }
  
  public enum SubOperationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    SUB_OPERATION_MODE_NO_SERVICE(0, 0),
    SUB_OPERATION_MODE_GSM(1, 1),
    SUB_OPERATION_MODE_GPRS(2, 2),
    SUB_OPERATION_MODE_EDGE(3, 3),
    SUB_OPERATION_MODE_WCDMA(4, 4),
    SUB_OPERATION_MODE_HSDPA(5, 5),
    SUB_OPERATION_MODE_HSUPA(6, 6),
    SUB_OPERATION_MODE_HSUPA_HSDPA(7, 7),
    SUB_OPERATION_MODE_TD_SCDMA(8, 8),
    SUB_OPERATION_MODE_HSPA_PLUS(9, 9),
    SUB_OPERATION_MODE_EVDO_0(10, 10),
    SUB_OPERATION_MODE_EVDO_A(11, 11),
    SUB_OPERATION_MODE_EVDO_B(12, 12),
    SUB_OPERATION_MODE_CDMA2000_1X(13, 13),
    SUB_OPERATION_MODE_UMB(14, 14),
    SUB_OPERATION_MODE_CDMA2000_1X_EVDV(15, 15),
    SUB_OPERATION_MODE_CDMA2000_3X(16, 16),
    SUB_OPERATION_MODE_HSPA_PLUS_64QAM(17, 17),
    SUB_OPERATION_MODE_HSPA_PLUS_MIMO(18, 18),
    ;
    
    public static final int SUB_OPERATION_MODE_NO_SERVICE_VALUE = 0;
    public static final int SUB_OPERATION_MODE_GSM_VALUE = 1;
    public static final int SUB_OPERATION_MODE_GPRS_VALUE = 2;
    public static final int SUB_OPERATION_MODE_EDGE_VALUE = 3;
    public static final int SUB_OPERATION_MODE_WCDMA_VALUE = 4;
    public static final int SUB_OPERATION_MODE_HSDPA_VALUE = 5;
    public static final int SUB_OPERATION_MODE_HSUPA_VALUE = 6;
    public static final int SUB_OPERATION_MODE_HSUPA_HSDPA_VALUE = 7;
    public static final int SUB_OPERATION_MODE_TD_SCDMA_VALUE = 8;
    public static final int SUB_OPERATION_MODE_HSPA_PLUS_VALUE = 9;
    public static final int SUB_OPERATION_MODE_EVDO_0_VALUE = 10;
    public static final int SUB_OPERATION_MODE_EVDO_A_VALUE = 11;
    public static final int SUB_OPERATION_MODE_EVDO_B_VALUE = 12;
    public static final int SUB_OPERATION_MODE_CDMA2000_1X_VALUE = 13;
    public static final int SUB_OPERATION_MODE_UMB_VALUE = 14;
    public static final int SUB_OPERATION_MODE_CDMA2000_1X_EVDV_VALUE = 15;
    public static final int SUB_OPERATION_MODE_CDMA2000_3X_VALUE = 16;
    public static final int SUB_OPERATION_MODE_HSPA_PLUS_64QAM_VALUE = 17;
    public static final int SUB_OPERATION_MODE_HSPA_PLUS_MIMO_VALUE = 18;
    
    
    public final int getNumber() { return value; }
    
    public static SubOperationMode valueOf(int value) {
      switch (value) {
        case 0: return SUB_OPERATION_MODE_NO_SERVICE;
        case 1: return SUB_OPERATION_MODE_GSM;
        case 2: return SUB_OPERATION_MODE_GPRS;
        case 3: return SUB_OPERATION_MODE_EDGE;
        case 4: return SUB_OPERATION_MODE_WCDMA;
        case 5: return SUB_OPERATION_MODE_HSDPA;
        case 6: return SUB_OPERATION_MODE_HSUPA;
        case 7: return SUB_OPERATION_MODE_HSUPA_HSDPA;
        case 8: return SUB_OPERATION_MODE_TD_SCDMA;
        case 9: return SUB_OPERATION_MODE_HSPA_PLUS;
        case 10: return SUB_OPERATION_MODE_EVDO_0;
        case 11: return SUB_OPERATION_MODE_EVDO_A;
        case 12: return SUB_OPERATION_MODE_EVDO_B;
        case 13: return SUB_OPERATION_MODE_CDMA2000_1X;
        case 14: return SUB_OPERATION_MODE_UMB;
        case 15: return SUB_OPERATION_MODE_CDMA2000_1X_EVDV;
        case 16: return SUB_OPERATION_MODE_CDMA2000_3X;
        case 17: return SUB_OPERATION_MODE_HSPA_PLUS_64QAM;
        case 18: return SUB_OPERATION_MODE_HSPA_PLUS_MIMO;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SubOperationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SubOperationMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SubOperationMode>() {
            public SubOperationMode findValueByNumber(int number) {
              return SubOperationMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(6);
    }
    
    private static final SubOperationMode[] VALUES = {
      SUB_OPERATION_MODE_NO_SERVICE, SUB_OPERATION_MODE_GSM, SUB_OPERATION_MODE_GPRS, SUB_OPERATION_MODE_EDGE, SUB_OPERATION_MODE_WCDMA, SUB_OPERATION_MODE_HSDPA, SUB_OPERATION_MODE_HSUPA, SUB_OPERATION_MODE_HSUPA_HSDPA, SUB_OPERATION_MODE_TD_SCDMA, SUB_OPERATION_MODE_HSPA_PLUS, SUB_OPERATION_MODE_EVDO_0, SUB_OPERATION_MODE_EVDO_A, SUB_OPERATION_MODE_EVDO_B, SUB_OPERATION_MODE_CDMA2000_1X, SUB_OPERATION_MODE_UMB, SUB_OPERATION_MODE_CDMA2000_1X_EVDV, SUB_OPERATION_MODE_CDMA2000_3X, SUB_OPERATION_MODE_HSPA_PLUS_64QAM, SUB_OPERATION_MODE_HSPA_PLUS_MIMO, 
    };
    
    public static SubOperationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SubOperationMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.SubOperationMode)
  }
  
  public enum WirelessMode
      implements com.google.protobuf.ProtocolMessageEnum {
    WIRELESS_MODE_B(0, 0),
    WIRELESS_MODE_G(1, 1),
    WIRELESS_MODE_N(2, 2),
    WIRELESS_MODE_BG(3, 3),
    WIRELESS_MODE_NG(4, 4),
    WIRELESS_MODE_BGN(5, 5),
    WIRELESS_MODE_A(6, 6),
    WIRELESS_MODE_AN(7, 7),
    WIRELESS_MODE_AC(8, 8),
    ;
    
    public static final int WIRELESS_MODE_B_VALUE = 0;
    public static final int WIRELESS_MODE_G_VALUE = 1;
    public static final int WIRELESS_MODE_N_VALUE = 2;
    public static final int WIRELESS_MODE_BG_VALUE = 3;
    public static final int WIRELESS_MODE_NG_VALUE = 4;
    public static final int WIRELESS_MODE_BGN_VALUE = 5;
    public static final int WIRELESS_MODE_A_VALUE = 6;
    public static final int WIRELESS_MODE_AN_VALUE = 7;
    public static final int WIRELESS_MODE_AC_VALUE = 8;
    
    
    public final int getNumber() { return value; }
    
    public static WirelessMode valueOf(int value) {
      switch (value) {
        case 0: return WIRELESS_MODE_B;
        case 1: return WIRELESS_MODE_G;
        case 2: return WIRELESS_MODE_N;
        case 3: return WIRELESS_MODE_BG;
        case 4: return WIRELESS_MODE_NG;
        case 5: return WIRELESS_MODE_BGN;
        case 6: return WIRELESS_MODE_A;
        case 7: return WIRELESS_MODE_AN;
        case 8: return WIRELESS_MODE_AC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WirelessMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WirelessMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WirelessMode>() {
            public WirelessMode findValueByNumber(int number) {
              return WirelessMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(7);
    }
    
    private static final WirelessMode[] VALUES = {
      WIRELESS_MODE_B, WIRELESS_MODE_G, WIRELESS_MODE_N, WIRELESS_MODE_BG, WIRELESS_MODE_NG, WIRELESS_MODE_BGN, WIRELESS_MODE_A, WIRELESS_MODE_AN, WIRELESS_MODE_AC, 
    };
    
    public static WirelessMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WirelessMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WirelessMode)
  }
  
  public enum WpaVersion
      implements com.google.protobuf.ProtocolMessageEnum {
    WPA_VERSION_WPA(0, 0),
    WPA_VERSION_WPA2(1, 1),
    WPA_VERSION_UNKNOWN(2, 2),
    ;
    
    public static final int WPA_VERSION_WPA_VALUE = 0;
    public static final int WPA_VERSION_WPA2_VALUE = 1;
    public static final int WPA_VERSION_UNKNOWN_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static WpaVersion valueOf(int value) {
      switch (value) {
        case 0: return WPA_VERSION_WPA;
        case 1: return WPA_VERSION_WPA2;
        case 2: return WPA_VERSION_UNKNOWN;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WpaVersion>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WpaVersion>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WpaVersion>() {
            public WpaVersion findValueByNumber(int number) {
              return WpaVersion.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(8);
    }
    
    private static final WpaVersion[] VALUES = {
      WPA_VERSION_WPA, WPA_VERSION_WPA2, WPA_VERSION_UNKNOWN, 
    };
    
    public static WpaVersion valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WpaVersion(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WpaVersion)
  }
  
  public enum KeyManagement
      implements com.google.protobuf.ProtocolMessageEnum {
    KEY_MANAGEMENT_PSK(0, 0),
    KEY_MANAGEMENT_IEEE8021X(1, 1),
    ;
    
    public static final int KEY_MANAGEMENT_PSK_VALUE = 0;
    public static final int KEY_MANAGEMENT_IEEE8021X_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static KeyManagement valueOf(int value) {
      switch (value) {
        case 0: return KEY_MANAGEMENT_PSK;
        case 1: return KEY_MANAGEMENT_IEEE8021X;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<KeyManagement>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<KeyManagement>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<KeyManagement>() {
            public KeyManagement findValueByNumber(int number) {
              return KeyManagement.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(9);
    }
    
    private static final KeyManagement[] VALUES = {
      KEY_MANAGEMENT_PSK, KEY_MANAGEMENT_IEEE8021X, 
    };
    
    public static KeyManagement valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private KeyManagement(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.KeyManagement)
  }
  
  public enum PhoneNumberType
      implements com.google.protobuf.ProtocolMessageEnum {
    PHONE_NUMBER_TYPE_SMS(0, 0),
    PHONE_NUMBER_TYPE_DIAL(1, 1),
    ;
    
    public static final int PHONE_NUMBER_TYPE_SMS_VALUE = 0;
    public static final int PHONE_NUMBER_TYPE_DIAL_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static PhoneNumberType valueOf(int value) {
      switch (value) {
        case 0: return PHONE_NUMBER_TYPE_SMS;
        case 1: return PHONE_NUMBER_TYPE_DIAL;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PhoneNumberType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PhoneNumberType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PhoneNumberType>() {
            public PhoneNumberType findValueByNumber(int number) {
              return PhoneNumberType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(10);
    }
    
    private static final PhoneNumberType[] VALUES = {
      PHONE_NUMBER_TYPE_SMS, PHONE_NUMBER_TYPE_DIAL, 
    };
    
    public static PhoneNumberType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PhoneNumberType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.PhoneNumberType)
  }
  
  public enum DeviceType
      implements com.google.protobuf.ProtocolMessageEnum {
    DEVICE_TYPE_ZIGBEE(0, 0),
    DEVICE_TYPE_CAMERA(1, 1),
    ;
    
    public static final int DEVICE_TYPE_ZIGBEE_VALUE = 0;
    public static final int DEVICE_TYPE_CAMERA_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static DeviceType valueOf(int value) {
      switch (value) {
        case 0: return DEVICE_TYPE_ZIGBEE;
        case 1: return DEVICE_TYPE_CAMERA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DeviceType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceType>() {
            public DeviceType findValueByNumber(int number) {
              return DeviceType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(11);
    }
    
    private static final DeviceType[] VALUES = {
      DEVICE_TYPE_ZIGBEE, DEVICE_TYPE_CAMERA, 
    };
    
    public static DeviceType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DeviceType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.DeviceType)
  }
  
  public enum PowerSource
      implements com.google.protobuf.ProtocolMessageEnum {
    POWER_SOURCE_UNKNOWN(0, 0),
    POWER_SOURCE_MAINS_1_PHASE(1, 1),
    POWER_SOURCE_MAINS_3_PHASE(2, 2),
    POWER_SOURCE_BATTERY(3, 3),
    POWER_SOURCE_DC(4, 4),
    POWER_SOURCE_EMERG_MAINS_CONST_PWR(5, 5),
    POWER_SOURCE_EMERG_MAINS_XFER_SW(6, 6),
    ;
    
    public static final int POWER_SOURCE_UNKNOWN_VALUE = 0;
    public static final int POWER_SOURCE_MAINS_1_PHASE_VALUE = 1;
    public static final int POWER_SOURCE_MAINS_3_PHASE_VALUE = 2;
    public static final int POWER_SOURCE_BATTERY_VALUE = 3;
    public static final int POWER_SOURCE_DC_VALUE = 4;
    public static final int POWER_SOURCE_EMERG_MAINS_CONST_PWR_VALUE = 5;
    public static final int POWER_SOURCE_EMERG_MAINS_XFER_SW_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static PowerSource valueOf(int value) {
      switch (value) {
        case 0: return POWER_SOURCE_UNKNOWN;
        case 1: return POWER_SOURCE_MAINS_1_PHASE;
        case 2: return POWER_SOURCE_MAINS_3_PHASE;
        case 3: return POWER_SOURCE_BATTERY;
        case 4: return POWER_SOURCE_DC;
        case 5: return POWER_SOURCE_EMERG_MAINS_CONST_PWR;
        case 6: return POWER_SOURCE_EMERG_MAINS_XFER_SW;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PowerSource>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PowerSource>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PowerSource>() {
            public PowerSource findValueByNumber(int number) {
              return PowerSource.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(12);
    }
    
    private static final PowerSource[] VALUES = {
      POWER_SOURCE_UNKNOWN, POWER_SOURCE_MAINS_1_PHASE, POWER_SOURCE_MAINS_3_PHASE, POWER_SOURCE_BATTERY, POWER_SOURCE_DC, POWER_SOURCE_EMERG_MAINS_CONST_PWR, POWER_SOURCE_EMERG_MAINS_XFER_SW, 
    };
    
    public static PowerSource valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PowerSource(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.PowerSource)
  }
  
  public enum DeviceId
      implements com.google.protobuf.ProtocolMessageEnum {
    DEVICE_ID_ON_OFF_SWITCH(0, 0),
    DEVICE_ID_LEVEL_CONTROL_SWITCH(1, 1),
    DEVICE_ID_ON_OFF_OUTPUT(2, 2),
    DEVICE_ID_LEVEL_CONTROLLABLE_OUTPUT(3, 3),
    DEVICE_ID_SCENE_SELECTOR(4, 4),
    DEVICE_ID_CONFIGURATION_TOOL(5, 5),
    DEVICE_ID_REMOTE_CONTROL(6, 6),
    DEVICE_ID_COMBINED_INTERFACE(7, 7),
    DEVICE_ID_RANGE_EXTENDER(8, 8),
    DEVICE_ID_MAINS_POWER_OUTLET(9, 9),
    DEVICE_ID_DOOR_LOCK(10, 10),
    DEVICE_ID_DOOR_LOCK_CONTROLLER(11, 11),
    DEVICE_ID_SIMPLE_SENSOR(12, 12),
    DEVICE_ID_CONSUMPTION_AWARENESS_DEVICE(13, 13),
    DEVICE_ID_HOME_GATEWAY(14, 80),
    DEVICE_ID_SMART_PLUG(15, 81),
    DEVICE_ID_WHITE_GOODS(16, 82),
    DEVICE_ID_METER_INTERFACE(17, 83),
    DEVICE_ID_TEST_DEVICE(18, 255),
    DEVICE_ID_ON_OFF_LIGHT(19, 256),
    DEVICE_ID_DIMMABLE_LIGHT(20, 257),
    DEVICE_ID_COLORED_DIMMABLE_LIGHT(21, 258),
    DEVICE_ID_ON_OFF_LIGHT_SWITCH(22, 259),
    DEVICE_ID_DIMMER_SWITCH(23, 260),
    DEVICE_ID_COLOR_DIMMER_SWITCH(24, 261),
    DEVICE_ID_LIGHT_SENSOR(25, 262),
    DEVICE_ID_OCCUPANCY_SENSOR(26, 263),
    DEVICE_ID_SHADE(27, 512),
    DEVICE_ID_SHADE_CONTROLLER(28, 513),
    DEVICE_ID_WINDOW_COVERING_DEVICE(29, 514),
    DEVICE_ID_WINDOW_COVERING_CONTROLLER(30, 515),
    DEVICE_ID_HEATING_COOLING_UNIT(31, 768),
    DEVICE_ID_THERMOSTAT(32, 769),
    DEVICE_ID_TEMPERATURE_SENSOR(33, 770),
    DEVICE_ID_PUMP(34, 771),
    DEVICE_ID_PUMP_CONTROLLER(35, 772),
    DEVICE_ID_PRESSURE_SENSOR(36, 773),
    DEVICE_ID_FLOW_SENSOR(37, 774),
    DEVICE_ID_MINI_SPLIT_AC(38, 775),
    DEVICE_ID_IAS_CONTROL_INDICATING_EQUIPMENT(39, 1024),
    DEVICE_ID_IAS_ANCILLARY_CONTROL_EQUIPMENT(40, 1025),
    DEVICE_ID_IAS_ZONE(41, 1026),
    DEVICE_ID_IAS_WARNING_DEVICE(42, 1027),
    ;
    
    public static final int DEVICE_ID_ON_OFF_SWITCH_VALUE = 0;
    public static final int DEVICE_ID_LEVEL_CONTROL_SWITCH_VALUE = 1;
    public static final int DEVICE_ID_ON_OFF_OUTPUT_VALUE = 2;
    public static final int DEVICE_ID_LEVEL_CONTROLLABLE_OUTPUT_VALUE = 3;
    public static final int DEVICE_ID_SCENE_SELECTOR_VALUE = 4;
    public static final int DEVICE_ID_CONFIGURATION_TOOL_VALUE = 5;
    public static final int DEVICE_ID_REMOTE_CONTROL_VALUE = 6;
    public static final int DEVICE_ID_COMBINED_INTERFACE_VALUE = 7;
    public static final int DEVICE_ID_RANGE_EXTENDER_VALUE = 8;
    public static final int DEVICE_ID_MAINS_POWER_OUTLET_VALUE = 9;
    public static final int DEVICE_ID_DOOR_LOCK_VALUE = 10;
    public static final int DEVICE_ID_DOOR_LOCK_CONTROLLER_VALUE = 11;
    public static final int DEVICE_ID_SIMPLE_SENSOR_VALUE = 12;
    public static final int DEVICE_ID_CONSUMPTION_AWARENESS_DEVICE_VALUE = 13;
    public static final int DEVICE_ID_HOME_GATEWAY_VALUE = 80;
    public static final int DEVICE_ID_SMART_PLUG_VALUE = 81;
    public static final int DEVICE_ID_WHITE_GOODS_VALUE = 82;
    public static final int DEVICE_ID_METER_INTERFACE_VALUE = 83;
    public static final int DEVICE_ID_TEST_DEVICE_VALUE = 255;
    public static final int DEVICE_ID_ON_OFF_LIGHT_VALUE = 256;
    public static final int DEVICE_ID_DIMMABLE_LIGHT_VALUE = 257;
    public static final int DEVICE_ID_COLORED_DIMMABLE_LIGHT_VALUE = 258;
    public static final int DEVICE_ID_ON_OFF_LIGHT_SWITCH_VALUE = 259;
    public static final int DEVICE_ID_DIMMER_SWITCH_VALUE = 260;
    public static final int DEVICE_ID_COLOR_DIMMER_SWITCH_VALUE = 261;
    public static final int DEVICE_ID_LIGHT_SENSOR_VALUE = 262;
    public static final int DEVICE_ID_OCCUPANCY_SENSOR_VALUE = 263;
    public static final int DEVICE_ID_SHADE_VALUE = 512;
    public static final int DEVICE_ID_SHADE_CONTROLLER_VALUE = 513;
    public static final int DEVICE_ID_WINDOW_COVERING_DEVICE_VALUE = 514;
    public static final int DEVICE_ID_WINDOW_COVERING_CONTROLLER_VALUE = 515;
    public static final int DEVICE_ID_HEATING_COOLING_UNIT_VALUE = 768;
    public static final int DEVICE_ID_THERMOSTAT_VALUE = 769;
    public static final int DEVICE_ID_TEMPERATURE_SENSOR_VALUE = 770;
    public static final int DEVICE_ID_PUMP_VALUE = 771;
    public static final int DEVICE_ID_PUMP_CONTROLLER_VALUE = 772;
    public static final int DEVICE_ID_PRESSURE_SENSOR_VALUE = 773;
    public static final int DEVICE_ID_FLOW_SENSOR_VALUE = 774;
    public static final int DEVICE_ID_MINI_SPLIT_AC_VALUE = 775;
    public static final int DEVICE_ID_IAS_CONTROL_INDICATING_EQUIPMENT_VALUE = 1024;
    public static final int DEVICE_ID_IAS_ANCILLARY_CONTROL_EQUIPMENT_VALUE = 1025;
    public static final int DEVICE_ID_IAS_ZONE_VALUE = 1026;
    public static final int DEVICE_ID_IAS_WARNING_DEVICE_VALUE = 1027;
    
    
    public final int getNumber() { return value; }
    
    public static DeviceId valueOf(int value) {
      switch (value) {
        case 0: return DEVICE_ID_ON_OFF_SWITCH;
        case 1: return DEVICE_ID_LEVEL_CONTROL_SWITCH;
        case 2: return DEVICE_ID_ON_OFF_OUTPUT;
        case 3: return DEVICE_ID_LEVEL_CONTROLLABLE_OUTPUT;
        case 4: return DEVICE_ID_SCENE_SELECTOR;
        case 5: return DEVICE_ID_CONFIGURATION_TOOL;
        case 6: return DEVICE_ID_REMOTE_CONTROL;
        case 7: return DEVICE_ID_COMBINED_INTERFACE;
        case 8: return DEVICE_ID_RANGE_EXTENDER;
        case 9: return DEVICE_ID_MAINS_POWER_OUTLET;
        case 10: return DEVICE_ID_DOOR_LOCK;
        case 11: return DEVICE_ID_DOOR_LOCK_CONTROLLER;
        case 12: return DEVICE_ID_SIMPLE_SENSOR;
        case 13: return DEVICE_ID_CONSUMPTION_AWARENESS_DEVICE;
        case 80: return DEVICE_ID_HOME_GATEWAY;
        case 81: return DEVICE_ID_SMART_PLUG;
        case 82: return DEVICE_ID_WHITE_GOODS;
        case 83: return DEVICE_ID_METER_INTERFACE;
        case 255: return DEVICE_ID_TEST_DEVICE;
        case 256: return DEVICE_ID_ON_OFF_LIGHT;
        case 257: return DEVICE_ID_DIMMABLE_LIGHT;
        case 258: return DEVICE_ID_COLORED_DIMMABLE_LIGHT;
        case 259: return DEVICE_ID_ON_OFF_LIGHT_SWITCH;
        case 260: return DEVICE_ID_DIMMER_SWITCH;
        case 261: return DEVICE_ID_COLOR_DIMMER_SWITCH;
        case 262: return DEVICE_ID_LIGHT_SENSOR;
        case 263: return DEVICE_ID_OCCUPANCY_SENSOR;
        case 512: return DEVICE_ID_SHADE;
        case 513: return DEVICE_ID_SHADE_CONTROLLER;
        case 514: return DEVICE_ID_WINDOW_COVERING_DEVICE;
        case 515: return DEVICE_ID_WINDOW_COVERING_CONTROLLER;
        case 768: return DEVICE_ID_HEATING_COOLING_UNIT;
        case 769: return DEVICE_ID_THERMOSTAT;
        case 770: return DEVICE_ID_TEMPERATURE_SENSOR;
        case 771: return DEVICE_ID_PUMP;
        case 772: return DEVICE_ID_PUMP_CONTROLLER;
        case 773: return DEVICE_ID_PRESSURE_SENSOR;
        case 774: return DEVICE_ID_FLOW_SENSOR;
        case 775: return DEVICE_ID_MINI_SPLIT_AC;
        case 1024: return DEVICE_ID_IAS_CONTROL_INDICATING_EQUIPMENT;
        case 1025: return DEVICE_ID_IAS_ANCILLARY_CONTROL_EQUIPMENT;
        case 1026: return DEVICE_ID_IAS_ZONE;
        case 1027: return DEVICE_ID_IAS_WARNING_DEVICE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<DeviceId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DeviceId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeviceId>() {
            public DeviceId findValueByNumber(int number) {
              return DeviceId.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(13);
    }
    
    private static final DeviceId[] VALUES = {
      DEVICE_ID_ON_OFF_SWITCH, DEVICE_ID_LEVEL_CONTROL_SWITCH, DEVICE_ID_ON_OFF_OUTPUT, DEVICE_ID_LEVEL_CONTROLLABLE_OUTPUT, DEVICE_ID_SCENE_SELECTOR, DEVICE_ID_CONFIGURATION_TOOL, DEVICE_ID_REMOTE_CONTROL, DEVICE_ID_COMBINED_INTERFACE, DEVICE_ID_RANGE_EXTENDER, DEVICE_ID_MAINS_POWER_OUTLET, DEVICE_ID_DOOR_LOCK, DEVICE_ID_DOOR_LOCK_CONTROLLER, DEVICE_ID_SIMPLE_SENSOR, DEVICE_ID_CONSUMPTION_AWARENESS_DEVICE, DEVICE_ID_HOME_GATEWAY, DEVICE_ID_SMART_PLUG, DEVICE_ID_WHITE_GOODS, DEVICE_ID_METER_INTERFACE, DEVICE_ID_TEST_DEVICE, DEVICE_ID_ON_OFF_LIGHT, DEVICE_ID_DIMMABLE_LIGHT, DEVICE_ID_COLORED_DIMMABLE_LIGHT, DEVICE_ID_ON_OFF_LIGHT_SWITCH, DEVICE_ID_DIMMER_SWITCH, DEVICE_ID_COLOR_DIMMER_SWITCH, DEVICE_ID_LIGHT_SENSOR, DEVICE_ID_OCCUPANCY_SENSOR, DEVICE_ID_SHADE, DEVICE_ID_SHADE_CONTROLLER, DEVICE_ID_WINDOW_COVERING_DEVICE, DEVICE_ID_WINDOW_COVERING_CONTROLLER, DEVICE_ID_HEATING_COOLING_UNIT, DEVICE_ID_THERMOSTAT, DEVICE_ID_TEMPERATURE_SENSOR, DEVICE_ID_PUMP, DEVICE_ID_PUMP_CONTROLLER, DEVICE_ID_PRESSURE_SENSOR, DEVICE_ID_FLOW_SENSOR, DEVICE_ID_MINI_SPLIT_AC, DEVICE_ID_IAS_CONTROL_INDICATING_EQUIPMENT, DEVICE_ID_IAS_ANCILLARY_CONTROL_EQUIPMENT, DEVICE_ID_IAS_ZONE, DEVICE_ID_IAS_WARNING_DEVICE, 
    };
    
    public static DeviceId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private DeviceId(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.DeviceId)
  }
  
  public enum TargetType
      implements com.google.protobuf.ProtocolMessageEnum {
    TARGET_TYPE_NOT_SPECIFIED(0, 0),
    TARGET_TYPE_DEVICE(1, 1),
    TARGET_TYPE_GROUP(2, 2),
    ;
    
    public static final int TARGET_TYPE_NOT_SPECIFIED_VALUE = 0;
    public static final int TARGET_TYPE_DEVICE_VALUE = 1;
    public static final int TARGET_TYPE_GROUP_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static TargetType valueOf(int value) {
      switch (value) {
        case 0: return TARGET_TYPE_NOT_SPECIFIED;
        case 1: return TARGET_TYPE_DEVICE;
        case 2: return TARGET_TYPE_GROUP;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<TargetType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TargetType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TargetType>() {
            public TargetType findValueByNumber(int number) {
              return TargetType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(14);
    }
    
    private static final TargetType[] VALUES = {
      TARGET_TYPE_NOT_SPECIFIED, TARGET_TYPE_DEVICE, TARGET_TYPE_GROUP, 
    };
    
    public static TargetType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private TargetType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.TargetType)
  }
  
  public enum MeasurementType
      implements com.google.protobuf.ProtocolMessageEnum {
    MEASUREMENT_TYPE_NONE(0, 0),
    MEASUREMENT_TYPE_ACTIVE(1, 1),
    MEASUREMENT_TYPE_REACTIVE(2, 2),
    MEASUREMENT_TYPE_APPARENT(3, 4),
    MEASUREMENT_TYPE_PHASE_A(4, 8),
    MEASUREMENT_TYPE_PHASE_B(5, 16),
    MEASUREMENT_TYPE_PHASE_C(6, 32),
    MEASUREMENT_TYPE_DC(7, 64),
    MEASUREMENT_TYPE_HARMONICS(8, 128),
    MEASUREMENT_TYPE_POWER_QUALITY(9, 256),
    ;
    
    public static final int MEASUREMENT_TYPE_NONE_VALUE = 0;
    public static final int MEASUREMENT_TYPE_ACTIVE_VALUE = 1;
    public static final int MEASUREMENT_TYPE_REACTIVE_VALUE = 2;
    public static final int MEASUREMENT_TYPE_APPARENT_VALUE = 4;
    public static final int MEASUREMENT_TYPE_PHASE_A_VALUE = 8;
    public static final int MEASUREMENT_TYPE_PHASE_B_VALUE = 16;
    public static final int MEASUREMENT_TYPE_PHASE_C_VALUE = 32;
    public static final int MEASUREMENT_TYPE_DC_VALUE = 64;
    public static final int MEASUREMENT_TYPE_HARMONICS_VALUE = 128;
    public static final int MEASUREMENT_TYPE_POWER_QUALITY_VALUE = 256;
    
    
    public final int getNumber() { return value; }
    
    public static MeasurementType valueOf(int value) {
      switch (value) {
        case 0: return MEASUREMENT_TYPE_NONE;
        case 1: return MEASUREMENT_TYPE_ACTIVE;
        case 2: return MEASUREMENT_TYPE_REACTIVE;
        case 4: return MEASUREMENT_TYPE_APPARENT;
        case 8: return MEASUREMENT_TYPE_PHASE_A;
        case 16: return MEASUREMENT_TYPE_PHASE_B;
        case 32: return MEASUREMENT_TYPE_PHASE_C;
        case 64: return MEASUREMENT_TYPE_DC;
        case 128: return MEASUREMENT_TYPE_HARMONICS;
        case 256: return MEASUREMENT_TYPE_POWER_QUALITY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MeasurementType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MeasurementType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MeasurementType>() {
            public MeasurementType findValueByNumber(int number) {
              return MeasurementType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(15);
    }
    
    private static final MeasurementType[] VALUES = {
      MEASUREMENT_TYPE_NONE, MEASUREMENT_TYPE_ACTIVE, MEASUREMENT_TYPE_REACTIVE, MEASUREMENT_TYPE_APPARENT, MEASUREMENT_TYPE_PHASE_A, MEASUREMENT_TYPE_PHASE_B, MEASUREMENT_TYPE_PHASE_C, MEASUREMENT_TYPE_DC, MEASUREMENT_TYPE_HARMONICS, MEASUREMENT_TYPE_POWER_QUALITY, 
    };
    
    public static MeasurementType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private MeasurementType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.MeasurementType)
  }
  
  public enum UnitOfMeasure
      implements com.google.protobuf.ProtocolMessageEnum {
    UNIT_OF_MEASURE_KILO_WATT_HOURS(0, 0),
    UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR(1, 1),
    UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR(2, 2),
    UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR(3, 3),
    UNIT_OF_MEASURE_US_GALLONS_PER_HOUR(4, 4),
    UNIT_OF_MEASURE_IMP_GALLONS_PER_HOUR(5, 5),
    UNIT_OF_MEASURE_BTU_PER_HOUR(6, 6),
    UNIT_OF_MEASURE_LITERS_PER_HOUR(7, 7),
    UNIT_OF_MEASURE_GUAGE_KPA(8, 8),
    UNIT_OF_MEASURE_ABSOLUTE_KPA(9, 9),
    ;
    
    public static final int UNIT_OF_MEASURE_KILO_WATT_HOURS_VALUE = 0;
    public static final int UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR_VALUE = 1;
    public static final int UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR_VALUE = 2;
    public static final int UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR_VALUE = 3;
    public static final int UNIT_OF_MEASURE_US_GALLONS_PER_HOUR_VALUE = 4;
    public static final int UNIT_OF_MEASURE_IMP_GALLONS_PER_HOUR_VALUE = 5;
    public static final int UNIT_OF_MEASURE_BTU_PER_HOUR_VALUE = 6;
    public static final int UNIT_OF_MEASURE_LITERS_PER_HOUR_VALUE = 7;
    public static final int UNIT_OF_MEASURE_GUAGE_KPA_VALUE = 8;
    public static final int UNIT_OF_MEASURE_ABSOLUTE_KPA_VALUE = 9;
    
    
    public final int getNumber() { return value; }
    
    public static UnitOfMeasure valueOf(int value) {
      switch (value) {
        case 0: return UNIT_OF_MEASURE_KILO_WATT_HOURS;
        case 1: return UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR;
        case 2: return UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR;
        case 3: return UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR;
        case 4: return UNIT_OF_MEASURE_US_GALLONS_PER_HOUR;
        case 5: return UNIT_OF_MEASURE_IMP_GALLONS_PER_HOUR;
        case 6: return UNIT_OF_MEASURE_BTU_PER_HOUR;
        case 7: return UNIT_OF_MEASURE_LITERS_PER_HOUR;
        case 8: return UNIT_OF_MEASURE_GUAGE_KPA;
        case 9: return UNIT_OF_MEASURE_ABSOLUTE_KPA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<UnitOfMeasure>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<UnitOfMeasure>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UnitOfMeasure>() {
            public UnitOfMeasure findValueByNumber(int number) {
              return UnitOfMeasure.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(16);
    }
    
    private static final UnitOfMeasure[] VALUES = {
      UNIT_OF_MEASURE_KILO_WATT_HOURS, UNIT_OF_MEASURE_CUBIC_METER_PER_HOUR, UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR, UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_HOUR, UNIT_OF_MEASURE_US_GALLONS_PER_HOUR, UNIT_OF_MEASURE_IMP_GALLONS_PER_HOUR, UNIT_OF_MEASURE_BTU_PER_HOUR, UNIT_OF_MEASURE_LITERS_PER_HOUR, UNIT_OF_MEASURE_GUAGE_KPA, UNIT_OF_MEASURE_ABSOLUTE_KPA, 
    };
    
    public static UnitOfMeasure valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private UnitOfMeasure(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.UnitOfMeasure)
  }
  
  public enum ZoneType
      implements com.google.protobuf.ProtocolMessageEnum {
    ZONE_TYPE_STANDARD_CIE(0, 0),
    ZONE_TYPE_MOTION_SENSOR(1, 13),
    ZONE_TYPE_CONTACT_SWITCH(2, 21),
    ZONE_TYPE_FIRE_SENSOR(3, 40),
    ZONE_TYPE_WATER_SENSOR(4, 42),
    ZONE_TYPE_GAS_SENSOR(5, 43),
    ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE(6, 44),
    ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR(7, 45),
    ZONE_TYPE_REMOTE_CONTROL(8, 271),
    ZONE_TYPE_KEY_FOB(9, 277),
    ZONE_TYPE_KEYPAD(10, 541),
    ZONE_TYPE_STANDARD_WARNING_DEVICE(11, 549),
    ZONE_TYPE_GLASS_BREAK_SENSOR(12, 550),
    ZONE_TYPE_SECURITY_REPEATER(13, 553),
    ZONE_TYPE_INVALID_ZONE_TYPE(14, 65535),
    ;
    
    public static final int ZONE_TYPE_STANDARD_CIE_VALUE = 0;
    public static final int ZONE_TYPE_MOTION_SENSOR_VALUE = 13;
    public static final int ZONE_TYPE_CONTACT_SWITCH_VALUE = 21;
    public static final int ZONE_TYPE_FIRE_SENSOR_VALUE = 40;
    public static final int ZONE_TYPE_WATER_SENSOR_VALUE = 42;
    public static final int ZONE_TYPE_GAS_SENSOR_VALUE = 43;
    public static final int ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE_VALUE = 44;
    public static final int ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR_VALUE = 45;
    public static final int ZONE_TYPE_REMOTE_CONTROL_VALUE = 271;
    public static final int ZONE_TYPE_KEY_FOB_VALUE = 277;
    public static final int ZONE_TYPE_KEYPAD_VALUE = 541;
    public static final int ZONE_TYPE_STANDARD_WARNING_DEVICE_VALUE = 549;
    public static final int ZONE_TYPE_GLASS_BREAK_SENSOR_VALUE = 550;
    public static final int ZONE_TYPE_SECURITY_REPEATER_VALUE = 553;
    public static final int ZONE_TYPE_INVALID_ZONE_TYPE_VALUE = 65535;
    
    
    public final int getNumber() { return value; }
    
    public static ZoneType valueOf(int value) {
      switch (value) {
        case 0: return ZONE_TYPE_STANDARD_CIE;
        case 13: return ZONE_TYPE_MOTION_SENSOR;
        case 21: return ZONE_TYPE_CONTACT_SWITCH;
        case 40: return ZONE_TYPE_FIRE_SENSOR;
        case 42: return ZONE_TYPE_WATER_SENSOR;
        case 43: return ZONE_TYPE_GAS_SENSOR;
        case 44: return ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE;
        case 45: return ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR;
        case 271: return ZONE_TYPE_REMOTE_CONTROL;
        case 277: return ZONE_TYPE_KEY_FOB;
        case 541: return ZONE_TYPE_KEYPAD;
        case 549: return ZONE_TYPE_STANDARD_WARNING_DEVICE;
        case 550: return ZONE_TYPE_GLASS_BREAK_SENSOR;
        case 553: return ZONE_TYPE_SECURITY_REPEATER;
        case 65535: return ZONE_TYPE_INVALID_ZONE_TYPE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ZoneType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZoneType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZoneType>() {
            public ZoneType findValueByNumber(int number) {
              return ZoneType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(17);
    }
    
    private static final ZoneType[] VALUES = {
      ZONE_TYPE_STANDARD_CIE, ZONE_TYPE_MOTION_SENSOR, ZONE_TYPE_CONTACT_SWITCH, ZONE_TYPE_FIRE_SENSOR, ZONE_TYPE_WATER_SENSOR, ZONE_TYPE_GAS_SENSOR, ZONE_TYPE_PERSONAL_EMERGENCY_DEVICE, ZONE_TYPE_VIBRATION_MOVEMENT_SENSOR, ZONE_TYPE_REMOTE_CONTROL, ZONE_TYPE_KEY_FOB, ZONE_TYPE_KEYPAD, ZONE_TYPE_STANDARD_WARNING_DEVICE, ZONE_TYPE_GLASS_BREAK_SENSOR, ZONE_TYPE_SECURITY_REPEATER, ZONE_TYPE_INVALID_ZONE_TYPE, 
    };
    
    public static ZoneType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ZoneType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ZoneType)
  }
  
  public enum ArmGroup
      implements com.google.protobuf.ProtocolMessageEnum {
    ARM_GROUP_STAY(0, 0),
    ARM_GROUP_SLEEP(1, 1),
    ARM_GROUP_BOTH(2, 2),
    ARM_GROUP_ALWAYS(3, 3),
    ;
    
    public static final int ARM_GROUP_STAY_VALUE = 0;
    public static final int ARM_GROUP_SLEEP_VALUE = 1;
    public static final int ARM_GROUP_BOTH_VALUE = 2;
    public static final int ARM_GROUP_ALWAYS_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ArmGroup valueOf(int value) {
      switch (value) {
        case 0: return ARM_GROUP_STAY;
        case 1: return ARM_GROUP_SLEEP;
        case 2: return ARM_GROUP_BOTH;
        case 3: return ARM_GROUP_ALWAYS;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ArmGroup>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ArmGroup>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ArmGroup>() {
            public ArmGroup findValueByNumber(int number) {
              return ArmGroup.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(18);
    }
    
    private static final ArmGroup[] VALUES = {
      ARM_GROUP_STAY, ARM_GROUP_SLEEP, ARM_GROUP_BOTH, ARM_GROUP_ALWAYS, 
    };
    
    public static ArmGroup valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ArmGroup(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ArmGroup)
  }
  
  public enum ArmMode
      implements com.google.protobuf.ProtocolMessageEnum {
    ARM_MODE_DISARM(0, 0),
    ARM_MODE_STAY(1, 1),
    ARM_MODE_SLEEP(2, 2),
    ARM_MODE_AWAY(3, 3),
    ;
    
    public static final int ARM_MODE_DISARM_VALUE = 0;
    public static final int ARM_MODE_STAY_VALUE = 1;
    public static final int ARM_MODE_SLEEP_VALUE = 2;
    public static final int ARM_MODE_AWAY_VALUE = 3;
    
    
    public final int getNumber() { return value; }
    
    public static ArmMode valueOf(int value) {
      switch (value) {
        case 0: return ARM_MODE_DISARM;
        case 1: return ARM_MODE_STAY;
        case 2: return ARM_MODE_SLEEP;
        case 3: return ARM_MODE_AWAY;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ArmMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ArmMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ArmMode>() {
            public ArmMode findValueByNumber(int number) {
              return ArmMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(19);
    }
    
    private static final ArmMode[] VALUES = {
      ARM_MODE_DISARM, ARM_MODE_STAY, ARM_MODE_SLEEP, ARM_MODE_AWAY, 
    };
    
    public static ArmMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ArmMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ArmMode)
  }
  
  public enum PanelStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    PANEL_STATUS_DISARMED(0, 0),
    PANEL_STATUS_ARMED_STAY(1, 1),
    PANEL_STATUS_ARMED_SLEEP(2, 2),
    PANEL_STATUS_ARMED_AWAY(3, 3),
    PANEL_STATUS_EXIT_DELAY(4, 4),
    PANEL_STATUS_ENTRY_DELAY(5, 5),
    PANEL_STATUS_NOT_READY_TO_ARM(6, 6),
    PANEL_STATUS_IN_ALARM(7, 7),
    ;
    
    public static final int PANEL_STATUS_DISARMED_VALUE = 0;
    public static final int PANEL_STATUS_ARMED_STAY_VALUE = 1;
    public static final int PANEL_STATUS_ARMED_SLEEP_VALUE = 2;
    public static final int PANEL_STATUS_ARMED_AWAY_VALUE = 3;
    public static final int PANEL_STATUS_EXIT_DELAY_VALUE = 4;
    public static final int PANEL_STATUS_ENTRY_DELAY_VALUE = 5;
    public static final int PANEL_STATUS_NOT_READY_TO_ARM_VALUE = 6;
    public static final int PANEL_STATUS_IN_ALARM_VALUE = 7;
    
    
    public final int getNumber() { return value; }
    
    public static PanelStatus valueOf(int value) {
      switch (value) {
        case 0: return PANEL_STATUS_DISARMED;
        case 1: return PANEL_STATUS_ARMED_STAY;
        case 2: return PANEL_STATUS_ARMED_SLEEP;
        case 3: return PANEL_STATUS_ARMED_AWAY;
        case 4: return PANEL_STATUS_EXIT_DELAY;
        case 5: return PANEL_STATUS_ENTRY_DELAY;
        case 6: return PANEL_STATUS_NOT_READY_TO_ARM;
        case 7: return PANEL_STATUS_IN_ALARM;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PanelStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PanelStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PanelStatus>() {
            public PanelStatus findValueByNumber(int number) {
              return PanelStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(20);
    }
    
    private static final PanelStatus[] VALUES = {
      PANEL_STATUS_DISARMED, PANEL_STATUS_ARMED_STAY, PANEL_STATUS_ARMED_SLEEP, PANEL_STATUS_ARMED_AWAY, PANEL_STATUS_EXIT_DELAY, PANEL_STATUS_ENTRY_DELAY, PANEL_STATUS_NOT_READY_TO_ARM, PANEL_STATUS_IN_ALARM, 
    };
    
    public static PanelStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PanelStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.PanelStatus)
  }
  
  public enum AlarmStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    ALARM_STATUS_NO_ALARM(0, 0),
    ALARM_STATUS_BURGLAR(1, 1),
    ALARM_STATUS_FIRE(2, 2),
    ALARM_STATUS_EMERGENCY(3, 3),
    ALARM_STATUS_POLICE_PANIC(4, 4),
    ALARM_STATUS_FIRE_PANIC(5, 5),
    ALARM_STATUS_EMERGENCY_PANIC(6, 6),
    ;
    
    public static final int ALARM_STATUS_NO_ALARM_VALUE = 0;
    public static final int ALARM_STATUS_BURGLAR_VALUE = 1;
    public static final int ALARM_STATUS_FIRE_VALUE = 2;
    public static final int ALARM_STATUS_EMERGENCY_VALUE = 3;
    public static final int ALARM_STATUS_POLICE_PANIC_VALUE = 4;
    public static final int ALARM_STATUS_FIRE_PANIC_VALUE = 5;
    public static final int ALARM_STATUS_EMERGENCY_PANIC_VALUE = 6;
    
    
    public final int getNumber() { return value; }
    
    public static AlarmStatus valueOf(int value) {
      switch (value) {
        case 0: return ALARM_STATUS_NO_ALARM;
        case 1: return ALARM_STATUS_BURGLAR;
        case 2: return ALARM_STATUS_FIRE;
        case 3: return ALARM_STATUS_EMERGENCY;
        case 4: return ALARM_STATUS_POLICE_PANIC;
        case 5: return ALARM_STATUS_FIRE_PANIC;
        case 6: return ALARM_STATUS_EMERGENCY_PANIC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AlarmStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AlarmStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AlarmStatus>() {
            public AlarmStatus findValueByNumber(int number) {
              return AlarmStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(21);
    }
    
    private static final AlarmStatus[] VALUES = {
      ALARM_STATUS_NO_ALARM, ALARM_STATUS_BURGLAR, ALARM_STATUS_FIRE, ALARM_STATUS_EMERGENCY, ALARM_STATUS_POLICE_PANIC, ALARM_STATUS_FIRE_PANIC, ALARM_STATUS_EMERGENCY_PANIC, 
    };
    
    public static AlarmStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private AlarmStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.AlarmStatus)
  }
  
  public enum TimelineLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    TIMELINE_LEVEL_INFO(0, 0),
    TIMELINE_LEVEL_WARNING(1, 1),
    TIMELINE_LEVEL_ALARM(2, 2),
    ;
    
    public static final int TIMELINE_LEVEL_INFO_VALUE = 0;
    public static final int TIMELINE_LEVEL_WARNING_VALUE = 1;
    public static final int TIMELINE_LEVEL_ALARM_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static TimelineLevel valueOf(int value) {
      switch (value) {
        case 0: return TIMELINE_LEVEL_INFO;
        case 1: return TIMELINE_LEVEL_WARNING;
        case 2: return TIMELINE_LEVEL_ALARM;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<TimelineLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TimelineLevel>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimelineLevel>() {
            public TimelineLevel findValueByNumber(int number) {
              return TimelineLevel.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(22);
    }
    
    private static final TimelineLevel[] VALUES = {
      TIMELINE_LEVEL_INFO, TIMELINE_LEVEL_WARNING, TIMELINE_LEVEL_ALARM, 
    };
    
    public static TimelineLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private TimelineLevel(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.TimelineLevel)
  }
  
  public enum TimelineType
      implements com.google.protobuf.ProtocolMessageEnum {
    TIMELINE_TYPE_SYSTEM_STARTUP(0, 0),
    TIMELINE_TYPE_ARMED(1, 1),
    TIMELINE_TYPE_DISARMED(2, 2),
    TIMELINE_TYPE_IAS_ZONE_BATTERY_LOW(3, 3),
    TIMELINE_TYPE_IAS_ZONE_ALARM(4, 4),
    TIMELINE_TYPE_IAS_ZONE_TAMPER(5, 5),
    TIMELINE_TYPE_IAS_ZONE_TROUBLE(6, 6),
    TIMELINE_TYPE_IAS_ZONE_MAINS_FAULT(7, 7),
    TIMELINE_TYPE_IAS_ZONE_LACK_OF_SUPERVISION_REPORT(8, 8),
    TIMELINE_TYPE_IAS_ZONE_BATTERY_DEFECT(9, 9),
    TIMELINE_TYPE_TOGGLE_ON_OFF(10, 10),
    TIMELINE_TYPE_ON_OFF_STATE_CHANGED(11, 11),
    TIMELINE_TYPE_CAMERA_OFFLINE(12, 12),
    TIMELINE_TYPE_CAMERA_MOTION_DETECTION_ALARM(13, 13),
    TIMELINE_TYPE_OVERCURRENT_DETECTED(14, 14),
    TIMELINE_TYPE_POWER_SOURCE_CHANGED(15, 15),
    TIMELINE_TYPE_SYSTEM_BATTERY_LOW(16, 16),
    ;
    
    public static final int TIMELINE_TYPE_SYSTEM_STARTUP_VALUE = 0;
    public static final int TIMELINE_TYPE_ARMED_VALUE = 1;
    public static final int TIMELINE_TYPE_DISARMED_VALUE = 2;
    public static final int TIMELINE_TYPE_IAS_ZONE_BATTERY_LOW_VALUE = 3;
    public static final int TIMELINE_TYPE_IAS_ZONE_ALARM_VALUE = 4;
    public static final int TIMELINE_TYPE_IAS_ZONE_TAMPER_VALUE = 5;
    public static final int TIMELINE_TYPE_IAS_ZONE_TROUBLE_VALUE = 6;
    public static final int TIMELINE_TYPE_IAS_ZONE_MAINS_FAULT_VALUE = 7;
    public static final int TIMELINE_TYPE_IAS_ZONE_LACK_OF_SUPERVISION_REPORT_VALUE = 8;
    public static final int TIMELINE_TYPE_IAS_ZONE_BATTERY_DEFECT_VALUE = 9;
    public static final int TIMELINE_TYPE_TOGGLE_ON_OFF_VALUE = 10;
    public static final int TIMELINE_TYPE_ON_OFF_STATE_CHANGED_VALUE = 11;
    public static final int TIMELINE_TYPE_CAMERA_OFFLINE_VALUE = 12;
    public static final int TIMELINE_TYPE_CAMERA_MOTION_DETECTION_ALARM_VALUE = 13;
    public static final int TIMELINE_TYPE_OVERCURRENT_DETECTED_VALUE = 14;
    public static final int TIMELINE_TYPE_POWER_SOURCE_CHANGED_VALUE = 15;
    public static final int TIMELINE_TYPE_SYSTEM_BATTERY_LOW_VALUE = 16;
    
    
    public final int getNumber() { return value; }
    
    public static TimelineType valueOf(int value) {
      switch (value) {
        case 0: return TIMELINE_TYPE_SYSTEM_STARTUP;
        case 1: return TIMELINE_TYPE_ARMED;
        case 2: return TIMELINE_TYPE_DISARMED;
        case 3: return TIMELINE_TYPE_IAS_ZONE_BATTERY_LOW;
        case 4: return TIMELINE_TYPE_IAS_ZONE_ALARM;
        case 5: return TIMELINE_TYPE_IAS_ZONE_TAMPER;
        case 6: return TIMELINE_TYPE_IAS_ZONE_TROUBLE;
        case 7: return TIMELINE_TYPE_IAS_ZONE_MAINS_FAULT;
        case 8: return TIMELINE_TYPE_IAS_ZONE_LACK_OF_SUPERVISION_REPORT;
        case 9: return TIMELINE_TYPE_IAS_ZONE_BATTERY_DEFECT;
        case 10: return TIMELINE_TYPE_TOGGLE_ON_OFF;
        case 11: return TIMELINE_TYPE_ON_OFF_STATE_CHANGED;
        case 12: return TIMELINE_TYPE_CAMERA_OFFLINE;
        case 13: return TIMELINE_TYPE_CAMERA_MOTION_DETECTION_ALARM;
        case 14: return TIMELINE_TYPE_OVERCURRENT_DETECTED;
        case 15: return TIMELINE_TYPE_POWER_SOURCE_CHANGED;
        case 16: return TIMELINE_TYPE_SYSTEM_BATTERY_LOW;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<TimelineType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<TimelineType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TimelineType>() {
            public TimelineType findValueByNumber(int number) {
              return TimelineType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(23);
    }
    
    private static final TimelineType[] VALUES = {
      TIMELINE_TYPE_SYSTEM_STARTUP, TIMELINE_TYPE_ARMED, TIMELINE_TYPE_DISARMED, TIMELINE_TYPE_IAS_ZONE_BATTERY_LOW, TIMELINE_TYPE_IAS_ZONE_ALARM, TIMELINE_TYPE_IAS_ZONE_TAMPER, TIMELINE_TYPE_IAS_ZONE_TROUBLE, TIMELINE_TYPE_IAS_ZONE_MAINS_FAULT, TIMELINE_TYPE_IAS_ZONE_LACK_OF_SUPERVISION_REPORT, TIMELINE_TYPE_IAS_ZONE_BATTERY_DEFECT, TIMELINE_TYPE_TOGGLE_ON_OFF, TIMELINE_TYPE_ON_OFF_STATE_CHANGED, TIMELINE_TYPE_CAMERA_OFFLINE, TIMELINE_TYPE_CAMERA_MOTION_DETECTION_ALARM, TIMELINE_TYPE_OVERCURRENT_DETECTED, TIMELINE_TYPE_POWER_SOURCE_CHANGED, TIMELINE_TYPE_SYSTEM_BATTERY_LOW, 
    };
    
    public static TimelineType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private TimelineType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.TimelineType)
  }
  
  public enum CameraSdStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_SD_STATUS_NO_EXIST(0, 0),
    CAMERA_SD_STATUS_INSERTED(1, 1),
    CAMERA_SD_STATUS_RECORDING(2, 2),
    CAMERA_SD_STATUS_FILESYSTEM_ERROR(3, 3),
    CAMERA_SD_STATUS_FORMATTING(4, 4),
    ;
    
    public static final int CAMERA_SD_STATUS_NO_EXIST_VALUE = 0;
    public static final int CAMERA_SD_STATUS_INSERTED_VALUE = 1;
    public static final int CAMERA_SD_STATUS_RECORDING_VALUE = 2;
    public static final int CAMERA_SD_STATUS_FILESYSTEM_ERROR_VALUE = 3;
    public static final int CAMERA_SD_STATUS_FORMATTING_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static CameraSdStatus valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_SD_STATUS_NO_EXIST;
        case 1: return CAMERA_SD_STATUS_INSERTED;
        case 2: return CAMERA_SD_STATUS_RECORDING;
        case 3: return CAMERA_SD_STATUS_FILESYSTEM_ERROR;
        case 4: return CAMERA_SD_STATUS_FORMATTING;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraSdStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraSdStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraSdStatus>() {
            public CameraSdStatus findValueByNumber(int number) {
              return CameraSdStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(24);
    }
    
    private static final CameraSdStatus[] VALUES = {
      CAMERA_SD_STATUS_NO_EXIST, CAMERA_SD_STATUS_INSERTED, CAMERA_SD_STATUS_RECORDING, CAMERA_SD_STATUS_FILESYSTEM_ERROR, CAMERA_SD_STATUS_FORMATTING, 
    };
    
    public static CameraSdStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraSdStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraSdStatus)
  }
  
  public enum CameraWlanMode
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_WLAN_MODE_INFRA(0, 0),
    CAMERA_WLAN_MODE_ADHOC(1, 1),
    ;
    
    public static final int CAMERA_WLAN_MODE_INFRA_VALUE = 0;
    public static final int CAMERA_WLAN_MODE_ADHOC_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CameraWlanMode valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_WLAN_MODE_INFRA;
        case 1: return CAMERA_WLAN_MODE_ADHOC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraWlanMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraWlanMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraWlanMode>() {
            public CameraWlanMode findValueByNumber(int number) {
              return CameraWlanMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(25);
    }
    
    private static final CameraWlanMode[] VALUES = {
      CAMERA_WLAN_MODE_INFRA, CAMERA_WLAN_MODE_ADHOC, 
    };
    
    public static CameraWlanMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraWlanMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraWlanMode)
  }
  
  public enum CameraWlanEncrypt
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_WLAN_ENCRYPT_OPEN(0, 0),
    CAMERA_WLAN_ENCRYPT_SHARE(1, 1),
    ;
    
    public static final int CAMERA_WLAN_ENCRYPT_OPEN_VALUE = 0;
    public static final int CAMERA_WLAN_ENCRYPT_SHARE_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CameraWlanEncrypt valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_WLAN_ENCRYPT_OPEN;
        case 1: return CAMERA_WLAN_ENCRYPT_SHARE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraWlanEncrypt>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraWlanEncrypt>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraWlanEncrypt>() {
            public CameraWlanEncrypt findValueByNumber(int number) {
              return CameraWlanEncrypt.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(26);
    }
    
    private static final CameraWlanEncrypt[] VALUES = {
      CAMERA_WLAN_ENCRYPT_OPEN, CAMERA_WLAN_ENCRYPT_SHARE, 
    };
    
    public static CameraWlanEncrypt valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraWlanEncrypt(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraWlanEncrypt)
  }
  
  public enum CameraWlanAuthtype
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_WLAN_AUTHTYPE_NONE(0, 0),
    CAMERA_WLAN_AUTHTYPE_WEP(1, 1),
    CAMERA_WLAN_AUTHTYPE_WPA_PSK_TKIP(2, 2),
    CAMERA_WLAN_AUTHTYPE_WPA_PSK_AES(3, 3),
    CAMERA_WLAN_AUTHTYPE_WPA2_PSK_TKIP(4, 4),
    CAMERA_WLAN_AUTHTYPE_WPA2_PSK_AES(5, 5),
    ;
    
    public static final int CAMERA_WLAN_AUTHTYPE_NONE_VALUE = 0;
    public static final int CAMERA_WLAN_AUTHTYPE_WEP_VALUE = 1;
    public static final int CAMERA_WLAN_AUTHTYPE_WPA_PSK_TKIP_VALUE = 2;
    public static final int CAMERA_WLAN_AUTHTYPE_WPA_PSK_AES_VALUE = 3;
    public static final int CAMERA_WLAN_AUTHTYPE_WPA2_PSK_TKIP_VALUE = 4;
    public static final int CAMERA_WLAN_AUTHTYPE_WPA2_PSK_AES_VALUE = 5;
    
    
    public final int getNumber() { return value; }
    
    public static CameraWlanAuthtype valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_WLAN_AUTHTYPE_NONE;
        case 1: return CAMERA_WLAN_AUTHTYPE_WEP;
        case 2: return CAMERA_WLAN_AUTHTYPE_WPA_PSK_TKIP;
        case 3: return CAMERA_WLAN_AUTHTYPE_WPA_PSK_AES;
        case 4: return CAMERA_WLAN_AUTHTYPE_WPA2_PSK_TKIP;
        case 5: return CAMERA_WLAN_AUTHTYPE_WPA2_PSK_AES;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraWlanAuthtype>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraWlanAuthtype>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraWlanAuthtype>() {
            public CameraWlanAuthtype findValueByNumber(int number) {
              return CameraWlanAuthtype.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(27);
    }
    
    private static final CameraWlanAuthtype[] VALUES = {
      CAMERA_WLAN_AUTHTYPE_NONE, CAMERA_WLAN_AUTHTYPE_WEP, CAMERA_WLAN_AUTHTYPE_WPA_PSK_TKIP, CAMERA_WLAN_AUTHTYPE_WPA_PSK_AES, CAMERA_WLAN_AUTHTYPE_WPA2_PSK_TKIP, CAMERA_WLAN_AUTHTYPE_WPA2_PSK_AES, 
    };
    
    public static CameraWlanAuthtype valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraWlanAuthtype(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraWlanAuthtype)
  }
  
  public enum CameraWlanKeyFormat
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_WLAN_KEY_FORMAT_HEX(0, 0),
    CAMERA_WLAN_KEY_FORMAT_ASCII(1, 1),
    ;
    
    public static final int CAMERA_WLAN_KEY_FORMAT_HEX_VALUE = 0;
    public static final int CAMERA_WLAN_KEY_FORMAT_ASCII_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CameraWlanKeyFormat valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_WLAN_KEY_FORMAT_HEX;
        case 1: return CAMERA_WLAN_KEY_FORMAT_ASCII;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyFormat>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyFormat>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyFormat>() {
            public CameraWlanKeyFormat findValueByNumber(int number) {
              return CameraWlanKeyFormat.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(28);
    }
    
    private static final CameraWlanKeyFormat[] VALUES = {
      CAMERA_WLAN_KEY_FORMAT_HEX, CAMERA_WLAN_KEY_FORMAT_ASCII, 
    };
    
    public static CameraWlanKeyFormat valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraWlanKeyFormat(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraWlanKeyFormat)
  }
  
  public enum CameraWlanKeyLength
      implements com.google.protobuf.ProtocolMessageEnum {
    CAMERA_WLAN_KEY_LENGTH_64BIT(0, 0),
    CAMERA_WLAN_KEY_LENGTH_128BIT(1, 1),
    ;
    
    public static final int CAMERA_WLAN_KEY_LENGTH_64BIT_VALUE = 0;
    public static final int CAMERA_WLAN_KEY_LENGTH_128BIT_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CameraWlanKeyLength valueOf(int value) {
      switch (value) {
        case 0: return CAMERA_WLAN_KEY_LENGTH_64BIT;
        case 1: return CAMERA_WLAN_KEY_LENGTH_128BIT;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyLength>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyLength>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CameraWlanKeyLength>() {
            public CameraWlanKeyLength findValueByNumber(int number) {
              return CameraWlanKeyLength.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(29);
    }
    
    private static final CameraWlanKeyLength[] VALUES = {
      CAMERA_WLAN_KEY_LENGTH_64BIT, CAMERA_WLAN_KEY_LENGTH_128BIT, 
    };
    
    public static CameraWlanKeyLength valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CameraWlanKeyLength(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CameraWlanKeyLength)
  }
  
  public enum ActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    ACTION_TYPE_ARM(0, 0),
    ACTION_TYPE_TOGGLE_ON_OFF(1, 1),
    ;
    
    public static final int ACTION_TYPE_ARM_VALUE = 0;
    public static final int ACTION_TYPE_TOGGLE_ON_OFF_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static ActionType valueOf(int value) {
      switch (value) {
        case 0: return ACTION_TYPE_ARM;
        case 1: return ACTION_TYPE_TOGGLE_ON_OFF;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ActionType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ActionType>() {
            public ActionType findValueByNumber(int number) {
              return ActionType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(30);
    }
    
    private static final ActionType[] VALUES = {
      ACTION_TYPE_ARM, ACTION_TYPE_TOGGLE_ON_OFF, 
    };
    
    public static ActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private ActionType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.ActionType)
  }
  
  public enum PlanType
      implements com.google.protobuf.ProtocolMessageEnum {
    PLAN_TYPE_TIMER(0, 0),
    PLAN_TYPE_FAKE(1, 1),
    ;
    
    public static final int PLAN_TYPE_TIMER_VALUE = 0;
    public static final int PLAN_TYPE_FAKE_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static PlanType valueOf(int value) {
      switch (value) {
        case 0: return PLAN_TYPE_TIMER;
        case 1: return PLAN_TYPE_FAKE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PlanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PlanType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PlanType>() {
            public PlanType findValueByNumber(int number) {
              return PlanType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(31);
    }
    
    private static final PlanType[] VALUES = {
      PLAN_TYPE_TIMER, PLAN_TYPE_FAKE, 
    };
    
    public static PlanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PlanType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.PlanType)
  }
  
  public enum WanMode
      implements com.google.protobuf.ProtocolMessageEnum {
    WAN_MODE_PPPOE(0, 0),
    WAN_MODE_DHCP(1, 1),
    WAN_MODE_STATIC(2, 2),
    ;
    
    public static final int WAN_MODE_PPPOE_VALUE = 0;
    public static final int WAN_MODE_DHCP_VALUE = 1;
    public static final int WAN_MODE_STATIC_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static WanMode valueOf(int value) {
      switch (value) {
        case 0: return WAN_MODE_PPPOE;
        case 1: return WAN_MODE_DHCP;
        case 2: return WAN_MODE_STATIC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WanMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WanMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WanMode>() {
            public WanMode findValueByNumber(int number) {
              return WanMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(32);
    }
    
    private static final WanMode[] VALUES = {
      WAN_MODE_PPPOE, WAN_MODE_DHCP, WAN_MODE_STATIC, 
    };
    
    public static WanMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WanMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WanMode)
  }
  
  public enum WanPort
      implements com.google.protobuf.ProtocolMessageEnum {
    WAN_PORT_1(0, 1),
    WAN_PORT_2(1, 2),
    ;
    
    public static final int WAN_PORT_1_VALUE = 1;
    public static final int WAN_PORT_2_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static WanPort valueOf(int value) {
      switch (value) {
        case 1: return WAN_PORT_1;
        case 2: return WAN_PORT_2;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WanPort>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WanPort>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WanPort>() {
            public WanPort findValueByNumber(int number) {
              return WanPort.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(33);
    }
    
    private static final WanPort[] VALUES = {
      WAN_PORT_1, WAN_PORT_2, 
    };
    
    public static WanPort valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WanPort(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WanPort)
  }
  
  public enum WanType
      implements com.google.protobuf.ProtocolMessageEnum {
    WAN_TYPE_INTERNET(0, 0),
    WAN_TYPE_AREA(1, 1),
    ;
    
    public static final int WAN_TYPE_INTERNET_VALUE = 0;
    public static final int WAN_TYPE_AREA_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static WanType valueOf(int value) {
      switch (value) {
        case 0: return WAN_TYPE_INTERNET;
        case 1: return WAN_TYPE_AREA;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WanType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WanType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WanType>() {
            public WanType findValueByNumber(int number) {
              return WanType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(34);
    }
    
    private static final WanType[] VALUES = {
      WAN_TYPE_INTERNET, WAN_TYPE_AREA, 
    };
    
    public static WanType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WanType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WanType)
  }
  
  public enum WanMacClone
      implements com.google.protobuf.ProtocolMessageEnum {
    WAN_MAC_CLONE_NONE(0, 0),
    WAN_MAC_CLONE_AUTO(1, 1),
    WAN_MAC_CLONE_MANUAL(2, 2),
    ;
    
    public static final int WAN_MAC_CLONE_NONE_VALUE = 0;
    public static final int WAN_MAC_CLONE_AUTO_VALUE = 1;
    public static final int WAN_MAC_CLONE_MANUAL_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static WanMacClone valueOf(int value) {
      switch (value) {
        case 0: return WAN_MAC_CLONE_NONE;
        case 1: return WAN_MAC_CLONE_AUTO;
        case 2: return WAN_MAC_CLONE_MANUAL;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WanMacClone>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WanMacClone>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WanMacClone>() {
            public WanMacClone findValueByNumber(int number) {
              return WanMacClone.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(35);
    }
    
    private static final WanMacClone[] VALUES = {
      WAN_MAC_CLONE_NONE, WAN_MAC_CLONE_AUTO, WAN_MAC_CLONE_MANUAL, 
    };
    
    public static WanMacClone valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WanMacClone(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WanMacClone)
  }
  
  public enum WlanPort
      implements com.google.protobuf.ProtocolMessageEnum {
    WLAN_PORT_1(0, 1),
    WLAN_PORT_2(1, 2),
    ;
    
    public static final int WLAN_PORT_1_VALUE = 1;
    public static final int WLAN_PORT_2_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static WlanPort valueOf(int value) {
      switch (value) {
        case 1: return WLAN_PORT_1;
        case 2: return WLAN_PORT_2;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WlanPort>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WlanPort>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WlanPort>() {
            public WlanPort findValueByNumber(int number) {
              return WlanPort.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(36);
    }
    
    private static final WlanPort[] VALUES = {
      WLAN_PORT_1, WLAN_PORT_2, 
    };
    
    public static WlanPort valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private WlanPort(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.WlanPort)
  }
  
  public enum AccessRuleMode
      implements com.google.protobuf.ProtocolMessageEnum {
    ACCESS_RULE_DISABLE(0, 0),
    ACCESS_RULE_BLACKLIST(1, 1),
    ACCESS_RULE_WHITELIST(2, 2),
    ;
    
    public static final int ACCESS_RULE_DISABLE_VALUE = 0;
    public static final int ACCESS_RULE_BLACKLIST_VALUE = 1;
    public static final int ACCESS_RULE_WHITELIST_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static AccessRuleMode valueOf(int value) {
      switch (value) {
        case 0: return ACCESS_RULE_DISABLE;
        case 1: return ACCESS_RULE_BLACKLIST;
        case 2: return ACCESS_RULE_WHITELIST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AccessRuleMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AccessRuleMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccessRuleMode>() {
            public AccessRuleMode findValueByNumber(int number) {
              return AccessRuleMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(37);
    }
    
    private static final AccessRuleMode[] VALUES = {
      ACCESS_RULE_DISABLE, ACCESS_RULE_BLACKLIST, ACCESS_RULE_WHITELIST, 
    };
    
    public static AccessRuleMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private AccessRuleMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.AccessRuleMode)
  }
  
  public enum BandWidth
      implements com.google.protobuf.ProtocolMessageEnum {
    BAND_WIDTH_20M(0, 0),
    BAND_WIDTH_40M(1, 1),
    BAND_WIDTH_80M(2, 2),
    ;
    
    public static final int BAND_WIDTH_20M_VALUE = 0;
    public static final int BAND_WIDTH_40M_VALUE = 1;
    public static final int BAND_WIDTH_80M_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static BandWidth valueOf(int value) {
      switch (value) {
        case 0: return BAND_WIDTH_20M;
        case 1: return BAND_WIDTH_40M;
        case 2: return BAND_WIDTH_80M;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<BandWidth>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BandWidth>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BandWidth>() {
            public BandWidth findValueByNumber(int number) {
              return BandWidth.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(38);
    }
    
    private static final BandWidth[] VALUES = {
      BAND_WIDTH_20M, BAND_WIDTH_40M, BAND_WIDTH_80M, 
    };
    
    public static BandWidth valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private BandWidth(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.BandWidth)
  }
  
  public enum SambaMode
      implements com.google.protobuf.ProtocolMessageEnum {
    SAMBA_MODE_DISABLED(0, 0),
    SAMBA_MODE_USER(1, 1),
    SAMBA_MODE_PUBLIC(2, 2),
    ;
    
    public static final int SAMBA_MODE_DISABLED_VALUE = 0;
    public static final int SAMBA_MODE_USER_VALUE = 1;
    public static final int SAMBA_MODE_PUBLIC_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static SambaMode valueOf(int value) {
      switch (value) {
        case 0: return SAMBA_MODE_DISABLED;
        case 1: return SAMBA_MODE_USER;
        case 2: return SAMBA_MODE_PUBLIC;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SambaMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SambaMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SambaMode>() {
            public SambaMode findValueByNumber(int number) {
              return SambaMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(39);
    }
    
    private static final SambaMode[] VALUES = {
      SAMBA_MODE_DISABLED, SAMBA_MODE_USER, SAMBA_MODE_PUBLIC, 
    };
    
    public static SambaMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SambaMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.SambaMode)
  }
  
  public enum AccessType
      implements com.google.protobuf.ProtocolMessageEnum {
    ACCESS_TYPE_WIRED(0, 1),
    ACCESS_TYPE_WIRELESS(1, 2),
    ;
    
    public static final int ACCESS_TYPE_WIRED_VALUE = 1;
    public static final int ACCESS_TYPE_WIRELESS_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static AccessType valueOf(int value) {
      switch (value) {
        case 1: return ACCESS_TYPE_WIRED;
        case 2: return ACCESS_TYPE_WIRELESS;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AccessType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AccessType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AccessType>() {
            public AccessType findValueByNumber(int number) {
              return AccessType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(40);
    }
    
    private static final AccessType[] VALUES = {
      ACCESS_TYPE_WIRED, ACCESS_TYPE_WIRELESS, 
    };
    
    public static AccessType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private AccessType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.AccessType)
  }
  
  public enum QosMode
      implements com.google.protobuf.ProtocolMessageEnum {
    QOS_MODE_NORMAL(0, 1),
    QOS_MODE_EXCLUSIVE(1, 2),
    ;
    
    public static final int QOS_MODE_NORMAL_VALUE = 1;
    public static final int QOS_MODE_EXCLUSIVE_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static QosMode valueOf(int value) {
      switch (value) {
        case 1: return QOS_MODE_NORMAL;
        case 2: return QOS_MODE_EXCLUSIVE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<QosMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<QosMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QosMode>() {
            public QosMode findValueByNumber(int number) {
              return QosMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(41);
    }
    
    private static final QosMode[] VALUES = {
      QOS_MODE_NORMAL, QOS_MODE_EXCLUSIVE, 
    };
    
    public static QosMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private QosMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.QosMode)
  }
  
  public enum AclRuleMode
      implements com.google.protobuf.ProtocolMessageEnum {
    ACL_RULE_DISABLE(0, 0),
    ACL_RULE_BLACKLIST(1, 1),
    ACL_RULE_WHITELIST(2, 2),
    ;
    
    public static final int ACL_RULE_DISABLE_VALUE = 0;
    public static final int ACL_RULE_BLACKLIST_VALUE = 1;
    public static final int ACL_RULE_WHITELIST_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static AclRuleMode valueOf(int value) {
      switch (value) {
        case 0: return ACL_RULE_DISABLE;
        case 1: return ACL_RULE_BLACKLIST;
        case 2: return ACL_RULE_WHITELIST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<AclRuleMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AclRuleMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AclRuleMode>() {
            public AclRuleMode findValueByNumber(int number) {
              return AclRuleMode.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(42);
    }
    
    private static final AclRuleMode[] VALUES = {
      ACL_RULE_DISABLE, ACL_RULE_BLACKLIST, ACL_RULE_WHITELIST, 
    };
    
    public static AclRuleMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private AclRuleMode(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.AclRuleMode)
  }
  
  public enum HddStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    HDD_STATUS_NOT_INSTALLED(0, 0),
    HDD_STATUS_NOT_INITIALIZED(1, 1),
    HDD_STATUS_AVAILABLE(2, 2),
    ;
    
    public static final int HDD_STATUS_NOT_INSTALLED_VALUE = 0;
    public static final int HDD_STATUS_NOT_INITIALIZED_VALUE = 1;
    public static final int HDD_STATUS_AVAILABLE_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static HddStatus valueOf(int value) {
      switch (value) {
        case 0: return HDD_STATUS_NOT_INSTALLED;
        case 1: return HDD_STATUS_NOT_INITIALIZED;
        case 2: return HDD_STATUS_AVAILABLE;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<HddStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<HddStatus>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HddStatus>() {
            public HddStatus findValueByNumber(int number) {
              return HddStatus.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(43);
    }
    
    private static final HddStatus[] VALUES = {
      HDD_STATUS_NOT_INSTALLED, HDD_STATUS_NOT_INITIALIZED, HDD_STATUS_AVAILABLE, 
    };
    
    public static HddStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private HddStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.HddStatus)
  }
  
  public enum NetworkProtocol
      implements com.google.protobuf.ProtocolMessageEnum {
    NETWORK_PROTOCOL_TCP(0, 0),
    NETWORK_PROTOCOL_UDP(1, 1),
    ;
    
    public static final int NETWORK_PROTOCOL_TCP_VALUE = 0;
    public static final int NETWORK_PROTOCOL_UDP_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static NetworkProtocol valueOf(int value) {
      switch (value) {
        case 0: return NETWORK_PROTOCOL_TCP;
        case 1: return NETWORK_PROTOCOL_UDP;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<NetworkProtocol>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NetworkProtocol>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NetworkProtocol>() {
            public NetworkProtocol findValueByNumber(int number) {
              return NetworkProtocol.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(44);
    }
    
    private static final NetworkProtocol[] VALUES = {
      NETWORK_PROTOCOL_TCP, NETWORK_PROTOCOL_UDP, 
    };
    
    public static NetworkProtocol valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private NetworkProtocol(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.NetworkProtocol)
  }
  
  public enum SignalStrengthLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    SIGNAL_STRENGTH_LEVEL_LOW(0, 0),
    SIGNAL_STRENGTH_LEVEL_MIDDLE(1, 1),
    SIGNAL_STRENGTH_LEVEL_HIGH(2, 2),
    ;
    
    public static final int SIGNAL_STRENGTH_LEVEL_LOW_VALUE = 0;
    public static final int SIGNAL_STRENGTH_LEVEL_MIDDLE_VALUE = 1;
    public static final int SIGNAL_STRENGTH_LEVEL_HIGH_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static SignalStrengthLevel valueOf(int value) {
      switch (value) {
        case 0: return SIGNAL_STRENGTH_LEVEL_LOW;
        case 1: return SIGNAL_STRENGTH_LEVEL_MIDDLE;
        case 2: return SIGNAL_STRENGTH_LEVEL_HIGH;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<SignalStrengthLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SignalStrengthLevel>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignalStrengthLevel>() {
            public SignalStrengthLevel findValueByNumber(int number) {
              return SignalStrengthLevel.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(45);
    }
    
    private static final SignalStrengthLevel[] VALUES = {
      SIGNAL_STRENGTH_LEVEL_LOW, SIGNAL_STRENGTH_LEVEL_MIDDLE, SIGNAL_STRENGTH_LEVEL_HIGH, 
    };
    
    public static SignalStrengthLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private SignalStrengthLevel(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.SignalStrengthLevel)
  }
  
  public enum PPPoEState
      implements com.google.protobuf.ProtocolMessageEnum {
    PPPOE_STATE_DISCONNECTED(0, 0),
    PPPOE_STATE_CONNECTED(1, 1),
    ;
    
    public static final int PPPOE_STATE_DISCONNECTED_VALUE = 0;
    public static final int PPPOE_STATE_CONNECTED_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static PPPoEState valueOf(int value) {
      switch (value) {
        case 0: return PPPOE_STATE_DISCONNECTED;
        case 1: return PPPOE_STATE_CONNECTED;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<PPPoEState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PPPoEState>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PPPoEState>() {
            public PPPoEState findValueByNumber(int number) {
              return PPPoEState.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(46);
    }
    
    private static final PPPoEState[] VALUES = {
      PPPOE_STATE_DISCONNECTED, PPPOE_STATE_CONNECTED, 
    };
    
    public static PPPoEState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private PPPoEState(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.PPPoEState)
  }
  
  public enum QosPriority
      implements com.google.protobuf.ProtocolMessageEnum {
    QOS_PRIORITY_HIGHEST(0, 0),
    QOS_PRIORITY_HIGH(1, 1),
    QOS_PRIORITY_MEDIUM(2, 2),
    QOS_PRIORITY_LOW(3, 3),
    QOS_PRIORITY_LOWEST(4, 4),
    ;
    
    public static final int QOS_PRIORITY_HIGHEST_VALUE = 0;
    public static final int QOS_PRIORITY_HIGH_VALUE = 1;
    public static final int QOS_PRIORITY_MEDIUM_VALUE = 2;
    public static final int QOS_PRIORITY_LOW_VALUE = 3;
    public static final int QOS_PRIORITY_LOWEST_VALUE = 4;
    
    
    public final int getNumber() { return value; }
    
    public static QosPriority valueOf(int value) {
      switch (value) {
        case 0: return QOS_PRIORITY_HIGHEST;
        case 1: return QOS_PRIORITY_HIGH;
        case 2: return QOS_PRIORITY_MEDIUM;
        case 3: return QOS_PRIORITY_LOW;
        case 4: return QOS_PRIORITY_LOWEST;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<QosPriority>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<QosPriority>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<QosPriority>() {
            public QosPriority findValueByNumber(int number) {
              return QosPriority.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(47);
    }
    
    private static final QosPriority[] VALUES = {
      QOS_PRIORITY_HIGHEST, QOS_PRIORITY_HIGH, QOS_PRIORITY_MEDIUM, QOS_PRIORITY_LOW, QOS_PRIORITY_LOWEST, 
    };
    
    public static QosPriority valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private QosPriority(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.QosPriority)
  }
  
  public enum CpuId
      implements com.google.protobuf.ProtocolMessageEnum {
    CPU_ID_CPU0(0, 0),
    CPU_ID_CPU1(1, 1),
    ;
    
    public static final int CPU_ID_CPU0_VALUE = 0;
    public static final int CPU_ID_CPU1_VALUE = 1;
    
    
    public final int getNumber() { return value; }
    
    public static CpuId valueOf(int value) {
      switch (value) {
        case 0: return CPU_ID_CPU0;
        case 1: return CPU_ID_CPU1;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<CpuId>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CpuId>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CpuId>() {
            public CpuId findValueByNumber(int number) {
              return CpuId.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(48);
    }
    
    private static final CpuId[] VALUES = {
      CPU_ID_CPU0, CPU_ID_CPU1, 
    };
    
    public static CpuId valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private CpuId(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.CpuId)
  }
  
  public enum VpnType
      implements com.google.protobuf.ProtocolMessageEnum {
    VPN_TYPE_NONE(0, 0),
    VPN_TYPE_PPTP(1, 1),
    VPN_TYPE_L2TP(2, 2),
    ;
    
    public static final int VPN_TYPE_NONE_VALUE = 0;
    public static final int VPN_TYPE_PPTP_VALUE = 1;
    public static final int VPN_TYPE_L2TP_VALUE = 2;
    
    
    public final int getNumber() { return value; }
    
    public static VpnType valueOf(int value) {
      switch (value) {
        case 0: return VPN_TYPE_NONE;
        case 1: return VPN_TYPE_PPTP;
        case 2: return VPN_TYPE_L2TP;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<VpnType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<VpnType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VpnType>() {
            public VpnType findValueByNumber(int number) {
              return VpnType.valueOf(number);
            }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.getDescriptor().getEnumTypes().get(49);
    }
    
    private static final VpnType[] VALUES = {
      VPN_TYPE_NONE, VPN_TYPE_PPTP, VPN_TYPE_L2TP, 
    };
    
    public static VpnType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    
    private final int index;
    private final int value;
    
    private VpnType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.VpnType)
  }
  
  public interface SystemConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string locale = 1;
    boolean hasLocale();
    String getLocale();
    
    // optional string timezone = 2;
    boolean hasTimezone();
    String getTimezone();
    
    // optional bool ntp_enabled = 3;
    boolean hasNtpEnabled();
    boolean getNtpEnabled();
    
    // optional string admin_password = 4;
    boolean hasAdminPassword();
    String getAdminPassword();
    
    // optional string device_name = 5;
    boolean hasDeviceName();
    String getDeviceName();
    
    // optional int64 time = 6;
    boolean hasTime();
    long getTime();
    
    // optional string netbios_name = 7;
    boolean hasNetbiosName();
    String getNetbiosName();
    
    // optional string workgroup = 8;
    boolean hasWorkgroup();
    String getWorkgroup();
    
    // optional bool auto_update = 9;
    boolean hasAutoUpdate();
    boolean getAutoUpdate();
  }
  public static final class SystemConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements SystemConfigurationOrBuilder {
    // Use SystemConfiguration.newBuilder() to construct.
    private SystemConfiguration(Builder builder) {
      super(builder);
    }
    private SystemConfiguration(boolean noInit) {}
    
    private static final SystemConfiguration defaultInstance;
    public static SystemConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public SystemConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string locale = 1;
    public static final int LOCALE_FIELD_NUMBER = 1;
    private java.lang.Object locale_;
    public boolean hasLocale() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getLocale() {
      java.lang.Object ref = locale_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          locale_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLocaleBytes() {
      java.lang.Object ref = locale_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        locale_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string timezone = 2;
    public static final int TIMEZONE_FIELD_NUMBER = 2;
    private java.lang.Object timezone_;
    public boolean hasTimezone() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getTimezone() {
      java.lang.Object ref = timezone_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          timezone_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getTimezoneBytes() {
      java.lang.Object ref = timezone_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        timezone_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool ntp_enabled = 3;
    public static final int NTP_ENABLED_FIELD_NUMBER = 3;
    private boolean ntpEnabled_;
    public boolean hasNtpEnabled() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getNtpEnabled() {
      return ntpEnabled_;
    }
    
    // optional string admin_password = 4;
    public static final int ADMIN_PASSWORD_FIELD_NUMBER = 4;
    private java.lang.Object adminPassword_;
    public boolean hasAdminPassword() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getAdminPassword() {
      java.lang.Object ref = adminPassword_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          adminPassword_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAdminPasswordBytes() {
      java.lang.Object ref = adminPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        adminPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string device_name = 5;
    public static final int DEVICE_NAME_FIELD_NUMBER = 5;
    private java.lang.Object deviceName_;
    public boolean hasDeviceName() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          deviceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 time = 6;
    public static final int TIME_FIELD_NUMBER = 6;
    private long time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getTime() {
      return time_;
    }
    
    // optional string netbios_name = 7;
    public static final int NETBIOS_NAME_FIELD_NUMBER = 7;
    private java.lang.Object netbiosName_;
    public boolean hasNetbiosName() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getNetbiosName() {
      java.lang.Object ref = netbiosName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          netbiosName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNetbiosNameBytes() {
      java.lang.Object ref = netbiosName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        netbiosName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string workgroup = 8;
    public static final int WORKGROUP_FIELD_NUMBER = 8;
    private java.lang.Object workgroup_;
    public boolean hasWorkgroup() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getWorkgroup() {
      java.lang.Object ref = workgroup_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          workgroup_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWorkgroupBytes() {
      java.lang.Object ref = workgroup_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        workgroup_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool auto_update = 9;
    public static final int AUTO_UPDATE_FIELD_NUMBER = 9;
    private boolean autoUpdate_;
    public boolean hasAutoUpdate() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getAutoUpdate() {
      return autoUpdate_;
    }
    
    private void initFields() {
      locale_ = "";
      timezone_ = "";
      ntpEnabled_ = false;
      adminPassword_ = "";
      deviceName_ = "";
      time_ = 0L;
      netbiosName_ = "";
      workgroup_ = "";
      autoUpdate_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLocaleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getTimezoneBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, ntpEnabled_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getAdminPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getNetbiosNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getWorkgroupBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, autoUpdate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLocaleBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getTimezoneBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ntpEnabled_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getAdminPasswordBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, time_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getNetbiosNameBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getWorkgroupBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, autoUpdate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SystemConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SystemConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemConfiguration_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SystemConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        locale_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        timezone_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        ntpEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        adminPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        deviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        netbiosName_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        workgroup_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        autoUpdate_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SystemConfiguration.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SystemConfiguration getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SystemConfiguration.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SystemConfiguration build() {
        mrtech.smarthome.rpc.Models.SystemConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SystemConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SystemConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SystemConfiguration buildPartial() {
        mrtech.smarthome.rpc.Models.SystemConfiguration result = new mrtech.smarthome.rpc.Models.SystemConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.locale_ = locale_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timezone_ = timezone_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ntpEnabled_ = ntpEnabled_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.adminPassword_ = adminPassword_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.deviceName_ = deviceName_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.netbiosName_ = netbiosName_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.workgroup_ = workgroup_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.autoUpdate_ = autoUpdate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SystemConfiguration) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SystemConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SystemConfiguration other) {
        if (other == mrtech.smarthome.rpc.Models.SystemConfiguration.getDefaultInstance()) return this;
        if (other.hasLocale()) {
          setLocale(other.getLocale());
        }
        if (other.hasTimezone()) {
          setTimezone(other.getTimezone());
        }
        if (other.hasNtpEnabled()) {
          setNtpEnabled(other.getNtpEnabled());
        }
        if (other.hasAdminPassword()) {
          setAdminPassword(other.getAdminPassword());
        }
        if (other.hasDeviceName()) {
          setDeviceName(other.getDeviceName());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasNetbiosName()) {
          setNetbiosName(other.getNetbiosName());
        }
        if (other.hasWorkgroup()) {
          setWorkgroup(other.getWorkgroup());
        }
        if (other.hasAutoUpdate()) {
          setAutoUpdate(other.getAutoUpdate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              locale_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              timezone_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ntpEnabled_ = input.readBool();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              adminPassword_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              deviceName_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              time_ = input.readInt64();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              netbiosName_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              workgroup_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              autoUpdate_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string locale = 1;
      private java.lang.Object locale_ = "";
      public boolean hasLocale() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getLocale() {
        java.lang.Object ref = locale_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          locale_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLocale(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        locale_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocale() {
        bitField0_ = (bitField0_ & ~0x00000001);
        locale_ = getDefaultInstance().getLocale();
        onChanged();
        return this;
      }
      void setLocale(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        locale_ = value;
        onChanged();
      }
      
      // optional string timezone = 2;
      private java.lang.Object timezone_ = "";
      public boolean hasTimezone() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getTimezone() {
        java.lang.Object ref = timezone_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          timezone_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setTimezone(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        timezone_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimezone() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timezone_ = getDefaultInstance().getTimezone();
        onChanged();
        return this;
      }
      void setTimezone(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        timezone_ = value;
        onChanged();
      }
      
      // optional bool ntp_enabled = 3;
      private boolean ntpEnabled_ ;
      public boolean hasNtpEnabled() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getNtpEnabled() {
        return ntpEnabled_;
      }
      public Builder setNtpEnabled(boolean value) {
        bitField0_ |= 0x00000004;
        ntpEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearNtpEnabled() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ntpEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string admin_password = 4;
      private java.lang.Object adminPassword_ = "";
      public boolean hasAdminPassword() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getAdminPassword() {
        java.lang.Object ref = adminPassword_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          adminPassword_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAdminPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        adminPassword_ = value;
        onChanged();
        return this;
      }
      public Builder clearAdminPassword() {
        bitField0_ = (bitField0_ & ~0x00000008);
        adminPassword_ = getDefaultInstance().getAdminPassword();
        onChanged();
        return this;
      }
      void setAdminPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        adminPassword_ = value;
        onChanged();
      }
      
      // optional string device_name = 5;
      private java.lang.Object deviceName_ = "";
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDeviceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        deviceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceName() {
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      void setDeviceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        deviceName_ = value;
        onChanged();
      }
      
      // optional int64 time = 6;
      private long time_ ;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getTime() {
        return time_;
      }
      public Builder setTime(long value) {
        bitField0_ |= 0x00000020;
        time_ = value;
        onChanged();
        return this;
      }
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        time_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string netbios_name = 7;
      private java.lang.Object netbiosName_ = "";
      public boolean hasNetbiosName() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getNetbiosName() {
        java.lang.Object ref = netbiosName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          netbiosName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNetbiosName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        netbiosName_ = value;
        onChanged();
        return this;
      }
      public Builder clearNetbiosName() {
        bitField0_ = (bitField0_ & ~0x00000040);
        netbiosName_ = getDefaultInstance().getNetbiosName();
        onChanged();
        return this;
      }
      void setNetbiosName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        netbiosName_ = value;
        onChanged();
      }
      
      // optional string workgroup = 8;
      private java.lang.Object workgroup_ = "";
      public boolean hasWorkgroup() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getWorkgroup() {
        java.lang.Object ref = workgroup_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          workgroup_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWorkgroup(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        workgroup_ = value;
        onChanged();
        return this;
      }
      public Builder clearWorkgroup() {
        bitField0_ = (bitField0_ & ~0x00000080);
        workgroup_ = getDefaultInstance().getWorkgroup();
        onChanged();
        return this;
      }
      void setWorkgroup(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        workgroup_ = value;
        onChanged();
      }
      
      // optional bool auto_update = 9;
      private boolean autoUpdate_ ;
      public boolean hasAutoUpdate() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getAutoUpdate() {
        return autoUpdate_;
      }
      public Builder setAutoUpdate(boolean value) {
        bitField0_ |= 0x00000100;
        autoUpdate_ = value;
        onChanged();
        return this;
      }
      public Builder clearAutoUpdate() {
        bitField0_ = (bitField0_ & ~0x00000100);
        autoUpdate_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SystemConfiguration)
    }
    
    static {
      defaultInstance = new SystemConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SystemConfiguration)
  }
  
  public interface DhcpReservedOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string address = 1;
    boolean hasAddress();
    String getAddress();
    
    // optional string mac = 2;
    boolean hasMac();
    String getMac();
  }
  public static final class DhcpReserved extends
      com.google.protobuf.GeneratedMessage
      implements DhcpReservedOrBuilder {
    // Use DhcpReserved.newBuilder() to construct.
    private DhcpReserved(Builder builder) {
      super(builder);
    }
    private DhcpReserved(boolean noInit) {}
    
    private static final DhcpReserved defaultInstance;
    public static DhcpReserved getDefaultInstance() {
      return defaultInstance;
    }
    
    public DhcpReserved getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DhcpReserved_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DhcpReserved_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string address = 1;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string mac = 2;
    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      address_ = "";
      mac_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DhcpReserved parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.DhcpReserved prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DhcpReserved_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DhcpReserved_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.DhcpReserved.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.DhcpReserved.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.DhcpReserved getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.DhcpReserved.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.DhcpReserved build() {
        mrtech.smarthome.rpc.Models.DhcpReserved result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.DhcpReserved buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.DhcpReserved result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.DhcpReserved buildPartial() {
        mrtech.smarthome.rpc.Models.DhcpReserved result = new mrtech.smarthome.rpc.Models.DhcpReserved(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.DhcpReserved) {
          return mergeFrom((mrtech.smarthome.rpc.Models.DhcpReserved)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.DhcpReserved other) {
        if (other == mrtech.smarthome.rpc.Models.DhcpReserved.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              address_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mac_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string address = 1;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
      }
      
      // optional string mac = 2;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.DhcpReserved)
    }
    
    static {
      defaultInstance = new DhcpReserved(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.DhcpReserved)
  }
  
  public interface DnsRecordOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string domain = 1;
    boolean hasDomain();
    String getDomain();
    
    // optional string address = 2;
    boolean hasAddress();
    String getAddress();
  }
  public static final class DnsRecord extends
      com.google.protobuf.GeneratedMessage
      implements DnsRecordOrBuilder {
    // Use DnsRecord.newBuilder() to construct.
    private DnsRecord(Builder builder) {
      super(builder);
    }
    private DnsRecord(boolean noInit) {}
    
    private static final DnsRecord defaultInstance;
    public static DnsRecord getDefaultInstance() {
      return defaultInstance;
    }
    
    public DnsRecord getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DnsRecord_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DnsRecord_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string domain = 1;
    public static final int DOMAIN_FIELD_NUMBER = 1;
    private java.lang.Object domain_;
    public boolean hasDomain() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          domain_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string address = 2;
    public static final int ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      domain_ = "";
      address_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDomainBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAddressBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDomainBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAddressBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DnsRecord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.DnsRecord prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.DnsRecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DnsRecord_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DnsRecord_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.DnsRecord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        domain_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.DnsRecord.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.DnsRecord getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.DnsRecord.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.DnsRecord build() {
        mrtech.smarthome.rpc.Models.DnsRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.DnsRecord buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.DnsRecord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.DnsRecord buildPartial() {
        mrtech.smarthome.rpc.Models.DnsRecord result = new mrtech.smarthome.rpc.Models.DnsRecord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.domain_ = domain_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.address_ = address_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.DnsRecord) {
          return mergeFrom((mrtech.smarthome.rpc.Models.DnsRecord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.DnsRecord other) {
        if (other == mrtech.smarthome.rpc.Models.DnsRecord.getDefaultInstance()) return this;
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              domain_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              address_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string domain = 1;
      private java.lang.Object domain_ = "";
      public boolean hasDomain() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDomain(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        domain_ = value;
        onChanged();
        return this;
      }
      public Builder clearDomain() {
        bitField0_ = (bitField0_ & ~0x00000001);
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      void setDomain(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        domain_ = value;
        onChanged();
      }
      
      // optional string address = 2;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.DnsRecord)
    }
    
    static {
      defaultInstance = new DnsRecord(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.DnsRecord)
  }
  
  public interface EthernetConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string address = 1;
    boolean hasAddress();
    String getAddress();
    
    // optional string subnet_mask = 2;
    boolean hasSubnetMask();
    String getSubnetMask();
    
    // optional string gateway = 3;
    boolean hasGateway();
    String getGateway();
    
    // optional bool dhcp_enabled = 4;
    boolean hasDhcpEnabled();
    boolean getDhcpEnabled();
    
    // optional string dhcp_start = 5;
    boolean hasDhcpStart();
    String getDhcpStart();
    
    // optional string dhcp_end = 6;
    boolean hasDhcpEnd();
    String getDhcpEnd();
    
    // repeated .mrtech.smarthome.rpc.DhcpReserved dhcp_reserved = 7;
    java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved> 
        getDhcpReservedList();
    mrtech.smarthome.rpc.Models.DhcpReserved getDhcpReserved(int index);
    int getDhcpReservedCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder> 
        getDhcpReservedOrBuilderList();
    mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder getDhcpReservedOrBuilder(
        int index);
    
    // optional bool local_dns_enabled = 8;
    boolean hasLocalDnsEnabled();
    boolean getLocalDnsEnabled();
    
    // optional string primary_dns = 9;
    boolean hasPrimaryDns();
    String getPrimaryDns();
    
    // optional string secondary_dns = 10;
    boolean hasSecondaryDns();
    String getSecondaryDns();
    
    // repeated .mrtech.smarthome.rpc.DnsRecord local_dns_record = 11;
    java.util.List<mrtech.smarthome.rpc.Models.DnsRecord> 
        getLocalDnsRecordList();
    mrtech.smarthome.rpc.Models.DnsRecord getLocalDnsRecord(int index);
    int getLocalDnsRecordCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.DnsRecordOrBuilder> 
        getLocalDnsRecordOrBuilderList();
    mrtech.smarthome.rpc.Models.DnsRecordOrBuilder getLocalDnsRecordOrBuilder(
        int index);
  }
  public static final class EthernetConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements EthernetConfigurationOrBuilder {
    // Use EthernetConfiguration.newBuilder() to construct.
    private EthernetConfiguration(Builder builder) {
      super(builder);
    }
    private EthernetConfiguration(boolean noInit) {}
    
    private static final EthernetConfiguration defaultInstance;
    public static EthernetConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public EthernetConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string address = 1;
    public static final int ADDRESS_FIELD_NUMBER = 1;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string subnet_mask = 2;
    public static final int SUBNET_MASK_FIELD_NUMBER = 2;
    private java.lang.Object subnetMask_;
    public boolean hasSubnetMask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSubnetMask() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subnetMask_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubnetMaskBytes() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subnetMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string gateway = 3;
    public static final int GATEWAY_FIELD_NUMBER = 3;
    private java.lang.Object gateway_;
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getGateway() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          gateway_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGatewayBytes() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool dhcp_enabled = 4;
    public static final int DHCP_ENABLED_FIELD_NUMBER = 4;
    private boolean dhcpEnabled_;
    public boolean hasDhcpEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getDhcpEnabled() {
      return dhcpEnabled_;
    }
    
    // optional string dhcp_start = 5;
    public static final int DHCP_START_FIELD_NUMBER = 5;
    private java.lang.Object dhcpStart_;
    public boolean hasDhcpStart() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getDhcpStart() {
      java.lang.Object ref = dhcpStart_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dhcpStart_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDhcpStartBytes() {
      java.lang.Object ref = dhcpStart_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dhcpStart_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dhcp_end = 6;
    public static final int DHCP_END_FIELD_NUMBER = 6;
    private java.lang.Object dhcpEnd_;
    public boolean hasDhcpEnd() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getDhcpEnd() {
      java.lang.Object ref = dhcpEnd_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dhcpEnd_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDhcpEndBytes() {
      java.lang.Object ref = dhcpEnd_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dhcpEnd_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.DhcpReserved dhcp_reserved = 7;
    public static final int DHCP_RESERVED_FIELD_NUMBER = 7;
    private java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved> dhcpReserved_;
    public java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved> getDhcpReservedList() {
      return dhcpReserved_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder> 
        getDhcpReservedOrBuilderList() {
      return dhcpReserved_;
    }
    public int getDhcpReservedCount() {
      return dhcpReserved_.size();
    }
    public mrtech.smarthome.rpc.Models.DhcpReserved getDhcpReserved(int index) {
      return dhcpReserved_.get(index);
    }
    public mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder getDhcpReservedOrBuilder(
        int index) {
      return dhcpReserved_.get(index);
    }
    
    // optional bool local_dns_enabled = 8;
    public static final int LOCAL_DNS_ENABLED_FIELD_NUMBER = 8;
    private boolean localDnsEnabled_;
    public boolean hasLocalDnsEnabled() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getLocalDnsEnabled() {
      return localDnsEnabled_;
    }
    
    // optional string primary_dns = 9;
    public static final int PRIMARY_DNS_FIELD_NUMBER = 9;
    private java.lang.Object primaryDns_;
    public boolean hasPrimaryDns() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getPrimaryDns() {
      java.lang.Object ref = primaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          primaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPrimaryDnsBytes() {
      java.lang.Object ref = primaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        primaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string secondary_dns = 10;
    public static final int SECONDARY_DNS_FIELD_NUMBER = 10;
    private java.lang.Object secondaryDns_;
    public boolean hasSecondaryDns() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getSecondaryDns() {
      java.lang.Object ref = secondaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          secondaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSecondaryDnsBytes() {
      java.lang.Object ref = secondaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        secondaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.DnsRecord local_dns_record = 11;
    public static final int LOCAL_DNS_RECORD_FIELD_NUMBER = 11;
    private java.util.List<mrtech.smarthome.rpc.Models.DnsRecord> localDnsRecord_;
    public java.util.List<mrtech.smarthome.rpc.Models.DnsRecord> getLocalDnsRecordList() {
      return localDnsRecord_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.DnsRecordOrBuilder> 
        getLocalDnsRecordOrBuilderList() {
      return localDnsRecord_;
    }
    public int getLocalDnsRecordCount() {
      return localDnsRecord_.size();
    }
    public mrtech.smarthome.rpc.Models.DnsRecord getLocalDnsRecord(int index) {
      return localDnsRecord_.get(index);
    }
    public mrtech.smarthome.rpc.Models.DnsRecordOrBuilder getLocalDnsRecordOrBuilder(
        int index) {
      return localDnsRecord_.get(index);
    }
    
    private void initFields() {
      address_ = "";
      subnetMask_ = "";
      gateway_ = "";
      dhcpEnabled_ = false;
      dhcpStart_ = "";
      dhcpEnd_ = "";
      dhcpReserved_ = java.util.Collections.emptyList();
      localDnsEnabled_ = false;
      primaryDns_ = "";
      secondaryDns_ = "";
      localDnsRecord_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, dhcpEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getDhcpStartBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getDhcpEndBytes());
      }
      for (int i = 0; i < dhcpReserved_.size(); i++) {
        output.writeMessage(7, dhcpReserved_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, localDnsEnabled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getSecondaryDnsBytes());
      }
      for (int i = 0; i < localDnsRecord_.size(); i++) {
        output.writeMessage(11, localDnsRecord_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, dhcpEnabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDhcpStartBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getDhcpEndBytes());
      }
      for (int i = 0; i < dhcpReserved_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, dhcpReserved_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, localDnsEnabled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getSecondaryDnsBytes());
      }
      for (int i = 0; i < localDnsRecord_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, localDnsRecord_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.EthernetConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetConfiguration_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.EthernetConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDhcpReservedFieldBuilder();
          getLocalDnsRecordFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        subnetMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dhcpEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        dhcpStart_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        dhcpEnd_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (dhcpReservedBuilder_ == null) {
          dhcpReserved_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          dhcpReservedBuilder_.clear();
        }
        localDnsEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        primaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        secondaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (localDnsRecordBuilder_ == null) {
          localDnsRecord_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          localDnsRecordBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.EthernetConfiguration.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.EthernetConfiguration getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.EthernetConfiguration build() {
        mrtech.smarthome.rpc.Models.EthernetConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.EthernetConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.EthernetConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.EthernetConfiguration buildPartial() {
        mrtech.smarthome.rpc.Models.EthernetConfiguration result = new mrtech.smarthome.rpc.Models.EthernetConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subnetMask_ = subnetMask_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.dhcpEnabled_ = dhcpEnabled_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dhcpStart_ = dhcpStart_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dhcpEnd_ = dhcpEnd_;
        if (dhcpReservedBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            dhcpReserved_ = java.util.Collections.unmodifiableList(dhcpReserved_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.dhcpReserved_ = dhcpReserved_;
        } else {
          result.dhcpReserved_ = dhcpReservedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.localDnsEnabled_ = localDnsEnabled_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.primaryDns_ = primaryDns_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.secondaryDns_ = secondaryDns_;
        if (localDnsRecordBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            localDnsRecord_ = java.util.Collections.unmodifiableList(localDnsRecord_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.localDnsRecord_ = localDnsRecord_;
        } else {
          result.localDnsRecord_ = localDnsRecordBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.EthernetConfiguration) {
          return mergeFrom((mrtech.smarthome.rpc.Models.EthernetConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.EthernetConfiguration other) {
        if (other == mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance()) return this;
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasSubnetMask()) {
          setSubnetMask(other.getSubnetMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasDhcpEnabled()) {
          setDhcpEnabled(other.getDhcpEnabled());
        }
        if (other.hasDhcpStart()) {
          setDhcpStart(other.getDhcpStart());
        }
        if (other.hasDhcpEnd()) {
          setDhcpEnd(other.getDhcpEnd());
        }
        if (dhcpReservedBuilder_ == null) {
          if (!other.dhcpReserved_.isEmpty()) {
            if (dhcpReserved_.isEmpty()) {
              dhcpReserved_ = other.dhcpReserved_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureDhcpReservedIsMutable();
              dhcpReserved_.addAll(other.dhcpReserved_);
            }
            onChanged();
          }
        } else {
          if (!other.dhcpReserved_.isEmpty()) {
            if (dhcpReservedBuilder_.isEmpty()) {
              dhcpReservedBuilder_.dispose();
              dhcpReservedBuilder_ = null;
              dhcpReserved_ = other.dhcpReserved_;
              bitField0_ = (bitField0_ & ~0x00000040);
              dhcpReservedBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDhcpReservedFieldBuilder() : null;
            } else {
              dhcpReservedBuilder_.addAllMessages(other.dhcpReserved_);
            }
          }
        }
        if (other.hasLocalDnsEnabled()) {
          setLocalDnsEnabled(other.getLocalDnsEnabled());
        }
        if (other.hasPrimaryDns()) {
          setPrimaryDns(other.getPrimaryDns());
        }
        if (other.hasSecondaryDns()) {
          setSecondaryDns(other.getSecondaryDns());
        }
        if (localDnsRecordBuilder_ == null) {
          if (!other.localDnsRecord_.isEmpty()) {
            if (localDnsRecord_.isEmpty()) {
              localDnsRecord_ = other.localDnsRecord_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureLocalDnsRecordIsMutable();
              localDnsRecord_.addAll(other.localDnsRecord_);
            }
            onChanged();
          }
        } else {
          if (!other.localDnsRecord_.isEmpty()) {
            if (localDnsRecordBuilder_.isEmpty()) {
              localDnsRecordBuilder_.dispose();
              localDnsRecordBuilder_ = null;
              localDnsRecord_ = other.localDnsRecord_;
              bitField0_ = (bitField0_ & ~0x00000400);
              localDnsRecordBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLocalDnsRecordFieldBuilder() : null;
            } else {
              localDnsRecordBuilder_.addAllMessages(other.localDnsRecord_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              address_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              subnetMask_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              gateway_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              dhcpEnabled_ = input.readBool();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              dhcpStart_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              dhcpEnd_ = input.readBytes();
              break;
            }
            case 58: {
              mrtech.smarthome.rpc.Models.DhcpReserved.Builder subBuilder = mrtech.smarthome.rpc.Models.DhcpReserved.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDhcpReserved(subBuilder.buildPartial());
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              localDnsEnabled_ = input.readBool();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              primaryDns_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              secondaryDns_ = input.readBytes();
              break;
            }
            case 90: {
              mrtech.smarthome.rpc.Models.DnsRecord.Builder subBuilder = mrtech.smarthome.rpc.Models.DnsRecord.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addLocalDnsRecord(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string address = 1;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        address_ = value;
        onChanged();
      }
      
      // optional string subnet_mask = 2;
      private java.lang.Object subnetMask_ = "";
      public boolean hasSubnetMask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSubnetMask() {
        java.lang.Object ref = subnetMask_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subnetMask_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubnetMask(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        subnetMask_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubnetMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subnetMask_ = getDefaultInstance().getSubnetMask();
        onChanged();
        return this;
      }
      void setSubnetMask(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        subnetMask_ = value;
        onChanged();
      }
      
      // optional string gateway = 3;
      private java.lang.Object gateway_ = "";
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getGateway() {
        java.lang.Object ref = gateway_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          gateway_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGateway(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        gateway_ = value;
        onChanged();
        return this;
      }
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      void setGateway(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        gateway_ = value;
        onChanged();
      }
      
      // optional bool dhcp_enabled = 4;
      private boolean dhcpEnabled_ ;
      public boolean hasDhcpEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getDhcpEnabled() {
        return dhcpEnabled_;
      }
      public Builder setDhcpEnabled(boolean value) {
        bitField0_ |= 0x00000008;
        dhcpEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearDhcpEnabled() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dhcpEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string dhcp_start = 5;
      private java.lang.Object dhcpStart_ = "";
      public boolean hasDhcpStart() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getDhcpStart() {
        java.lang.Object ref = dhcpStart_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dhcpStart_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDhcpStart(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dhcpStart_ = value;
        onChanged();
        return this;
      }
      public Builder clearDhcpStart() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dhcpStart_ = getDefaultInstance().getDhcpStart();
        onChanged();
        return this;
      }
      void setDhcpStart(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        dhcpStart_ = value;
        onChanged();
      }
      
      // optional string dhcp_end = 6;
      private java.lang.Object dhcpEnd_ = "";
      public boolean hasDhcpEnd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getDhcpEnd() {
        java.lang.Object ref = dhcpEnd_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dhcpEnd_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDhcpEnd(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        dhcpEnd_ = value;
        onChanged();
        return this;
      }
      public Builder clearDhcpEnd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dhcpEnd_ = getDefaultInstance().getDhcpEnd();
        onChanged();
        return this;
      }
      void setDhcpEnd(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        dhcpEnd_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.DhcpReserved dhcp_reserved = 7;
      private java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved> dhcpReserved_ =
        java.util.Collections.emptyList();
      private void ensureDhcpReservedIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          dhcpReserved_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.DhcpReserved>(dhcpReserved_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.DhcpReserved, mrtech.smarthome.rpc.Models.DhcpReserved.Builder, mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder> dhcpReservedBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved> getDhcpReservedList() {
        if (dhcpReservedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dhcpReserved_);
        } else {
          return dhcpReservedBuilder_.getMessageList();
        }
      }
      public int getDhcpReservedCount() {
        if (dhcpReservedBuilder_ == null) {
          return dhcpReserved_.size();
        } else {
          return dhcpReservedBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.DhcpReserved getDhcpReserved(int index) {
        if (dhcpReservedBuilder_ == null) {
          return dhcpReserved_.get(index);
        } else {
          return dhcpReservedBuilder_.getMessage(index);
        }
      }
      public Builder setDhcpReserved(
          int index, mrtech.smarthome.rpc.Models.DhcpReserved value) {
        if (dhcpReservedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDhcpReservedIsMutable();
          dhcpReserved_.set(index, value);
          onChanged();
        } else {
          dhcpReservedBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setDhcpReserved(
          int index, mrtech.smarthome.rpc.Models.DhcpReserved.Builder builderForValue) {
        if (dhcpReservedBuilder_ == null) {
          ensureDhcpReservedIsMutable();
          dhcpReserved_.set(index, builderForValue.build());
          onChanged();
        } else {
          dhcpReservedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addDhcpReserved(mrtech.smarthome.rpc.Models.DhcpReserved value) {
        if (dhcpReservedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDhcpReservedIsMutable();
          dhcpReserved_.add(value);
          onChanged();
        } else {
          dhcpReservedBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addDhcpReserved(
          int index, mrtech.smarthome.rpc.Models.DhcpReserved value) {
        if (dhcpReservedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDhcpReservedIsMutable();
          dhcpReserved_.add(index, value);
          onChanged();
        } else {
          dhcpReservedBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addDhcpReserved(
          mrtech.smarthome.rpc.Models.DhcpReserved.Builder builderForValue) {
        if (dhcpReservedBuilder_ == null) {
          ensureDhcpReservedIsMutable();
          dhcpReserved_.add(builderForValue.build());
          onChanged();
        } else {
          dhcpReservedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addDhcpReserved(
          int index, mrtech.smarthome.rpc.Models.DhcpReserved.Builder builderForValue) {
        if (dhcpReservedBuilder_ == null) {
          ensureDhcpReservedIsMutable();
          dhcpReserved_.add(index, builderForValue.build());
          onChanged();
        } else {
          dhcpReservedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllDhcpReserved(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.DhcpReserved> values) {
        if (dhcpReservedBuilder_ == null) {
          ensureDhcpReservedIsMutable();
          super.addAll(values, dhcpReserved_);
          onChanged();
        } else {
          dhcpReservedBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearDhcpReserved() {
        if (dhcpReservedBuilder_ == null) {
          dhcpReserved_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          dhcpReservedBuilder_.clear();
        }
        return this;
      }
      public Builder removeDhcpReserved(int index) {
        if (dhcpReservedBuilder_ == null) {
          ensureDhcpReservedIsMutable();
          dhcpReserved_.remove(index);
          onChanged();
        } else {
          dhcpReservedBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.DhcpReserved.Builder getDhcpReservedBuilder(
          int index) {
        return getDhcpReservedFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder getDhcpReservedOrBuilder(
          int index) {
        if (dhcpReservedBuilder_ == null) {
          return dhcpReserved_.get(index);  } else {
          return dhcpReservedBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder> 
           getDhcpReservedOrBuilderList() {
        if (dhcpReservedBuilder_ != null) {
          return dhcpReservedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dhcpReserved_);
        }
      }
      public mrtech.smarthome.rpc.Models.DhcpReserved.Builder addDhcpReservedBuilder() {
        return getDhcpReservedFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.DhcpReserved.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.DhcpReserved.Builder addDhcpReservedBuilder(
          int index) {
        return getDhcpReservedFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.DhcpReserved.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.DhcpReserved.Builder> 
           getDhcpReservedBuilderList() {
        return getDhcpReservedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.DhcpReserved, mrtech.smarthome.rpc.Models.DhcpReserved.Builder, mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder> 
          getDhcpReservedFieldBuilder() {
        if (dhcpReservedBuilder_ == null) {
          dhcpReservedBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.DhcpReserved, mrtech.smarthome.rpc.Models.DhcpReserved.Builder, mrtech.smarthome.rpc.Models.DhcpReservedOrBuilder>(
                  dhcpReserved_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          dhcpReserved_ = null;
        }
        return dhcpReservedBuilder_;
      }
      
      // optional bool local_dns_enabled = 8;
      private boolean localDnsEnabled_ ;
      public boolean hasLocalDnsEnabled() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getLocalDnsEnabled() {
        return localDnsEnabled_;
      }
      public Builder setLocalDnsEnabled(boolean value) {
        bitField0_ |= 0x00000080;
        localDnsEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalDnsEnabled() {
        bitField0_ = (bitField0_ & ~0x00000080);
        localDnsEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string primary_dns = 9;
      private java.lang.Object primaryDns_ = "";
      public boolean hasPrimaryDns() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getPrimaryDns() {
        java.lang.Object ref = primaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          primaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPrimaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        primaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrimaryDns() {
        bitField0_ = (bitField0_ & ~0x00000100);
        primaryDns_ = getDefaultInstance().getPrimaryDns();
        onChanged();
        return this;
      }
      void setPrimaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        primaryDns_ = value;
        onChanged();
      }
      
      // optional string secondary_dns = 10;
      private java.lang.Object secondaryDns_ = "";
      public boolean hasSecondaryDns() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getSecondaryDns() {
        java.lang.Object ref = secondaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          secondaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSecondaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        secondaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondaryDns() {
        bitField0_ = (bitField0_ & ~0x00000200);
        secondaryDns_ = getDefaultInstance().getSecondaryDns();
        onChanged();
        return this;
      }
      void setSecondaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        secondaryDns_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.DnsRecord local_dns_record = 11;
      private java.util.List<mrtech.smarthome.rpc.Models.DnsRecord> localDnsRecord_ =
        java.util.Collections.emptyList();
      private void ensureLocalDnsRecordIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          localDnsRecord_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.DnsRecord>(localDnsRecord_);
          bitField0_ |= 0x00000400;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.DnsRecord, mrtech.smarthome.rpc.Models.DnsRecord.Builder, mrtech.smarthome.rpc.Models.DnsRecordOrBuilder> localDnsRecordBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.DnsRecord> getLocalDnsRecordList() {
        if (localDnsRecordBuilder_ == null) {
          return java.util.Collections.unmodifiableList(localDnsRecord_);
        } else {
          return localDnsRecordBuilder_.getMessageList();
        }
      }
      public int getLocalDnsRecordCount() {
        if (localDnsRecordBuilder_ == null) {
          return localDnsRecord_.size();
        } else {
          return localDnsRecordBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.DnsRecord getLocalDnsRecord(int index) {
        if (localDnsRecordBuilder_ == null) {
          return localDnsRecord_.get(index);
        } else {
          return localDnsRecordBuilder_.getMessage(index);
        }
      }
      public Builder setLocalDnsRecord(
          int index, mrtech.smarthome.rpc.Models.DnsRecord value) {
        if (localDnsRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.set(index, value);
          onChanged();
        } else {
          localDnsRecordBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setLocalDnsRecord(
          int index, mrtech.smarthome.rpc.Models.DnsRecord.Builder builderForValue) {
        if (localDnsRecordBuilder_ == null) {
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.set(index, builderForValue.build());
          onChanged();
        } else {
          localDnsRecordBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addLocalDnsRecord(mrtech.smarthome.rpc.Models.DnsRecord value) {
        if (localDnsRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.add(value);
          onChanged();
        } else {
          localDnsRecordBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addLocalDnsRecord(
          int index, mrtech.smarthome.rpc.Models.DnsRecord value) {
        if (localDnsRecordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.add(index, value);
          onChanged();
        } else {
          localDnsRecordBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addLocalDnsRecord(
          mrtech.smarthome.rpc.Models.DnsRecord.Builder builderForValue) {
        if (localDnsRecordBuilder_ == null) {
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.add(builderForValue.build());
          onChanged();
        } else {
          localDnsRecordBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addLocalDnsRecord(
          int index, mrtech.smarthome.rpc.Models.DnsRecord.Builder builderForValue) {
        if (localDnsRecordBuilder_ == null) {
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.add(index, builderForValue.build());
          onChanged();
        } else {
          localDnsRecordBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllLocalDnsRecord(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.DnsRecord> values) {
        if (localDnsRecordBuilder_ == null) {
          ensureLocalDnsRecordIsMutable();
          super.addAll(values, localDnsRecord_);
          onChanged();
        } else {
          localDnsRecordBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearLocalDnsRecord() {
        if (localDnsRecordBuilder_ == null) {
          localDnsRecord_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          localDnsRecordBuilder_.clear();
        }
        return this;
      }
      public Builder removeLocalDnsRecord(int index) {
        if (localDnsRecordBuilder_ == null) {
          ensureLocalDnsRecordIsMutable();
          localDnsRecord_.remove(index);
          onChanged();
        } else {
          localDnsRecordBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.DnsRecord.Builder getLocalDnsRecordBuilder(
          int index) {
        return getLocalDnsRecordFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.DnsRecordOrBuilder getLocalDnsRecordOrBuilder(
          int index) {
        if (localDnsRecordBuilder_ == null) {
          return localDnsRecord_.get(index);  } else {
          return localDnsRecordBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.DnsRecordOrBuilder> 
           getLocalDnsRecordOrBuilderList() {
        if (localDnsRecordBuilder_ != null) {
          return localDnsRecordBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(localDnsRecord_);
        }
      }
      public mrtech.smarthome.rpc.Models.DnsRecord.Builder addLocalDnsRecordBuilder() {
        return getLocalDnsRecordFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.DnsRecord.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.DnsRecord.Builder addLocalDnsRecordBuilder(
          int index) {
        return getLocalDnsRecordFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.DnsRecord.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.DnsRecord.Builder> 
           getLocalDnsRecordBuilderList() {
        return getLocalDnsRecordFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.DnsRecord, mrtech.smarthome.rpc.Models.DnsRecord.Builder, mrtech.smarthome.rpc.Models.DnsRecordOrBuilder> 
          getLocalDnsRecordFieldBuilder() {
        if (localDnsRecordBuilder_ == null) {
          localDnsRecordBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.DnsRecord, mrtech.smarthome.rpc.Models.DnsRecord.Builder, mrtech.smarthome.rpc.Models.DnsRecordOrBuilder>(
                  localDnsRecord_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          localDnsRecord_ = null;
        }
        return localDnsRecordBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.EthernetConfiguration)
    }
    
    static {
      defaultInstance = new EthernetConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.EthernetConfiguration)
  }
  
  public interface SystemLogOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int64 timestamp = 2;
    boolean hasTimestamp();
    long getTimestamp();
    
    // optional int32 thread_id = 3;
    boolean hasThreadId();
    int getThreadId();
    
    // optional string channel = 4;
    boolean hasChannel();
    String getChannel();
    
    // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
    boolean hasSeverity();
    mrtech.smarthome.rpc.Models.SeverityLevel getSeverity();
    
    // optional string message = 6;
    boolean hasMessage();
    String getMessage();
  }
  public static final class SystemLog extends
      com.google.protobuf.GeneratedMessage
      implements SystemLogOrBuilder {
    // Use SystemLog.newBuilder() to construct.
    private SystemLog(Builder builder) {
      super(builder);
    }
    private SystemLog(boolean noInit) {}
    
    private static final SystemLog defaultInstance;
    public static SystemLog getDefaultInstance() {
      return defaultInstance;
    }
    
    public SystemLog getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLog_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLog_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // optional int32 thread_id = 3;
    public static final int THREAD_ID_FIELD_NUMBER = 3;
    private int threadId_;
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getThreadId() {
      return threadId_;
    }
    
    // optional string channel = 4;
    public static final int CHANNEL_FIELD_NUMBER = 4;
    private java.lang.Object channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          channel_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
    public static final int SEVERITY_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.SeverityLevel severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.SeverityLevel getSeverity() {
      return severity_;
    }
    
    // optional string message = 6;
    public static final int MESSAGE_FIELD_NUMBER = 6;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0;
      timestamp_ = 0L;
      threadId_ = 0;
      channel_ = "";
      severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
      message_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, threadId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getChannelBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, severity_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getMessageBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, threadId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getChannelBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, severity_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMessageBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SystemLog prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SystemLogOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLog_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLog_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SystemLog.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
        bitField0_ = (bitField0_ & ~0x00000010);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SystemLog.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SystemLog getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SystemLog.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SystemLog build() {
        mrtech.smarthome.rpc.Models.SystemLog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SystemLog buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SystemLog result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SystemLog buildPartial() {
        mrtech.smarthome.rpc.Models.SystemLog result = new mrtech.smarthome.rpc.Models.SystemLog(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.threadId_ = threadId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.message_ = message_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SystemLog) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SystemLog)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SystemLog other) {
        if (other == mrtech.smarthome.rpc.Models.SystemLog.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              threadId_ = input.readInt32();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              channel_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SeverityLevel value = mrtech.smarthome.rpc.Models.SeverityLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                severity_ = value;
              }
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              message_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 timestamp = 2;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 thread_id = 3;
      private int threadId_ ;
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getThreadId() {
        return threadId_;
      }
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000004;
        threadId_ = value;
        onChanged();
        return this;
      }
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        threadId_ = 0;
        onChanged();
        return this;
      }
      
      // optional string channel = 4;
      private java.lang.Object channel_ = "";
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChannel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000008);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      void setChannel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        channel_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
      private mrtech.smarthome.rpc.Models.SeverityLevel severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.SeverityLevel getSeverity() {
        return severity_;
      }
      public Builder setSeverity(mrtech.smarthome.rpc.Models.SeverityLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
        onChanged();
        return this;
      }
      
      // optional string message = 6;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        message_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SystemLog)
    }
    
    static {
      defaultInstance = new SystemLog(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SystemLog)
  }
  
  public interface SystemLogQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 since = 1;
    boolean hasSince();
    long getSince();
    
    // optional int64 until = 2;
    boolean hasUntil();
    long getUntil();
    
    // optional string channel = 3;
    boolean hasChannel();
    String getChannel();
    
    // optional string message = 4;
    boolean hasMessage();
    String getMessage();
    
    // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
    boolean hasSeverity();
    mrtech.smarthome.rpc.Models.SeverityLevel getSeverity();
    
    // optional int32 page = 6;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 7;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class SystemLogQuery extends
      com.google.protobuf.GeneratedMessage
      implements SystemLogQueryOrBuilder {
    // Use SystemLogQuery.newBuilder() to construct.
    private SystemLogQuery(Builder builder) {
      super(builder);
    }
    private SystemLogQuery(boolean noInit) {}
    
    private static final SystemLogQuery defaultInstance;
    public static SystemLogQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public SystemLogQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLogQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLogQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 since = 1;
    public static final int SINCE_FIELD_NUMBER = 1;
    private long since_;
    public boolean hasSince() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSince() {
      return since_;
    }
    
    // optional int64 until = 2;
    public static final int UNTIL_FIELD_NUMBER = 2;
    private long until_;
    public boolean hasUntil() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUntil() {
      return until_;
    }
    
    // optional string channel = 3;
    public static final int CHANNEL_FIELD_NUMBER = 3;
    private java.lang.Object channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getChannel() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          channel_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getChannelBytes() {
      java.lang.Object ref = channel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        channel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string message = 4;
    public static final int MESSAGE_FIELD_NUMBER = 4;
    private java.lang.Object message_;
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getMessage() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          message_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMessageBytes() {
      java.lang.Object ref = message_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        message_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
    public static final int SEVERITY_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.SeverityLevel severity_;
    public boolean hasSeverity() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.SeverityLevel getSeverity() {
      return severity_;
    }
    
    // optional int32 page = 6;
    public static final int PAGE_FIELD_NUMBER = 6;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 7;
    public static final int PAGE_SIZE_FIELD_NUMBER = 7;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      since_ = 0L;
      until_ = 0L;
      channel_ = "";
      message_ = "";
      severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, since_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, until_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getChannelBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getMessageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, severity_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, page_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, since_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, until_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getChannelBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getMessageBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, severity_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, page_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemLogQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SystemLogQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SystemLogQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLogQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemLogQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SystemLogQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        since_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        until_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        message_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
        bitField0_ = (bitField0_ & ~0x00000010);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SystemLogQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SystemLogQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SystemLogQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SystemLogQuery build() {
        mrtech.smarthome.rpc.Models.SystemLogQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SystemLogQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SystemLogQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SystemLogQuery buildPartial() {
        mrtech.smarthome.rpc.Models.SystemLogQuery result = new mrtech.smarthome.rpc.Models.SystemLogQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.since_ = since_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.until_ = until_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.message_ = message_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.severity_ = severity_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SystemLogQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SystemLogQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SystemLogQuery other) {
        if (other == mrtech.smarthome.rpc.Models.SystemLogQuery.getDefaultInstance()) return this;
        if (other.hasSince()) {
          setSince(other.getSince());
        }
        if (other.hasUntil()) {
          setUntil(other.getUntil());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              since_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              until_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              channel_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              message_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SeverityLevel value = mrtech.smarthome.rpc.Models.SeverityLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                severity_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              page_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 since = 1;
      private long since_ ;
      public boolean hasSince() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSince() {
        return since_;
      }
      public Builder setSince(long value) {
        bitField0_ |= 0x00000001;
        since_ = value;
        onChanged();
        return this;
      }
      public Builder clearSince() {
        bitField0_ = (bitField0_ & ~0x00000001);
        since_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 until = 2;
      private long until_ ;
      public boolean hasUntil() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUntil() {
        return until_;
      }
      public Builder setUntil(long value) {
        bitField0_ |= 0x00000002;
        until_ = value;
        onChanged();
        return this;
      }
      public Builder clearUntil() {
        bitField0_ = (bitField0_ & ~0x00000002);
        until_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string channel = 3;
      private java.lang.Object channel_ = "";
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getChannel() {
        java.lang.Object ref = channel_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          channel_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setChannel(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        channel_ = getDefaultInstance().getChannel();
        onChanged();
        return this;
      }
      void setChannel(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        channel_ = value;
        onChanged();
      }
      
      // optional string message = 4;
      private java.lang.Object message_ = "";
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getMessage() {
        java.lang.Object ref = message_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          message_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMessage(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        message_ = value;
        onChanged();
        return this;
      }
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        message_ = getDefaultInstance().getMessage();
        onChanged();
        return this;
      }
      void setMessage(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        message_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.SeverityLevel severity = 5;
      private mrtech.smarthome.rpc.Models.SeverityLevel severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
      public boolean hasSeverity() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.SeverityLevel getSeverity() {
        return severity_;
      }
      public Builder setSeverity(mrtech.smarthome.rpc.Models.SeverityLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        severity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSeverity() {
        bitField0_ = (bitField0_ & ~0x00000010);
        severity_ = mrtech.smarthome.rpc.Models.SeverityLevel.INFO;
        onChanged();
        return this;
      }
      
      // optional int32 page = 6;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000020;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 7;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000040;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SystemLogQuery)
    }
    
    static {
      defaultInstance = new SystemLogQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SystemLogQuery)
  }
  
  public interface EthernetInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string ip_address = 1;
    boolean hasIpAddress();
    String getIpAddress();
  }
  public static final class EthernetInfo extends
      com.google.protobuf.GeneratedMessage
      implements EthernetInfoOrBuilder {
    // Use EthernetInfo.newBuilder() to construct.
    private EthernetInfo(Builder builder) {
      super(builder);
    }
    private EthernetInfo(boolean noInit) {}
    
    private static final EthernetInfo defaultInstance;
    public static EthernetInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public EthernetInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string ip_address = 1;
    public static final int IP_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.Object ipAddress_;
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      ipAddress_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getIpAddressBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getIpAddressBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EthernetInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.EthernetInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.EthernetInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EthernetInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.EthernetInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.EthernetInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.EthernetInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.EthernetInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.EthernetInfo build() {
        mrtech.smarthome.rpc.Models.EthernetInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.EthernetInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.EthernetInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.EthernetInfo buildPartial() {
        mrtech.smarthome.rpc.Models.EthernetInfo result = new mrtech.smarthome.rpc.Models.EthernetInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ipAddress_ = ipAddress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.EthernetInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.EthernetInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.EthernetInfo other) {
        if (other == mrtech.smarthome.rpc.Models.EthernetInfo.getDefaultInstance()) return this;
        if (other.hasIpAddress()) {
          setIpAddress(other.getIpAddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ipAddress_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string ip_address = 1;
      private java.lang.Object ipAddress_ = "";
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      void setIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        ipAddress_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.EthernetInfo)
    }
    
    static {
      defaultInstance = new EthernetInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.EthernetInfo)
  }
  
  public interface WlanInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string essid = 1;
    boolean hasEssid();
    String getEssid();
    
    // optional string address = 2;
    boolean hasAddress();
    String getAddress();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 3;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getEncryptionModeList();
    mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index);
    int getEncryptionModeCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getEncryptionModeOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
        int index);
  }
  public static final class WlanInfo extends
      com.google.protobuf.GeneratedMessage
      implements WlanInfoOrBuilder {
    // Use WlanInfo.newBuilder() to construct.
    private WlanInfo(Builder builder) {
      super(builder);
    }
    private WlanInfo(boolean noInit) {}
    
    private static final WlanInfo defaultInstance;
    public static WlanInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public WlanInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string essid = 1;
    public static final int ESSID_FIELD_NUMBER = 1;
    private java.lang.Object essid_;
    public boolean hasEssid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getEssid() {
      java.lang.Object ref = essid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          essid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEssidBytes() {
      java.lang.Object ref = essid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        essid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string address = 2;
    public static final int ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          address_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 3;
    public static final int ENCRYPTION_MODE_FIELD_NUMBER = 3;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> encryptionMode_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getEncryptionModeList() {
      return encryptionMode_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getEncryptionModeOrBuilderList() {
      return encryptionMode_;
    }
    public int getEncryptionModeCount() {
      return encryptionMode_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index) {
      return encryptionMode_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
        int index) {
      return encryptionMode_.get(index);
    }
    
    private void initFields() {
      essid_ = "";
      address_ = "";
      encryptionMode_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getEssidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAddressBytes());
      }
      for (int i = 0; i < encryptionMode_.size(); i++) {
        output.writeMessage(3, encryptionMode_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getEssidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAddressBytes());
      }
      for (int i = 0; i < encryptionMode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, encryptionMode_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.WlanInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.WlanInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.WlanInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEncryptionModeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        essid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (encryptionModeBuilder_ == null) {
          encryptionMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          encryptionModeBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.WlanInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.WlanInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.WlanInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.WlanInfo build() {
        mrtech.smarthome.rpc.Models.WlanInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.WlanInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.WlanInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.WlanInfo buildPartial() {
        mrtech.smarthome.rpc.Models.WlanInfo result = new mrtech.smarthome.rpc.Models.WlanInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.essid_ = essid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.address_ = address_;
        if (encryptionModeBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            encryptionMode_ = java.util.Collections.unmodifiableList(encryptionMode_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.encryptionMode_ = encryptionMode_;
        } else {
          result.encryptionMode_ = encryptionModeBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.WlanInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.WlanInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.WlanInfo other) {
        if (other == mrtech.smarthome.rpc.Models.WlanInfo.getDefaultInstance()) return this;
        if (other.hasEssid()) {
          setEssid(other.getEssid());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (encryptionModeBuilder_ == null) {
          if (!other.encryptionMode_.isEmpty()) {
            if (encryptionMode_.isEmpty()) {
              encryptionMode_ = other.encryptionMode_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureEncryptionModeIsMutable();
              encryptionMode_.addAll(other.encryptionMode_);
            }
            onChanged();
          }
        } else {
          if (!other.encryptionMode_.isEmpty()) {
            if (encryptionModeBuilder_.isEmpty()) {
              encryptionModeBuilder_.dispose();
              encryptionModeBuilder_ = null;
              encryptionMode_ = other.encryptionMode_;
              bitField0_ = (bitField0_ & ~0x00000004);
              encryptionModeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEncryptionModeFieldBuilder() : null;
            } else {
              encryptionModeBuilder_.addAllMessages(other.encryptionMode_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              essid_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              address_ = input.readBytes();
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEncryptionMode(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string essid = 1;
      private java.lang.Object essid_ = "";
      public boolean hasEssid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getEssid() {
        java.lang.Object ref = essid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          essid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEssid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        essid_ = value;
        onChanged();
        return this;
      }
      public Builder clearEssid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        essid_ = getDefaultInstance().getEssid();
        onChanged();
        return this;
      }
      void setEssid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        essid_ = value;
        onChanged();
      }
      
      // optional string address = 2;
      private java.lang.Object address_ = "";
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      void setAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 3;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> encryptionMode_ =
        java.util.Collections.emptyList();
      private void ensureEncryptionModeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          encryptionMode_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(encryptionMode_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> encryptionModeBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getEncryptionModeList() {
        if (encryptionModeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encryptionMode_);
        } else {
          return encryptionModeBuilder_.getMessageList();
        }
      }
      public int getEncryptionModeCount() {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.size();
        } else {
          return encryptionModeBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index) {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.get(index);
        } else {
          return encryptionModeBuilder_.getMessage(index);
        }
      }
      public Builder setEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.set(index, value);
          onChanged();
        } else {
          encryptionModeBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.set(index, builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEncryptionMode(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(value);
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(index, value);
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEncryptionMode(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(index, builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEncryptionMode(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          super.addAll(values, encryptionMode_);
          onChanged();
        } else {
          encryptionModeBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEncryptionMode() {
        if (encryptionModeBuilder_ == null) {
          encryptionMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          encryptionModeBuilder_.clear();
        }
        return this;
      }
      public Builder removeEncryptionMode(int index) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.remove(index);
          onChanged();
        } else {
          encryptionModeBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getEncryptionModeBuilder(
          int index) {
        return getEncryptionModeFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
          int index) {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.get(index);  } else {
          return encryptionModeBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getEncryptionModeOrBuilderList() {
        if (encryptionModeBuilder_ != null) {
          return encryptionModeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encryptionMode_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addEncryptionModeBuilder() {
        return getEncryptionModeFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addEncryptionModeBuilder(
          int index) {
        return getEncryptionModeFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getEncryptionModeBuilderList() {
        return getEncryptionModeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getEncryptionModeFieldBuilder() {
        if (encryptionModeBuilder_ == null) {
          encryptionModeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  encryptionMode_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          encryptionMode_ = null;
        }
        return encryptionModeBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.WlanInfo)
    }
    
    static {
      defaultInstance = new WlanInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.WlanInfo)
  }
  
  public interface BatteryInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional float remaining = 1;
    boolean hasRemaining();
    float getRemaining();
    
    // optional .mrtech.smarthome.rpc.BatteryStatus status = 2;
    boolean hasStatus();
    mrtech.smarthome.rpc.Models.BatteryStatus getStatus();
  }
  public static final class BatteryInfo extends
      com.google.protobuf.GeneratedMessage
      implements BatteryInfoOrBuilder {
    // Use BatteryInfo.newBuilder() to construct.
    private BatteryInfo(Builder builder) {
      super(builder);
    }
    private BatteryInfo(boolean noInit) {}
    
    private static final BatteryInfo defaultInstance;
    public static BatteryInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public BatteryInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BatteryInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BatteryInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional float remaining = 1;
    public static final int REMAINING_FIELD_NUMBER = 1;
    private float remaining_;
    public boolean hasRemaining() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getRemaining() {
      return remaining_;
    }
    
    // optional .mrtech.smarthome.rpc.BatteryStatus status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.BatteryStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.BatteryStatus getStatus() {
      return status_;
    }
    
    private void initFields() {
      remaining_ = 0F;
      status_ = mrtech.smarthome.rpc.Models.BatteryStatus.BATTERY_STATUS_NO_BATTERY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, remaining_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, status_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, remaining_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BatteryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.BatteryInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.BatteryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BatteryInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BatteryInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.BatteryInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        remaining_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = mrtech.smarthome.rpc.Models.BatteryStatus.BATTERY_STATUS_NO_BATTERY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.BatteryInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.BatteryInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.BatteryInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.BatteryInfo build() {
        mrtech.smarthome.rpc.Models.BatteryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.BatteryInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.BatteryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.BatteryInfo buildPartial() {
        mrtech.smarthome.rpc.Models.BatteryInfo result = new mrtech.smarthome.rpc.Models.BatteryInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.remaining_ = remaining_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.status_ = status_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.BatteryInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.BatteryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.BatteryInfo other) {
        if (other == mrtech.smarthome.rpc.Models.BatteryInfo.getDefaultInstance()) return this;
        if (other.hasRemaining()) {
          setRemaining(other.getRemaining());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              remaining_ = input.readFloat();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.BatteryStatus value = mrtech.smarthome.rpc.Models.BatteryStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional float remaining = 1;
      private float remaining_ ;
      public boolean hasRemaining() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getRemaining() {
        return remaining_;
      }
      public Builder setRemaining(float value) {
        bitField0_ |= 0x00000001;
        remaining_ = value;
        onChanged();
        return this;
      }
      public Builder clearRemaining() {
        bitField0_ = (bitField0_ & ~0x00000001);
        remaining_ = 0F;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.BatteryStatus status = 2;
      private mrtech.smarthome.rpc.Models.BatteryStatus status_ = mrtech.smarthome.rpc.Models.BatteryStatus.BATTERY_STATUS_NO_BATTERY;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.BatteryStatus getStatus() {
        return status_;
      }
      public Builder setStatus(mrtech.smarthome.rpc.Models.BatteryStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = mrtech.smarthome.rpc.Models.BatteryStatus.BATTERY_STATUS_NO_BATTERY;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.BatteryInfo)
    }
    
    static {
      defaultInstance = new BatteryInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.BatteryInfo)
  }
  
  public interface MobileNetworkInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 1;
    boolean hasSubMode();
    mrtech.smarthome.rpc.Models.SubOperationMode getSubMode();
    
    // optional int32 rssi = 2;
    boolean hasRssi();
    int getRssi();
    
    // optional string ip_address = 3;
    boolean hasIpAddress();
    String getIpAddress();
    
    // optional int32 mcc = 4;
    boolean hasMcc();
    int getMcc();
    
    // optional int32 mnc = 5;
    boolean hasMnc();
    int getMnc();
  }
  public static final class MobileNetworkInfo extends
      com.google.protobuf.GeneratedMessage
      implements MobileNetworkInfoOrBuilder {
    // Use MobileNetworkInfo.newBuilder() to construct.
    private MobileNetworkInfo(Builder builder) {
      super(builder);
    }
    private MobileNetworkInfo(boolean noInit) {}
    
    private static final MobileNetworkInfo defaultInstance;
    public static MobileNetworkInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public MobileNetworkInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 1;
    public static final int SUB_MODE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.SubOperationMode subMode_;
    public boolean hasSubMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.SubOperationMode getSubMode() {
      return subMode_;
    }
    
    // optional int32 rssi = 2;
    public static final int RSSI_FIELD_NUMBER = 2;
    private int rssi_;
    public boolean hasRssi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRssi() {
      return rssi_;
    }
    
    // optional string ip_address = 3;
    public static final int IP_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.Object ipAddress_;
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 mcc = 4;
    public static final int MCC_FIELD_NUMBER = 4;
    private int mcc_;
    public boolean hasMcc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getMcc() {
      return mcc_;
    }
    
    // optional int32 mnc = 5;
    public static final int MNC_FIELD_NUMBER = 5;
    private int mnc_;
    public boolean hasMnc() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getMnc() {
      return mnc_;
    }
    
    private void initFields() {
      subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
      rssi_ = 0;
      ipAddress_ = "";
      mcc_ = 0;
      mnc_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, subMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, rssi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, mcc_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, mnc_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, subMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, rssi_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, mcc_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, mnc_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileNetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.MobileNetworkInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.MobileNetworkInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.MobileNetworkInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
        bitField0_ = (bitField0_ & ~0x00000001);
        rssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        mcc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        mnc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.MobileNetworkInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.MobileNetworkInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.MobileNetworkInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.MobileNetworkInfo build() {
        mrtech.smarthome.rpc.Models.MobileNetworkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.MobileNetworkInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.MobileNetworkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.MobileNetworkInfo buildPartial() {
        mrtech.smarthome.rpc.Models.MobileNetworkInfo result = new mrtech.smarthome.rpc.Models.MobileNetworkInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.subMode_ = subMode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.rssi_ = rssi_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ipAddress_ = ipAddress_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mcc_ = mcc_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.mnc_ = mnc_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.MobileNetworkInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.MobileNetworkInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.MobileNetworkInfo other) {
        if (other == mrtech.smarthome.rpc.Models.MobileNetworkInfo.getDefaultInstance()) return this;
        if (other.hasSubMode()) {
          setSubMode(other.getSubMode());
        }
        if (other.hasRssi()) {
          setRssi(other.getRssi());
        }
        if (other.hasIpAddress()) {
          setIpAddress(other.getIpAddress());
        }
        if (other.hasMcc()) {
          setMcc(other.getMcc());
        }
        if (other.hasMnc()) {
          setMnc(other.getMnc());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SubOperationMode value = mrtech.smarthome.rpc.Models.SubOperationMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                subMode_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              rssi_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ipAddress_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              mcc_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              mnc_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 1;
      private mrtech.smarthome.rpc.Models.SubOperationMode subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
      public boolean hasSubMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.SubOperationMode getSubMode() {
        return subMode_;
      }
      public Builder setSubMode(mrtech.smarthome.rpc.Models.SubOperationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        subMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
        onChanged();
        return this;
      }
      
      // optional int32 rssi = 2;
      private int rssi_ ;
      public boolean hasRssi() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRssi() {
        return rssi_;
      }
      public Builder setRssi(int value) {
        bitField0_ |= 0x00000002;
        rssi_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssi() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rssi_ = 0;
        onChanged();
        return this;
      }
      
      // optional string ip_address = 3;
      private java.lang.Object ipAddress_ = "";
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      void setIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        ipAddress_ = value;
        onChanged();
      }
      
      // optional int32 mcc = 4;
      private int mcc_ ;
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMcc() {
        return mcc_;
      }
      public Builder setMcc(int value) {
        bitField0_ |= 0x00000008;
        mcc_ = value;
        onChanged();
        return this;
      }
      public Builder clearMcc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mcc_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 mnc = 5;
      private int mnc_ ;
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getMnc() {
        return mnc_;
      }
      public Builder setMnc(int value) {
        bitField0_ |= 0x00000010;
        mnc_ = value;
        onChanged();
        return this;
      }
      public Builder clearMnc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mnc_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.MobileNetworkInfo)
    }
    
    static {
      defaultInstance = new MobileNetworkInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.MobileNetworkInfo)
  }
  
  public interface MobileInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.ServiceStatus status = 1;
    boolean hasStatus();
    mrtech.smarthome.rpc.Models.ServiceStatus getStatus();
    
    // optional .mrtech.smarthome.rpc.ServiceDomain domain = 2;
    boolean hasDomain();
    mrtech.smarthome.rpc.Models.ServiceDomain getDomain();
    
    // optional bool is_roaming = 3;
    boolean hasIsRoaming();
    boolean getIsRoaming();
    
    // optional .mrtech.smarthome.rpc.OperationMode mode = 4;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.OperationMode getMode();
    
    // optional .mrtech.smarthome.rpc.SimState sim_state = 5;
    boolean hasSimState();
    mrtech.smarthome.rpc.Models.SimState getSimState();
    
    // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 6;
    boolean hasSubMode();
    mrtech.smarthome.rpc.Models.SubOperationMode getSubMode();
    
    // optional string imei = 7;
    boolean hasImei();
    String getImei();
    
    // optional int32 rssi = 8;
    boolean hasRssi();
    int getRssi();
    
    // optional int32 mcc = 9;
    boolean hasMcc();
    int getMcc();
    
    // optional int32 mnc = 10;
    boolean hasMnc();
    int getMnc();
    
    // optional bool is_modem_installed = 11;
    boolean hasIsModemInstalled();
    boolean getIsModemInstalled();
    
    // optional bool is_data_connected = 12;
    boolean hasIsDataConnected();
    boolean getIsDataConnected();
  }
  public static final class MobileInfo extends
      com.google.protobuf.GeneratedMessage
      implements MobileInfoOrBuilder {
    // Use MobileInfo.newBuilder() to construct.
    private MobileInfo(Builder builder) {
      super(builder);
    }
    private MobileInfo(boolean noInit) {}
    
    private static final MobileInfo defaultInstance;
    public static MobileInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public MobileInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.ServiceStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.ServiceStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.ServiceStatus getStatus() {
      return status_;
    }
    
    // optional .mrtech.smarthome.rpc.ServiceDomain domain = 2;
    public static final int DOMAIN_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.ServiceDomain domain_;
    public boolean hasDomain() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.ServiceDomain getDomain() {
      return domain_;
    }
    
    // optional bool is_roaming = 3;
    public static final int IS_ROAMING_FIELD_NUMBER = 3;
    private boolean isRoaming_;
    public boolean hasIsRoaming() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getIsRoaming() {
      return isRoaming_;
    }
    
    // optional .mrtech.smarthome.rpc.OperationMode mode = 4;
    public static final int MODE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.OperationMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.OperationMode getMode() {
      return mode_;
    }
    
    // optional .mrtech.smarthome.rpc.SimState sim_state = 5;
    public static final int SIM_STATE_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.SimState simState_;
    public boolean hasSimState() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.SimState getSimState() {
      return simState_;
    }
    
    // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 6;
    public static final int SUB_MODE_FIELD_NUMBER = 6;
    private mrtech.smarthome.rpc.Models.SubOperationMode subMode_;
    public boolean hasSubMode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public mrtech.smarthome.rpc.Models.SubOperationMode getSubMode() {
      return subMode_;
    }
    
    // optional string imei = 7;
    public static final int IMEI_FIELD_NUMBER = 7;
    private java.lang.Object imei_;
    public boolean hasImei() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getImei() {
      java.lang.Object ref = imei_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          imei_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getImeiBytes() {
      java.lang.Object ref = imei_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        imei_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 rssi = 8;
    public static final int RSSI_FIELD_NUMBER = 8;
    private int rssi_;
    public boolean hasRssi() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getRssi() {
      return rssi_;
    }
    
    // optional int32 mcc = 9;
    public static final int MCC_FIELD_NUMBER = 9;
    private int mcc_;
    public boolean hasMcc() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getMcc() {
      return mcc_;
    }
    
    // optional int32 mnc = 10;
    public static final int MNC_FIELD_NUMBER = 10;
    private int mnc_;
    public boolean hasMnc() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getMnc() {
      return mnc_;
    }
    
    // optional bool is_modem_installed = 11;
    public static final int IS_MODEM_INSTALLED_FIELD_NUMBER = 11;
    private boolean isModemInstalled_;
    public boolean hasIsModemInstalled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public boolean getIsModemInstalled() {
      return isModemInstalled_;
    }
    
    // optional bool is_data_connected = 12;
    public static final int IS_DATA_CONNECTED_FIELD_NUMBER = 12;
    private boolean isDataConnected_;
    public boolean hasIsDataConnected() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public boolean getIsDataConnected() {
      return isDataConnected_;
    }
    
    private void initFields() {
      status_ = mrtech.smarthome.rpc.Models.ServiceStatus.SERVICE_STATUS_NO_SERVICE;
      domain_ = mrtech.smarthome.rpc.Models.ServiceDomain.SERVICE_DOMAIN_NO_SERVICE;
      isRoaming_ = false;
      mode_ = mrtech.smarthome.rpc.Models.OperationMode.OPERATION_MODE_NO_SERVICE;
      simState_ = mrtech.smarthome.rpc.Models.SimState.SIM_STATE_INVALID;
      subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
      imei_ = "";
      rssi_ = 0;
      mcc_ = 0;
      mnc_ = 0;
      isModemInstalled_ = false;
      isDataConnected_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, domain_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, isRoaming_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, simState_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, subMode_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getImeiBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, rssi_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, mcc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, mnc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, isModemInstalled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, isDataConnected_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, domain_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isRoaming_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, simState_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, subMode_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getImeiBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, rssi_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, mcc_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mnc_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, isModemInstalled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, isDataConnected_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobileInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.MobileInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.MobileInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobileInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.MobileInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = mrtech.smarthome.rpc.Models.ServiceStatus.SERVICE_STATUS_NO_SERVICE;
        bitField0_ = (bitField0_ & ~0x00000001);
        domain_ = mrtech.smarthome.rpc.Models.ServiceDomain.SERVICE_DOMAIN_NO_SERVICE;
        bitField0_ = (bitField0_ & ~0x00000002);
        isRoaming_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        mode_ = mrtech.smarthome.rpc.Models.OperationMode.OPERATION_MODE_NO_SERVICE;
        bitField0_ = (bitField0_ & ~0x00000008);
        simState_ = mrtech.smarthome.rpc.Models.SimState.SIM_STATE_INVALID;
        bitField0_ = (bitField0_ & ~0x00000010);
        subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
        bitField0_ = (bitField0_ & ~0x00000020);
        imei_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        rssi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        mcc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        mnc_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        isModemInstalled_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        isDataConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.MobileInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.MobileInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.MobileInfo build() {
        mrtech.smarthome.rpc.Models.MobileInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.MobileInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.MobileInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.MobileInfo buildPartial() {
        mrtech.smarthome.rpc.Models.MobileInfo result = new mrtech.smarthome.rpc.Models.MobileInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.domain_ = domain_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.isRoaming_ = isRoaming_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.simState_ = simState_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.subMode_ = subMode_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.imei_ = imei_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.rssi_ = rssi_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.mcc_ = mcc_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.mnc_ = mnc_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isModemInstalled_ = isModemInstalled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isDataConnected_ = isDataConnected_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.MobileInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.MobileInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.MobileInfo other) {
        if (other == mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasIsRoaming()) {
          setIsRoaming(other.getIsRoaming());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasSimState()) {
          setSimState(other.getSimState());
        }
        if (other.hasSubMode()) {
          setSubMode(other.getSubMode());
        }
        if (other.hasImei()) {
          setImei(other.getImei());
        }
        if (other.hasRssi()) {
          setRssi(other.getRssi());
        }
        if (other.hasMcc()) {
          setMcc(other.getMcc());
        }
        if (other.hasMnc()) {
          setMnc(other.getMnc());
        }
        if (other.hasIsModemInstalled()) {
          setIsModemInstalled(other.getIsModemInstalled());
        }
        if (other.hasIsDataConnected()) {
          setIsDataConnected(other.getIsDataConnected());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ServiceStatus value = mrtech.smarthome.rpc.Models.ServiceStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ServiceDomain value = mrtech.smarthome.rpc.Models.ServiceDomain.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                domain_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              isRoaming_ = input.readBool();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.OperationMode value = mrtech.smarthome.rpc.Models.OperationMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                mode_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SimState value = mrtech.smarthome.rpc.Models.SimState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                simState_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SubOperationMode value = mrtech.smarthome.rpc.Models.SubOperationMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                subMode_ = value;
              }
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              imei_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              rssi_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              mcc_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              mnc_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              isModemInstalled_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isDataConnected_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.ServiceStatus status = 1;
      private mrtech.smarthome.rpc.Models.ServiceStatus status_ = mrtech.smarthome.rpc.Models.ServiceStatus.SERVICE_STATUS_NO_SERVICE;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.ServiceStatus getStatus() {
        return status_;
      }
      public Builder setStatus(mrtech.smarthome.rpc.Models.ServiceStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = mrtech.smarthome.rpc.Models.ServiceStatus.SERVICE_STATUS_NO_SERVICE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.ServiceDomain domain = 2;
      private mrtech.smarthome.rpc.Models.ServiceDomain domain_ = mrtech.smarthome.rpc.Models.ServiceDomain.SERVICE_DOMAIN_NO_SERVICE;
      public boolean hasDomain() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.ServiceDomain getDomain() {
        return domain_;
      }
      public Builder setDomain(mrtech.smarthome.rpc.Models.ServiceDomain value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        domain_ = value;
        onChanged();
        return this;
      }
      public Builder clearDomain() {
        bitField0_ = (bitField0_ & ~0x00000002);
        domain_ = mrtech.smarthome.rpc.Models.ServiceDomain.SERVICE_DOMAIN_NO_SERVICE;
        onChanged();
        return this;
      }
      
      // optional bool is_roaming = 3;
      private boolean isRoaming_ ;
      public boolean hasIsRoaming() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getIsRoaming() {
        return isRoaming_;
      }
      public Builder setIsRoaming(boolean value) {
        bitField0_ |= 0x00000004;
        isRoaming_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsRoaming() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isRoaming_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.OperationMode mode = 4;
      private mrtech.smarthome.rpc.Models.OperationMode mode_ = mrtech.smarthome.rpc.Models.OperationMode.OPERATION_MODE_NO_SERVICE;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.OperationMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.OperationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mode_ = mrtech.smarthome.rpc.Models.OperationMode.OPERATION_MODE_NO_SERVICE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.SimState sim_state = 5;
      private mrtech.smarthome.rpc.Models.SimState simState_ = mrtech.smarthome.rpc.Models.SimState.SIM_STATE_INVALID;
      public boolean hasSimState() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.SimState getSimState() {
        return simState_;
      }
      public Builder setSimState(mrtech.smarthome.rpc.Models.SimState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        simState_ = value;
        onChanged();
        return this;
      }
      public Builder clearSimState() {
        bitField0_ = (bitField0_ & ~0x00000010);
        simState_ = mrtech.smarthome.rpc.Models.SimState.SIM_STATE_INVALID;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.SubOperationMode sub_mode = 6;
      private mrtech.smarthome.rpc.Models.SubOperationMode subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
      public boolean hasSubMode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public mrtech.smarthome.rpc.Models.SubOperationMode getSubMode() {
        return subMode_;
      }
      public Builder setSubMode(mrtech.smarthome.rpc.Models.SubOperationMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        subMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubMode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        subMode_ = mrtech.smarthome.rpc.Models.SubOperationMode.SUB_OPERATION_MODE_NO_SERVICE;
        onChanged();
        return this;
      }
      
      // optional string imei = 7;
      private java.lang.Object imei_ = "";
      public boolean hasImei() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getImei() {
        java.lang.Object ref = imei_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          imei_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setImei(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        imei_ = value;
        onChanged();
        return this;
      }
      public Builder clearImei() {
        bitField0_ = (bitField0_ & ~0x00000040);
        imei_ = getDefaultInstance().getImei();
        onChanged();
        return this;
      }
      void setImei(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        imei_ = value;
        onChanged();
      }
      
      // optional int32 rssi = 8;
      private int rssi_ ;
      public boolean hasRssi() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getRssi() {
        return rssi_;
      }
      public Builder setRssi(int value) {
        bitField0_ |= 0x00000080;
        rssi_ = value;
        onChanged();
        return this;
      }
      public Builder clearRssi() {
        bitField0_ = (bitField0_ & ~0x00000080);
        rssi_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 mcc = 9;
      private int mcc_ ;
      public boolean hasMcc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getMcc() {
        return mcc_;
      }
      public Builder setMcc(int value) {
        bitField0_ |= 0x00000100;
        mcc_ = value;
        onChanged();
        return this;
      }
      public Builder clearMcc() {
        bitField0_ = (bitField0_ & ~0x00000100);
        mcc_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 mnc = 10;
      private int mnc_ ;
      public boolean hasMnc() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getMnc() {
        return mnc_;
      }
      public Builder setMnc(int value) {
        bitField0_ |= 0x00000200;
        mnc_ = value;
        onChanged();
        return this;
      }
      public Builder clearMnc() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mnc_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool is_modem_installed = 11;
      private boolean isModemInstalled_ ;
      public boolean hasIsModemInstalled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public boolean getIsModemInstalled() {
        return isModemInstalled_;
      }
      public Builder setIsModemInstalled(boolean value) {
        bitField0_ |= 0x00000400;
        isModemInstalled_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsModemInstalled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isModemInstalled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool is_data_connected = 12;
      private boolean isDataConnected_ ;
      public boolean hasIsDataConnected() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public boolean getIsDataConnected() {
        return isDataConnected_;
      }
      public Builder setIsDataConnected(boolean value) {
        bitField0_ |= 0x00000800;
        isDataConnected_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsDataConnected() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isDataConnected_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.MobileInfo)
    }
    
    static {
      defaultInstance = new MobileInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.MobileInfo)
  }
  
  public interface EncryptionModeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.WpaVersion version = 1;
    boolean hasVersion();
    mrtech.smarthome.rpc.Models.WpaVersion getVersion();
    
    // optional .mrtech.smarthome.rpc.KeyManagement authentication_suites = 2;
    boolean hasAuthenticationSuites();
    mrtech.smarthome.rpc.Models.KeyManagement getAuthenticationSuites();
  }
  public static final class EncryptionMode extends
      com.google.protobuf.GeneratedMessage
      implements EncryptionModeOrBuilder {
    // Use EncryptionMode.newBuilder() to construct.
    private EncryptionMode(Builder builder) {
      super(builder);
    }
    private EncryptionMode(boolean noInit) {}
    
    private static final EncryptionMode defaultInstance;
    public static EncryptionMode getDefaultInstance() {
      return defaultInstance;
    }
    
    public EncryptionMode getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EncryptionMode_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EncryptionMode_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.WpaVersion version = 1;
    public static final int VERSION_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.WpaVersion version_;
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.WpaVersion getVersion() {
      return version_;
    }
    
    // optional .mrtech.smarthome.rpc.KeyManagement authentication_suites = 2;
    public static final int AUTHENTICATION_SUITES_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.KeyManagement authenticationSuites_;
    public boolean hasAuthenticationSuites() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.KeyManagement getAuthenticationSuites() {
      return authenticationSuites_;
    }
    
    private void initFields() {
      version_ = mrtech.smarthome.rpc.Models.WpaVersion.WPA_VERSION_WPA;
      authenticationSuites_ = mrtech.smarthome.rpc.Models.KeyManagement.KEY_MANAGEMENT_PSK;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, authenticationSuites_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, version_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, authenticationSuites_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.EncryptionMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.EncryptionMode prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EncryptionMode_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_EncryptionMode_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        version_ = mrtech.smarthome.rpc.Models.WpaVersion.WPA_VERSION_WPA;
        bitField0_ = (bitField0_ & ~0x00000001);
        authenticationSuites_ = mrtech.smarthome.rpc.Models.KeyManagement.KEY_MANAGEMENT_PSK;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.EncryptionMode.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.EncryptionMode getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.EncryptionMode build() {
        mrtech.smarthome.rpc.Models.EncryptionMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.EncryptionMode buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.EncryptionMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.EncryptionMode buildPartial() {
        mrtech.smarthome.rpc.Models.EncryptionMode result = new mrtech.smarthome.rpc.Models.EncryptionMode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.version_ = version_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.authenticationSuites_ = authenticationSuites_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.EncryptionMode) {
          return mergeFrom((mrtech.smarthome.rpc.Models.EncryptionMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.EncryptionMode other) {
        if (other == mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance()) return this;
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasAuthenticationSuites()) {
          setAuthenticationSuites(other.getAuthenticationSuites());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WpaVersion value = mrtech.smarthome.rpc.Models.WpaVersion.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                version_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.KeyManagement value = mrtech.smarthome.rpc.Models.KeyManagement.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                authenticationSuites_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.WpaVersion version = 1;
      private mrtech.smarthome.rpc.Models.WpaVersion version_ = mrtech.smarthome.rpc.Models.WpaVersion.WPA_VERSION_WPA;
      public boolean hasVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.WpaVersion getVersion() {
        return version_;
      }
      public Builder setVersion(mrtech.smarthome.rpc.Models.WpaVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        version_ = value;
        onChanged();
        return this;
      }
      public Builder clearVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        version_ = mrtech.smarthome.rpc.Models.WpaVersion.WPA_VERSION_WPA;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.KeyManagement authentication_suites = 2;
      private mrtech.smarthome.rpc.Models.KeyManagement authenticationSuites_ = mrtech.smarthome.rpc.Models.KeyManagement.KEY_MANAGEMENT_PSK;
      public boolean hasAuthenticationSuites() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.KeyManagement getAuthenticationSuites() {
        return authenticationSuites_;
      }
      public Builder setAuthenticationSuites(mrtech.smarthome.rpc.Models.KeyManagement value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        authenticationSuites_ = value;
        onChanged();
        return this;
      }
      public Builder clearAuthenticationSuites() {
        bitField0_ = (bitField0_ & ~0x00000002);
        authenticationSuites_ = mrtech.smarthome.rpc.Models.KeyManagement.KEY_MANAGEMENT_PSK;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.EncryptionMode)
    }
    
    static {
      defaultInstance = new EncryptionMode(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.EncryptionMode)
  }
  
  public interface WlanAccessPointOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 channel = 2;
    boolean hasChannel();
    int getChannel();
    
    // optional string essid = 3;
    boolean hasEssid();
    String getEssid();
    
    // optional float quality = 4;
    boolean hasQuality();
    float getQuality();
    
    // optional int32 signal_level = 5;
    boolean hasSignalLevel();
    int getSignalLevel();
    
    // optional int32 noise_level = 6;
    boolean hasNoiseLevel();
    int getNoiseLevel();
    
    // optional string mac_address = 7;
    boolean hasMacAddress();
    String getMacAddress();
    
    // optional .mrtech.smarthome.rpc.WirelessMode mode = 8;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.WirelessMode getMode();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 9;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getEncryptionModeList();
    mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index);
    int getEncryptionModeCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getEncryptionModeOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
        int index);
    
    // optional string password = 10;
    boolean hasPassword();
    String getPassword();
    
    // optional bool encryption_key = 11;
    boolean hasEncryptionKey();
    boolean getEncryptionKey();
    
    // optional .mrtech.smarthome.rpc.EthernetConfiguration wlan_configuration = 12;
    boolean hasWlanConfiguration();
    mrtech.smarthome.rpc.Models.EthernetConfiguration getWlanConfiguration();
    mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder getWlanConfigurationOrBuilder();
  }
  public static final class WlanAccessPoint extends
      com.google.protobuf.GeneratedMessage
      implements WlanAccessPointOrBuilder {
    // Use WlanAccessPoint.newBuilder() to construct.
    private WlanAccessPoint(Builder builder) {
      super(builder);
    }
    private WlanAccessPoint(boolean noInit) {}
    
    private static final WlanAccessPoint defaultInstance;
    public static WlanAccessPoint getDefaultInstance() {
      return defaultInstance;
    }
    
    public WlanAccessPoint getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanAccessPoint_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanAccessPoint_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 channel = 2;
    public static final int CHANNEL_FIELD_NUMBER = 2;
    private int channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getChannel() {
      return channel_;
    }
    
    // optional string essid = 3;
    public static final int ESSID_FIELD_NUMBER = 3;
    private java.lang.Object essid_;
    public boolean hasEssid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getEssid() {
      java.lang.Object ref = essid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          essid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEssidBytes() {
      java.lang.Object ref = essid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        essid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional float quality = 4;
    public static final int QUALITY_FIELD_NUMBER = 4;
    private float quality_;
    public boolean hasQuality() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getQuality() {
      return quality_;
    }
    
    // optional int32 signal_level = 5;
    public static final int SIGNAL_LEVEL_FIELD_NUMBER = 5;
    private int signalLevel_;
    public boolean hasSignalLevel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getSignalLevel() {
      return signalLevel_;
    }
    
    // optional int32 noise_level = 6;
    public static final int NOISE_LEVEL_FIELD_NUMBER = 6;
    private int noiseLevel_;
    public boolean hasNoiseLevel() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getNoiseLevel() {
      return noiseLevel_;
    }
    
    // optional string mac_address = 7;
    public static final int MAC_ADDRESS_FIELD_NUMBER = 7;
    private java.lang.Object macAddress_;
    public boolean hasMacAddress() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          macAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.WirelessMode mode = 8;
    public static final int MODE_FIELD_NUMBER = 8;
    private mrtech.smarthome.rpc.Models.WirelessMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public mrtech.smarthome.rpc.Models.WirelessMode getMode() {
      return mode_;
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 9;
    public static final int ENCRYPTION_MODE_FIELD_NUMBER = 9;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> encryptionMode_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getEncryptionModeList() {
      return encryptionMode_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getEncryptionModeOrBuilderList() {
      return encryptionMode_;
    }
    public int getEncryptionModeCount() {
      return encryptionMode_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index) {
      return encryptionMode_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
        int index) {
      return encryptionMode_.get(index);
    }
    
    // optional string password = 10;
    public static final int PASSWORD_FIELD_NUMBER = 10;
    private java.lang.Object password_;
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          password_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool encryption_key = 11;
    public static final int ENCRYPTION_KEY_FIELD_NUMBER = 11;
    private boolean encryptionKey_;
    public boolean hasEncryptionKey() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public boolean getEncryptionKey() {
      return encryptionKey_;
    }
    
    // optional .mrtech.smarthome.rpc.EthernetConfiguration wlan_configuration = 12;
    public static final int WLAN_CONFIGURATION_FIELD_NUMBER = 12;
    private mrtech.smarthome.rpc.Models.EthernetConfiguration wlanConfiguration_;
    public boolean hasWlanConfiguration() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public mrtech.smarthome.rpc.Models.EthernetConfiguration getWlanConfiguration() {
      return wlanConfiguration_;
    }
    public mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder getWlanConfigurationOrBuilder() {
      return wlanConfiguration_;
    }
    
    private void initFields() {
      id_ = 0;
      channel_ = 0;
      essid_ = "";
      quality_ = 0F;
      signalLevel_ = 0;
      noiseLevel_ = 0;
      macAddress_ = "";
      mode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
      encryptionMode_ = java.util.Collections.emptyList();
      password_ = "";
      encryptionKey_ = false;
      wlanConfiguration_ = mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getEssidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, quality_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, signalLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, noiseLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getMacAddressBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, mode_.getNumber());
      }
      for (int i = 0; i < encryptionMode_.size(); i++) {
        output.writeMessage(9, encryptionMode_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(10, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(11, encryptionKey_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(12, wlanConfiguration_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, channel_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getEssidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, quality_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, signalLevel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, noiseLevel_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getMacAddressBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, mode_.getNumber());
      }
      for (int i = 0; i < encryptionMode_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, encryptionMode_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, encryptionKey_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, wlanConfiguration_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanAccessPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.WlanAccessPoint prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.WlanAccessPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanAccessPoint_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanAccessPoint_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.WlanAccessPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getEncryptionModeFieldBuilder();
          getWlanConfigurationFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        essid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        quality_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        signalLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        noiseLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        macAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        mode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (encryptionModeBuilder_ == null) {
          encryptionMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          encryptionModeBuilder_.clear();
        }
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        encryptionKey_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        if (wlanConfigurationBuilder_ == null) {
          wlanConfiguration_ = mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance();
        } else {
          wlanConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.WlanAccessPoint.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.WlanAccessPoint getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.WlanAccessPoint.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.WlanAccessPoint build() {
        mrtech.smarthome.rpc.Models.WlanAccessPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.WlanAccessPoint buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.WlanAccessPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.WlanAccessPoint buildPartial() {
        mrtech.smarthome.rpc.Models.WlanAccessPoint result = new mrtech.smarthome.rpc.Models.WlanAccessPoint(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.essid_ = essid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.quality_ = quality_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.signalLevel_ = signalLevel_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.noiseLevel_ = noiseLevel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.macAddress_ = macAddress_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.mode_ = mode_;
        if (encryptionModeBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            encryptionMode_ = java.util.Collections.unmodifiableList(encryptionMode_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.encryptionMode_ = encryptionMode_;
        } else {
          result.encryptionMode_ = encryptionModeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.encryptionKey_ = encryptionKey_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (wlanConfigurationBuilder_ == null) {
          result.wlanConfiguration_ = wlanConfiguration_;
        } else {
          result.wlanConfiguration_ = wlanConfigurationBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.WlanAccessPoint) {
          return mergeFrom((mrtech.smarthome.rpc.Models.WlanAccessPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.WlanAccessPoint other) {
        if (other == mrtech.smarthome.rpc.Models.WlanAccessPoint.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasEssid()) {
          setEssid(other.getEssid());
        }
        if (other.hasQuality()) {
          setQuality(other.getQuality());
        }
        if (other.hasSignalLevel()) {
          setSignalLevel(other.getSignalLevel());
        }
        if (other.hasNoiseLevel()) {
          setNoiseLevel(other.getNoiseLevel());
        }
        if (other.hasMacAddress()) {
          setMacAddress(other.getMacAddress());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (encryptionModeBuilder_ == null) {
          if (!other.encryptionMode_.isEmpty()) {
            if (encryptionMode_.isEmpty()) {
              encryptionMode_ = other.encryptionMode_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureEncryptionModeIsMutable();
              encryptionMode_.addAll(other.encryptionMode_);
            }
            onChanged();
          }
        } else {
          if (!other.encryptionMode_.isEmpty()) {
            if (encryptionModeBuilder_.isEmpty()) {
              encryptionModeBuilder_.dispose();
              encryptionModeBuilder_ = null;
              encryptionMode_ = other.encryptionMode_;
              bitField0_ = (bitField0_ & ~0x00000100);
              encryptionModeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEncryptionModeFieldBuilder() : null;
            } else {
              encryptionModeBuilder_.addAllMessages(other.encryptionMode_);
            }
          }
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasEncryptionKey()) {
          setEncryptionKey(other.getEncryptionKey());
        }
        if (other.hasWlanConfiguration()) {
          mergeWlanConfiguration(other.getWlanConfiguration());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              channel_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              essid_ = input.readBytes();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              quality_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              signalLevel_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              noiseLevel_ = input.readInt32();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              macAddress_ = input.readBytes();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WirelessMode value = mrtech.smarthome.rpc.Models.WirelessMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                mode_ = value;
              }
              break;
            }
            case 74: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEncryptionMode(subBuilder.buildPartial());
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              password_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              encryptionKey_ = input.readBool();
              break;
            }
            case 98: {
              mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder subBuilder = mrtech.smarthome.rpc.Models.EthernetConfiguration.newBuilder();
              if (hasWlanConfiguration()) {
                subBuilder.mergeFrom(getWlanConfiguration());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWlanConfiguration(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 channel = 2;
      private int channel_ ;
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getChannel() {
        return channel_;
      }
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000002;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000002);
        channel_ = 0;
        onChanged();
        return this;
      }
      
      // optional string essid = 3;
      private java.lang.Object essid_ = "";
      public boolean hasEssid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getEssid() {
        java.lang.Object ref = essid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          essid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEssid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        essid_ = value;
        onChanged();
        return this;
      }
      public Builder clearEssid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        essid_ = getDefaultInstance().getEssid();
        onChanged();
        return this;
      }
      void setEssid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        essid_ = value;
        onChanged();
      }
      
      // optional float quality = 4;
      private float quality_ ;
      public boolean hasQuality() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getQuality() {
        return quality_;
      }
      public Builder setQuality(float value) {
        bitField0_ |= 0x00000008;
        quality_ = value;
        onChanged();
        return this;
      }
      public Builder clearQuality() {
        bitField0_ = (bitField0_ & ~0x00000008);
        quality_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 signal_level = 5;
      private int signalLevel_ ;
      public boolean hasSignalLevel() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getSignalLevel() {
        return signalLevel_;
      }
      public Builder setSignalLevel(int value) {
        bitField0_ |= 0x00000010;
        signalLevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearSignalLevel() {
        bitField0_ = (bitField0_ & ~0x00000010);
        signalLevel_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 noise_level = 6;
      private int noiseLevel_ ;
      public boolean hasNoiseLevel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getNoiseLevel() {
        return noiseLevel_;
      }
      public Builder setNoiseLevel(int value) {
        bitField0_ |= 0x00000020;
        noiseLevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearNoiseLevel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        noiseLevel_ = 0;
        onChanged();
        return this;
      }
      
      // optional string mac_address = 7;
      private java.lang.Object macAddress_ = "";
      public boolean hasMacAddress() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          macAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMacAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        macAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacAddress() {
        bitField0_ = (bitField0_ & ~0x00000040);
        macAddress_ = getDefaultInstance().getMacAddress();
        onChanged();
        return this;
      }
      void setMacAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        macAddress_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.WirelessMode mode = 8;
      private mrtech.smarthome.rpc.Models.WirelessMode mode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public mrtech.smarthome.rpc.Models.WirelessMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.WirelessMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000080);
        mode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
        onChanged();
        return this;
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode encryption_mode = 9;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> encryptionMode_ =
        java.util.Collections.emptyList();
      private void ensureEncryptionModeIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          encryptionMode_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(encryptionMode_);
          bitField0_ |= 0x00000100;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> encryptionModeBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getEncryptionModeList() {
        if (encryptionModeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(encryptionMode_);
        } else {
          return encryptionModeBuilder_.getMessageList();
        }
      }
      public int getEncryptionModeCount() {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.size();
        } else {
          return encryptionModeBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getEncryptionMode(int index) {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.get(index);
        } else {
          return encryptionModeBuilder_.getMessage(index);
        }
      }
      public Builder setEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.set(index, value);
          onChanged();
        } else {
          encryptionModeBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.set(index, builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addEncryptionMode(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(value);
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (encryptionModeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(index, value);
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addEncryptionMode(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addEncryptionMode(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.add(index, builderForValue.build());
          onChanged();
        } else {
          encryptionModeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllEncryptionMode(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          super.addAll(values, encryptionMode_);
          onChanged();
        } else {
          encryptionModeBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearEncryptionMode() {
        if (encryptionModeBuilder_ == null) {
          encryptionMode_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          encryptionModeBuilder_.clear();
        }
        return this;
      }
      public Builder removeEncryptionMode(int index) {
        if (encryptionModeBuilder_ == null) {
          ensureEncryptionModeIsMutable();
          encryptionMode_.remove(index);
          onChanged();
        } else {
          encryptionModeBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getEncryptionModeBuilder(
          int index) {
        return getEncryptionModeFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getEncryptionModeOrBuilder(
          int index) {
        if (encryptionModeBuilder_ == null) {
          return encryptionMode_.get(index);  } else {
          return encryptionModeBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getEncryptionModeOrBuilderList() {
        if (encryptionModeBuilder_ != null) {
          return encryptionModeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(encryptionMode_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addEncryptionModeBuilder() {
        return getEncryptionModeFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addEncryptionModeBuilder(
          int index) {
        return getEncryptionModeFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getEncryptionModeBuilderList() {
        return getEncryptionModeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getEncryptionModeFieldBuilder() {
        if (encryptionModeBuilder_ == null) {
          encryptionModeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  encryptionMode_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          encryptionMode_ = null;
        }
        return encryptionModeBuilder_;
      }
      
      // optional string password = 10;
      private java.lang.Object password_ = "";
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        password_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000200);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      void setPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        password_ = value;
        onChanged();
      }
      
      // optional bool encryption_key = 11;
      private boolean encryptionKey_ ;
      public boolean hasEncryptionKey() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public boolean getEncryptionKey() {
        return encryptionKey_;
      }
      public Builder setEncryptionKey(boolean value) {
        bitField0_ |= 0x00000400;
        encryptionKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncryptionKey() {
        bitField0_ = (bitField0_ & ~0x00000400);
        encryptionKey_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.EthernetConfiguration wlan_configuration = 12;
      private mrtech.smarthome.rpc.Models.EthernetConfiguration wlanConfiguration_ = mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.EthernetConfiguration, mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder, mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder> wlanConfigurationBuilder_;
      public boolean hasWlanConfiguration() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public mrtech.smarthome.rpc.Models.EthernetConfiguration getWlanConfiguration() {
        if (wlanConfigurationBuilder_ == null) {
          return wlanConfiguration_;
        } else {
          return wlanConfigurationBuilder_.getMessage();
        }
      }
      public Builder setWlanConfiguration(mrtech.smarthome.rpc.Models.EthernetConfiguration value) {
        if (wlanConfigurationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wlanConfiguration_ = value;
          onChanged();
        } else {
          wlanConfigurationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder setWlanConfiguration(
          mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder builderForValue) {
        if (wlanConfigurationBuilder_ == null) {
          wlanConfiguration_ = builderForValue.build();
          onChanged();
        } else {
          wlanConfigurationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder mergeWlanConfiguration(mrtech.smarthome.rpc.Models.EthernetConfiguration value) {
        if (wlanConfigurationBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              wlanConfiguration_ != mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance()) {
            wlanConfiguration_ =
              mrtech.smarthome.rpc.Models.EthernetConfiguration.newBuilder(wlanConfiguration_).mergeFrom(value).buildPartial();
          } else {
            wlanConfiguration_ = value;
          }
          onChanged();
        } else {
          wlanConfigurationBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      public Builder clearWlanConfiguration() {
        if (wlanConfigurationBuilder_ == null) {
          wlanConfiguration_ = mrtech.smarthome.rpc.Models.EthernetConfiguration.getDefaultInstance();
          onChanged();
        } else {
          wlanConfigurationBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      public mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder getWlanConfigurationBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getWlanConfigurationFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder getWlanConfigurationOrBuilder() {
        if (wlanConfigurationBuilder_ != null) {
          return wlanConfigurationBuilder_.getMessageOrBuilder();
        } else {
          return wlanConfiguration_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.EthernetConfiguration, mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder, mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder> 
          getWlanConfigurationFieldBuilder() {
        if (wlanConfigurationBuilder_ == null) {
          wlanConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.EthernetConfiguration, mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder, mrtech.smarthome.rpc.Models.EthernetConfigurationOrBuilder>(
                  wlanConfiguration_,
                  getParentForChildren(),
                  isClean());
          wlanConfiguration_ = null;
        }
        return wlanConfigurationBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.WlanAccessPoint)
    }
    
    static {
      defaultInstance = new WlanAccessPoint(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.WlanAccessPoint)
  }
  
  public interface PhoneNumberOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string number = 2;
    boolean hasNumber();
    String getNumber();
    
    // optional .mrtech.smarthome.rpc.PhoneNumberType type = 3;
    boolean hasType();
    mrtech.smarthome.rpc.Models.PhoneNumberType getType();
  }
  public static final class PhoneNumber extends
      com.google.protobuf.GeneratedMessage
      implements PhoneNumberOrBuilder {
    // Use PhoneNumber.newBuilder() to construct.
    private PhoneNumber(Builder builder) {
      super(builder);
    }
    private PhoneNumber(boolean noInit) {}
    
    private static final PhoneNumber defaultInstance;
    public static PhoneNumber getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhoneNumber getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PhoneNumber_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PhoneNumber_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string number = 2;
    public static final int NUMBER_FIELD_NUMBER = 2;
    private java.lang.Object number_;
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getNumber() {
      java.lang.Object ref = number_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          number_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        number_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.PhoneNumberType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.PhoneNumberType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.PhoneNumberType getType() {
      return type_;
    }
    
    private void initFields() {
      id_ = 0;
      number_ = "";
      type_ = mrtech.smarthome.rpc.Models.PhoneNumberType.PHONE_NUMBER_TYPE_SMS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNumberBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNumberBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PhoneNumber parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.PhoneNumber prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PhoneNumber_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PhoneNumber_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.PhoneNumber.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        number_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = mrtech.smarthome.rpc.Models.PhoneNumberType.PHONE_NUMBER_TYPE_SMS;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.PhoneNumber.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.PhoneNumber getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.PhoneNumber.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.PhoneNumber build() {
        mrtech.smarthome.rpc.Models.PhoneNumber result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.PhoneNumber buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.PhoneNumber result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.PhoneNumber buildPartial() {
        mrtech.smarthome.rpc.Models.PhoneNumber result = new mrtech.smarthome.rpc.Models.PhoneNumber(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.number_ = number_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.PhoneNumber) {
          return mergeFrom((mrtech.smarthome.rpc.Models.PhoneNumber)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.PhoneNumber other) {
        if (other == mrtech.smarthome.rpc.Models.PhoneNumber.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasNumber()) {
          setNumber(other.getNumber());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              number_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.PhoneNumberType value = mrtech.smarthome.rpc.Models.PhoneNumberType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string number = 2;
      private java.lang.Object number_ = "";
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          number_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNumber(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        number_ = value;
        onChanged();
        return this;
      }
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000002);
        number_ = getDefaultInstance().getNumber();
        onChanged();
        return this;
      }
      void setNumber(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        number_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.PhoneNumberType type = 3;
      private mrtech.smarthome.rpc.Models.PhoneNumberType type_ = mrtech.smarthome.rpc.Models.PhoneNumberType.PHONE_NUMBER_TYPE_SMS;
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.PhoneNumberType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.PhoneNumberType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = mrtech.smarthome.rpc.Models.PhoneNumberType.PHONE_NUMBER_TYPE_SMS;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.PhoneNumber)
    }
    
    static {
      defaultInstance = new PhoneNumber(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.PhoneNumber)
  }
  
  public interface MobilePhoneConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.TimelineLevel event_level = 1;
    boolean hasEventLevel();
    mrtech.smarthome.rpc.Models.TimelineLevel getEventLevel();
    
    // optional bool allow_sms = 2;
    boolean hasAllowSms();
    boolean getAllowSms();
    
    // optional bool allow_dialing = 3;
    boolean hasAllowDialing();
    boolean getAllowDialing();
    
    // optional bool allow_data = 4;
    boolean hasAllowData();
    boolean getAllowData();
    
    // repeated .mrtech.smarthome.rpc.PhoneNumber numbers = 5;
    java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber> 
        getNumbersList();
    mrtech.smarthome.rpc.Models.PhoneNumber getNumbers(int index);
    int getNumbersCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder> 
        getNumbersOrBuilderList();
    mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder getNumbersOrBuilder(
        int index);
    
    // optional bool enable_nat = 6;
    boolean hasEnableNat();
    boolean getEnableNat();
  }
  public static final class MobilePhoneConfig extends
      com.google.protobuf.GeneratedMessage
      implements MobilePhoneConfigOrBuilder {
    // Use MobilePhoneConfig.newBuilder() to construct.
    private MobilePhoneConfig(Builder builder) {
      super(builder);
    }
    private MobilePhoneConfig(boolean noInit) {}
    
    private static final MobilePhoneConfig defaultInstance;
    public static MobilePhoneConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public MobilePhoneConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.TimelineLevel event_level = 1;
    public static final int EVENT_LEVEL_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.TimelineLevel eventLevel_;
    public boolean hasEventLevel() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.TimelineLevel getEventLevel() {
      return eventLevel_;
    }
    
    // optional bool allow_sms = 2;
    public static final int ALLOW_SMS_FIELD_NUMBER = 2;
    private boolean allowSms_;
    public boolean hasAllowSms() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getAllowSms() {
      return allowSms_;
    }
    
    // optional bool allow_dialing = 3;
    public static final int ALLOW_DIALING_FIELD_NUMBER = 3;
    private boolean allowDialing_;
    public boolean hasAllowDialing() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getAllowDialing() {
      return allowDialing_;
    }
    
    // optional bool allow_data = 4;
    public static final int ALLOW_DATA_FIELD_NUMBER = 4;
    private boolean allowData_;
    public boolean hasAllowData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getAllowData() {
      return allowData_;
    }
    
    // repeated .mrtech.smarthome.rpc.PhoneNumber numbers = 5;
    public static final int NUMBERS_FIELD_NUMBER = 5;
    private java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber> numbers_;
    public java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber> getNumbersList() {
      return numbers_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder> 
        getNumbersOrBuilderList() {
      return numbers_;
    }
    public int getNumbersCount() {
      return numbers_.size();
    }
    public mrtech.smarthome.rpc.Models.PhoneNumber getNumbers(int index) {
      return numbers_.get(index);
    }
    public mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder getNumbersOrBuilder(
        int index) {
      return numbers_.get(index);
    }
    
    // optional bool enable_nat = 6;
    public static final int ENABLE_NAT_FIELD_NUMBER = 6;
    private boolean enableNat_;
    public boolean hasEnableNat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getEnableNat() {
      return enableNat_;
    }
    
    private void initFields() {
      eventLevel_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      allowSms_ = false;
      allowDialing_ = false;
      allowData_ = false;
      numbers_ = java.util.Collections.emptyList();
      enableNat_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, eventLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, allowSms_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, allowDialing_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, allowData_);
      }
      for (int i = 0; i < numbers_.size(); i++) {
        output.writeMessage(5, numbers_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, enableNat_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventLevel_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, allowSms_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, allowDialing_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, allowData_);
      }
      for (int i = 0; i < numbers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, numbers_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, enableNat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MobilePhoneConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.MobilePhoneConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.MobilePhoneConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.MobilePhoneConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNumbersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        eventLevel_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        bitField0_ = (bitField0_ & ~0x00000001);
        allowSms_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        allowDialing_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        allowData_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (numbersBuilder_ == null) {
          numbers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          numbersBuilder_.clear();
        }
        enableNat_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.MobilePhoneConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.MobilePhoneConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.MobilePhoneConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.MobilePhoneConfig build() {
        mrtech.smarthome.rpc.Models.MobilePhoneConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.MobilePhoneConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.MobilePhoneConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.MobilePhoneConfig buildPartial() {
        mrtech.smarthome.rpc.Models.MobilePhoneConfig result = new mrtech.smarthome.rpc.Models.MobilePhoneConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eventLevel_ = eventLevel_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.allowSms_ = allowSms_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.allowDialing_ = allowDialing_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.allowData_ = allowData_;
        if (numbersBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            numbers_ = java.util.Collections.unmodifiableList(numbers_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.numbers_ = numbers_;
        } else {
          result.numbers_ = numbersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enableNat_ = enableNat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.MobilePhoneConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.MobilePhoneConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.MobilePhoneConfig other) {
        if (other == mrtech.smarthome.rpc.Models.MobilePhoneConfig.getDefaultInstance()) return this;
        if (other.hasEventLevel()) {
          setEventLevel(other.getEventLevel());
        }
        if (other.hasAllowSms()) {
          setAllowSms(other.getAllowSms());
        }
        if (other.hasAllowDialing()) {
          setAllowDialing(other.getAllowDialing());
        }
        if (other.hasAllowData()) {
          setAllowData(other.getAllowData());
        }
        if (numbersBuilder_ == null) {
          if (!other.numbers_.isEmpty()) {
            if (numbers_.isEmpty()) {
              numbers_ = other.numbers_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureNumbersIsMutable();
              numbers_.addAll(other.numbers_);
            }
            onChanged();
          }
        } else {
          if (!other.numbers_.isEmpty()) {
            if (numbersBuilder_.isEmpty()) {
              numbersBuilder_.dispose();
              numbersBuilder_ = null;
              numbers_ = other.numbers_;
              bitField0_ = (bitField0_ & ~0x00000010);
              numbersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNumbersFieldBuilder() : null;
            } else {
              numbersBuilder_.addAllMessages(other.numbers_);
            }
          }
        }
        if (other.hasEnableNat()) {
          setEnableNat(other.getEnableNat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.TimelineLevel value = mrtech.smarthome.rpc.Models.TimelineLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                eventLevel_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              allowSms_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              allowDialing_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              allowData_ = input.readBool();
              break;
            }
            case 42: {
              mrtech.smarthome.rpc.Models.PhoneNumber.Builder subBuilder = mrtech.smarthome.rpc.Models.PhoneNumber.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addNumbers(subBuilder.buildPartial());
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              enableNat_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.TimelineLevel event_level = 1;
      private mrtech.smarthome.rpc.Models.TimelineLevel eventLevel_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      public boolean hasEventLevel() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.TimelineLevel getEventLevel() {
        return eventLevel_;
      }
      public Builder setEventLevel(mrtech.smarthome.rpc.Models.TimelineLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventLevel_ = value;
        onChanged();
        return this;
      }
      public Builder clearEventLevel() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventLevel_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        onChanged();
        return this;
      }
      
      // optional bool allow_sms = 2;
      private boolean allowSms_ ;
      public boolean hasAllowSms() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getAllowSms() {
        return allowSms_;
      }
      public Builder setAllowSms(boolean value) {
        bitField0_ |= 0x00000002;
        allowSms_ = value;
        onChanged();
        return this;
      }
      public Builder clearAllowSms() {
        bitField0_ = (bitField0_ & ~0x00000002);
        allowSms_ = false;
        onChanged();
        return this;
      }
      
      // optional bool allow_dialing = 3;
      private boolean allowDialing_ ;
      public boolean hasAllowDialing() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getAllowDialing() {
        return allowDialing_;
      }
      public Builder setAllowDialing(boolean value) {
        bitField0_ |= 0x00000004;
        allowDialing_ = value;
        onChanged();
        return this;
      }
      public Builder clearAllowDialing() {
        bitField0_ = (bitField0_ & ~0x00000004);
        allowDialing_ = false;
        onChanged();
        return this;
      }
      
      // optional bool allow_data = 4;
      private boolean allowData_ ;
      public boolean hasAllowData() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getAllowData() {
        return allowData_;
      }
      public Builder setAllowData(boolean value) {
        bitField0_ |= 0x00000008;
        allowData_ = value;
        onChanged();
        return this;
      }
      public Builder clearAllowData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        allowData_ = false;
        onChanged();
        return this;
      }
      
      // repeated .mrtech.smarthome.rpc.PhoneNumber numbers = 5;
      private java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber> numbers_ =
        java.util.Collections.emptyList();
      private void ensureNumbersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          numbers_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.PhoneNumber>(numbers_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.PhoneNumber, mrtech.smarthome.rpc.Models.PhoneNumber.Builder, mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder> numbersBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber> getNumbersList() {
        if (numbersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(numbers_);
        } else {
          return numbersBuilder_.getMessageList();
        }
      }
      public int getNumbersCount() {
        if (numbersBuilder_ == null) {
          return numbers_.size();
        } else {
          return numbersBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.PhoneNumber getNumbers(int index) {
        if (numbersBuilder_ == null) {
          return numbers_.get(index);
        } else {
          return numbersBuilder_.getMessage(index);
        }
      }
      public Builder setNumbers(
          int index, mrtech.smarthome.rpc.Models.PhoneNumber value) {
        if (numbersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNumbersIsMutable();
          numbers_.set(index, value);
          onChanged();
        } else {
          numbersBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setNumbers(
          int index, mrtech.smarthome.rpc.Models.PhoneNumber.Builder builderForValue) {
        if (numbersBuilder_ == null) {
          ensureNumbersIsMutable();
          numbers_.set(index, builderForValue.build());
          onChanged();
        } else {
          numbersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addNumbers(mrtech.smarthome.rpc.Models.PhoneNumber value) {
        if (numbersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNumbersIsMutable();
          numbers_.add(value);
          onChanged();
        } else {
          numbersBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addNumbers(
          int index, mrtech.smarthome.rpc.Models.PhoneNumber value) {
        if (numbersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNumbersIsMutable();
          numbers_.add(index, value);
          onChanged();
        } else {
          numbersBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addNumbers(
          mrtech.smarthome.rpc.Models.PhoneNumber.Builder builderForValue) {
        if (numbersBuilder_ == null) {
          ensureNumbersIsMutable();
          numbers_.add(builderForValue.build());
          onChanged();
        } else {
          numbersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addNumbers(
          int index, mrtech.smarthome.rpc.Models.PhoneNumber.Builder builderForValue) {
        if (numbersBuilder_ == null) {
          ensureNumbersIsMutable();
          numbers_.add(index, builderForValue.build());
          onChanged();
        } else {
          numbersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllNumbers(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.PhoneNumber> values) {
        if (numbersBuilder_ == null) {
          ensureNumbersIsMutable();
          super.addAll(values, numbers_);
          onChanged();
        } else {
          numbersBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearNumbers() {
        if (numbersBuilder_ == null) {
          numbers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          numbersBuilder_.clear();
        }
        return this;
      }
      public Builder removeNumbers(int index) {
        if (numbersBuilder_ == null) {
          ensureNumbersIsMutable();
          numbers_.remove(index);
          onChanged();
        } else {
          numbersBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.PhoneNumber.Builder getNumbersBuilder(
          int index) {
        return getNumbersFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder getNumbersOrBuilder(
          int index) {
        if (numbersBuilder_ == null) {
          return numbers_.get(index);  } else {
          return numbersBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder> 
           getNumbersOrBuilderList() {
        if (numbersBuilder_ != null) {
          return numbersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(numbers_);
        }
      }
      public mrtech.smarthome.rpc.Models.PhoneNumber.Builder addNumbersBuilder() {
        return getNumbersFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.PhoneNumber.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.PhoneNumber.Builder addNumbersBuilder(
          int index) {
        return getNumbersFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.PhoneNumber.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.PhoneNumber.Builder> 
           getNumbersBuilderList() {
        return getNumbersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.PhoneNumber, mrtech.smarthome.rpc.Models.PhoneNumber.Builder, mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder> 
          getNumbersFieldBuilder() {
        if (numbersBuilder_ == null) {
          numbersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.PhoneNumber, mrtech.smarthome.rpc.Models.PhoneNumber.Builder, mrtech.smarthome.rpc.Models.PhoneNumberOrBuilder>(
                  numbers_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          numbers_ = null;
        }
        return numbersBuilder_;
      }
      
      // optional bool enable_nat = 6;
      private boolean enableNat_ ;
      public boolean hasEnableNat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getEnableNat() {
        return enableNat_;
      }
      public Builder setEnableNat(boolean value) {
        bitField0_ |= 0x00000020;
        enableNat_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableNat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        enableNat_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.MobilePhoneConfig)
    }
    
    static {
      defaultInstance = new MobilePhoneConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.MobilePhoneConfig)
  }
  
  public interface AccountQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 page = 1;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 2;
    boolean hasPageSize();
    int getPageSize();
    
    // optional string name = 3;
    boolean hasName();
    String getName();
  }
  public static final class AccountQuery extends
      com.google.protobuf.GeneratedMessage
      implements AccountQueryOrBuilder {
    // Use AccountQuery.newBuilder() to construct.
    private AccountQuery(Builder builder) {
      super(builder);
    }
    private AccountQuery(boolean noInit) {}
    
    private static final AccountQuery defaultInstance;
    public static AccountQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public AccountQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_AccountQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_AccountQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 page = 1;
    public static final int PAGE_FIELD_NUMBER = 1;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 2;
    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      page_ = 0;
      pageSize_ = 0;
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, page_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, pageSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, page_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, pageSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.AccountQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.AccountQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.AccountQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_AccountQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_AccountQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.AccountQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.AccountQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.AccountQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.AccountQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.AccountQuery build() {
        mrtech.smarthome.rpc.Models.AccountQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.AccountQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.AccountQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.AccountQuery buildPartial() {
        mrtech.smarthome.rpc.Models.AccountQuery result = new mrtech.smarthome.rpc.Models.AccountQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pageSize_ = pageSize_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.AccountQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.AccountQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.AccountQuery other) {
        if (other == mrtech.smarthome.rpc.Models.AccountQuery.getDefaultInstance()) return this;
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              page_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              pageSize_ = input.readInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 page = 1;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000001;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 2;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000002;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 3;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.AccountQuery)
    }
    
    static {
      defaultInstance = new AccountQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.AccountQuery)
  }
  
  public interface AccountOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
    
    // optional string api_key = 3;
    boolean hasApiKey();
    String getApiKey();
    
    // optional int32 last_activity = 4;
    boolean hasLastActivity();
    int getLastActivity();
    
    // optional string passphrase = 5;
    boolean hasPassphrase();
    String getPassphrase();
    
    // optional bool passphrase_not_set = 6;
    boolean hasPassphraseNotSet();
    boolean getPassphraseNotSet();
  }
  public static final class Account extends
      com.google.protobuf.GeneratedMessage
      implements AccountOrBuilder {
    // Use Account.newBuilder() to construct.
    private Account(Builder builder) {
      super(builder);
    }
    private Account(boolean noInit) {}
    
    private static final Account defaultInstance;
    public static Account getDefaultInstance() {
      return defaultInstance;
    }
    
    public Account getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Account_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Account_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string api_key = 3;
    public static final int API_KEY_FIELD_NUMBER = 3;
    private java.lang.Object apiKey_;
    public boolean hasApiKey() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getApiKey() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          apiKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getApiKeyBytes() {
      java.lang.Object ref = apiKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        apiKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 last_activity = 4;
    public static final int LAST_ACTIVITY_FIELD_NUMBER = 4;
    private int lastActivity_;
    public boolean hasLastActivity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getLastActivity() {
      return lastActivity_;
    }
    
    // optional string passphrase = 5;
    public static final int PASSPHRASE_FIELD_NUMBER = 5;
    private java.lang.Object passphrase_;
    public boolean hasPassphrase() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getPassphrase() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passphrase_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPassphraseBytes() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passphrase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool passphrase_not_set = 6;
    public static final int PASSPHRASE_NOT_SET_FIELD_NUMBER = 6;
    private boolean passphraseNotSet_;
    public boolean hasPassphraseNotSet() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getPassphraseNotSet() {
      return passphraseNotSet_;
    }
    
    private void initFields() {
      id_ = 0;
      name_ = "";
      apiKey_ = "";
      lastActivity_ = 0;
      passphrase_ = "";
      passphraseNotSet_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getApiKeyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, lastActivity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, passphraseNotSet_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getApiKeyBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, lastActivity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, passphraseNotSet_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Account parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Account parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Account prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.AccountOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Account_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Account_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Account.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        apiKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        lastActivity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        passphrase_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        passphraseNotSet_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Account.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Account getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Account.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Account build() {
        mrtech.smarthome.rpc.Models.Account result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Account buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Account result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Account buildPartial() {
        mrtech.smarthome.rpc.Models.Account result = new mrtech.smarthome.rpc.Models.Account(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.apiKey_ = apiKey_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.lastActivity_ = lastActivity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.passphrase_ = passphrase_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.passphraseNotSet_ = passphraseNotSet_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Account) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Account)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Account other) {
        if (other == mrtech.smarthome.rpc.Models.Account.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasApiKey()) {
          setApiKey(other.getApiKey());
        }
        if (other.hasLastActivity()) {
          setLastActivity(other.getLastActivity());
        }
        if (other.hasPassphrase()) {
          setPassphrase(other.getPassphrase());
        }
        if (other.hasPassphraseNotSet()) {
          setPassphraseNotSet(other.getPassphraseNotSet());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              apiKey_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              lastActivity_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              passphrase_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              passphraseNotSet_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional string api_key = 3;
      private java.lang.Object apiKey_ = "";
      public boolean hasApiKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getApiKey() {
        java.lang.Object ref = apiKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          apiKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setApiKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        apiKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearApiKey() {
        bitField0_ = (bitField0_ & ~0x00000004);
        apiKey_ = getDefaultInstance().getApiKey();
        onChanged();
        return this;
      }
      void setApiKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        apiKey_ = value;
        onChanged();
      }
      
      // optional int32 last_activity = 4;
      private int lastActivity_ ;
      public boolean hasLastActivity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getLastActivity() {
        return lastActivity_;
      }
      public Builder setLastActivity(int value) {
        bitField0_ |= 0x00000008;
        lastActivity_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastActivity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lastActivity_ = 0;
        onChanged();
        return this;
      }
      
      // optional string passphrase = 5;
      private java.lang.Object passphrase_ = "";
      public boolean hasPassphrase() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getPassphrase() {
        java.lang.Object ref = passphrase_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passphrase_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassphrase(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        passphrase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphrase() {
        bitField0_ = (bitField0_ & ~0x00000010);
        passphrase_ = getDefaultInstance().getPassphrase();
        onChanged();
        return this;
      }
      void setPassphrase(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        passphrase_ = value;
        onChanged();
      }
      
      // optional bool passphrase_not_set = 6;
      private boolean passphraseNotSet_ ;
      public boolean hasPassphraseNotSet() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getPassphraseNotSet() {
        return passphraseNotSet_;
      }
      public Builder setPassphraseNotSet(boolean value) {
        bitField0_ |= 0x00000020;
        passphraseNotSet_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphraseNotSet() {
        bitField0_ = (bitField0_ & ~0x00000020);
        passphraseNotSet_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Account)
    }
    
    static {
      defaultInstance = new Account(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Account)
  }
  
  public interface DeviceOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Device> {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional .mrtech.smarthome.rpc.DeviceType type = 2;
    boolean hasType();
    mrtech.smarthome.rpc.Models.DeviceType getType();
    
    // optional string alias = 3;
    boolean hasAlias();
    String getAlias();
    
    // optional int32 group_id = 4;
    boolean hasGroupId();
    int getGroupId();
    
    // optional .mrtech.smarthome.rpc.Group group = 5;
    boolean hasGroup();
    mrtech.smarthome.rpc.Models.Group getGroup();
    mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder();
  }
  public static final class Device extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Device> implements DeviceOrBuilder {
    // Use Device.newBuilder() to construct.
    private Device(Builder builder) {
      super(builder);
    }
    private Device(boolean noInit) {}
    
    private static final Device defaultInstance;
    public static Device getDefaultInstance() {
      return defaultInstance;
    }
    
    public Device getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Device_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Device_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional .mrtech.smarthome.rpc.DeviceType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.DeviceType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.DeviceType getType() {
      return type_;
    }
    
    // optional string alias = 3;
    public static final int ALIAS_FIELD_NUMBER = 3;
    private java.lang.Object alias_;
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          alias_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 group_id = 4;
    public static final int GROUP_ID_FIELD_NUMBER = 4;
    private int groupId_;
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getGroupId() {
      return groupId_;
    }
    
    // optional .mrtech.smarthome.rpc.Group group = 5;
    public static final int GROUP_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.Group group_;
    public boolean hasGroup() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.Group getGroup() {
      return group_;
    }
    public mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder() {
      return group_;
    }
    
    private void initFields() {
      id_ = 0;
      type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
      alias_ = "";
      groupId_ = 0;
      group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<mrtech.smarthome.rpc.Models.Device>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getAliasBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, group_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getAliasBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, group_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Device parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Device parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Device prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          mrtech.smarthome.rpc.Models.Device, Builder> implements mrtech.smarthome.rpc.Models.DeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Device_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Device_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Device.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGroupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (groupBuilder_ == null) {
          group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
        } else {
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Device.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Device getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Device.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Device build() {
        mrtech.smarthome.rpc.Models.Device result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Device buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Device result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Device buildPartial() {
        mrtech.smarthome.rpc.Models.Device result = new mrtech.smarthome.rpc.Models.Device(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (groupBuilder_ == null) {
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Device) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Device)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Device other) {
        if (other == mrtech.smarthome.rpc.Models.Device.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAlias()) {
          setAlias(other.getAlias());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasGroup()) {
          mergeGroup(other.getGroup());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.DeviceType value = mrtech.smarthome.rpc.Models.DeviceType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                type_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              alias_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              groupId_ = input.readInt32();
              break;
            }
            case 42: {
              mrtech.smarthome.rpc.Models.Group.Builder subBuilder = mrtech.smarthome.rpc.Models.Group.newBuilder();
              if (hasGroup()) {
                subBuilder.mergeFrom(getGroup());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGroup(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.DeviceType type = 2;
      private mrtech.smarthome.rpc.Models.DeviceType type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.DeviceType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
        onChanged();
        return this;
      }
      
      // optional string alias = 3;
      private java.lang.Object alias_ = "";
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAlias(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        alias_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000004);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      void setAlias(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        alias_ = value;
        onChanged();
      }
      
      // optional int32 group_id = 4;
      private int groupId_ ;
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getGroupId() {
        return groupId_;
      }
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000008;
        groupId_ = value;
        onChanged();
        return this;
      }
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        groupId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.Group group = 5;
      private mrtech.smarthome.rpc.Models.Group group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder> groupBuilder_;
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.Group getGroup() {
        if (groupBuilder_ == null) {
          return group_;
        } else {
          return groupBuilder_.getMessage();
        }
      }
      public Builder setGroup(mrtech.smarthome.rpc.Models.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          group_ = value;
          onChanged();
        } else {
          groupBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setGroup(
          mrtech.smarthome.rpc.Models.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          group_ = builderForValue.build();
          onChanged();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeGroup(mrtech.smarthome.rpc.Models.Group value) {
        if (groupBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              group_ != mrtech.smarthome.rpc.Models.Group.getDefaultInstance()) {
            group_ =
              mrtech.smarthome.rpc.Models.Group.newBuilder(group_).mergeFrom(value).buildPartial();
          } else {
            group_ = value;
          }
          onChanged();
        } else {
          groupBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
          onChanged();
        } else {
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public mrtech.smarthome.rpc.Models.Group.Builder getGroupBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getGroupFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          return group_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder>(
                  group_,
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Device)
    }
    
    static {
      defaultInstance = new Device(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Device)
  }
  
  public interface ZigBeeDeviceOrBuilder extends
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<ZigBeeDevice> {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 address = 2;
    boolean hasAddress();
    int getAddress();
    
    // optional uint64 mac_address = 3;
    boolean hasMacAddress();
    long getMacAddress();
    
    // optional float link_quality = 4;
    boolean hasLinkQuality();
    float getLinkQuality();
    
    // optional int32 endpoint = 5;
    boolean hasEndpoint();
    int getEndpoint();
    
    // optional .mrtech.smarthome.rpc.DeviceId device_id = 6;
    boolean hasDeviceId();
    mrtech.smarthome.rpc.Models.DeviceId getDeviceId();
    
    // optional int32 zcl_version = 7;
    boolean hasZclVersion();
    int getZclVersion();
    
    // optional int32 application_version = 8;
    boolean hasApplicationVersion();
    int getApplicationVersion();
    
    // optional int32 stack_version = 9;
    boolean hasStackVersion();
    int getStackVersion();
    
    // optional int32 hardware_version = 10;
    boolean hasHardwareVersion();
    int getHardwareVersion();
    
    // optional string manufacturer_name = 11;
    boolean hasManufacturerName();
    String getManufacturerName();
    
    // optional string model_identifier = 12;
    boolean hasModelIdentifier();
    String getModelIdentifier();
    
    // optional string date_code = 13;
    boolean hasDateCode();
    String getDateCode();
    
    // optional .mrtech.smarthome.rpc.PowerSource power_source = 14;
    boolean hasPowerSource();
    mrtech.smarthome.rpc.Models.PowerSource getPowerSource();
    
    // optional bool secondary_power_source = 15;
    boolean hasSecondaryPowerSource();
    boolean getSecondaryPowerSource();
    
    // optional bool online = 16;
    boolean hasOnline();
    boolean getOnline();
  }
  public static final class ZigBeeDevice extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        ZigBeeDevice> implements ZigBeeDeviceOrBuilder {
    // Use ZigBeeDevice.newBuilder() to construct.
    private ZigBeeDevice(Builder builder) {
      super(builder);
    }
    private ZigBeeDevice(boolean noInit) {}
    
    private static final ZigBeeDevice defaultInstance;
    public static ZigBeeDevice getDefaultInstance() {
      return defaultInstance;
    }
    
    public ZigBeeDevice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZigBeeDevice_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZigBeeDevice_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 address = 2;
    public static final int ADDRESS_FIELD_NUMBER = 2;
    private int address_;
    public boolean hasAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getAddress() {
      return address_;
    }
    
    // optional uint64 mac_address = 3;
    public static final int MAC_ADDRESS_FIELD_NUMBER = 3;
    private long macAddress_;
    public boolean hasMacAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getMacAddress() {
      return macAddress_;
    }
    
    // optional float link_quality = 4;
    public static final int LINK_QUALITY_FIELD_NUMBER = 4;
    private float linkQuality_;
    public boolean hasLinkQuality() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getLinkQuality() {
      return linkQuality_;
    }
    
    // optional int32 endpoint = 5;
    public static final int ENDPOINT_FIELD_NUMBER = 5;
    private int endpoint_;
    public boolean hasEndpoint() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getEndpoint() {
      return endpoint_;
    }
    
    // optional .mrtech.smarthome.rpc.DeviceId device_id = 6;
    public static final int DEVICE_ID_FIELD_NUMBER = 6;
    private mrtech.smarthome.rpc.Models.DeviceId deviceId_;
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public mrtech.smarthome.rpc.Models.DeviceId getDeviceId() {
      return deviceId_;
    }
    
    // optional int32 zcl_version = 7;
    public static final int ZCL_VERSION_FIELD_NUMBER = 7;
    private int zclVersion_;
    public boolean hasZclVersion() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getZclVersion() {
      return zclVersion_;
    }
    
    // optional int32 application_version = 8;
    public static final int APPLICATION_VERSION_FIELD_NUMBER = 8;
    private int applicationVersion_;
    public boolean hasApplicationVersion() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getApplicationVersion() {
      return applicationVersion_;
    }
    
    // optional int32 stack_version = 9;
    public static final int STACK_VERSION_FIELD_NUMBER = 9;
    private int stackVersion_;
    public boolean hasStackVersion() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getStackVersion() {
      return stackVersion_;
    }
    
    // optional int32 hardware_version = 10;
    public static final int HARDWARE_VERSION_FIELD_NUMBER = 10;
    private int hardwareVersion_;
    public boolean hasHardwareVersion() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getHardwareVersion() {
      return hardwareVersion_;
    }
    
    // optional string manufacturer_name = 11;
    public static final int MANUFACTURER_NAME_FIELD_NUMBER = 11;
    private java.lang.Object manufacturerName_;
    public boolean hasManufacturerName() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getManufacturerName() {
      java.lang.Object ref = manufacturerName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          manufacturerName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getManufacturerNameBytes() {
      java.lang.Object ref = manufacturerName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        manufacturerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string model_identifier = 12;
    public static final int MODEL_IDENTIFIER_FIELD_NUMBER = 12;
    private java.lang.Object modelIdentifier_;
    public boolean hasModelIdentifier() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getModelIdentifier() {
      java.lang.Object ref = modelIdentifier_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          modelIdentifier_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getModelIdentifierBytes() {
      java.lang.Object ref = modelIdentifier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        modelIdentifier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string date_code = 13;
    public static final int DATE_CODE_FIELD_NUMBER = 13;
    private java.lang.Object dateCode_;
    public boolean hasDateCode() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getDateCode() {
      java.lang.Object ref = dateCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dateCode_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDateCodeBytes() {
      java.lang.Object ref = dateCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dateCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.PowerSource power_source = 14;
    public static final int POWER_SOURCE_FIELD_NUMBER = 14;
    private mrtech.smarthome.rpc.Models.PowerSource powerSource_;
    public boolean hasPowerSource() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public mrtech.smarthome.rpc.Models.PowerSource getPowerSource() {
      return powerSource_;
    }
    
    // optional bool secondary_power_source = 15;
    public static final int SECONDARY_POWER_SOURCE_FIELD_NUMBER = 15;
    private boolean secondaryPowerSource_;
    public boolean hasSecondaryPowerSource() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getSecondaryPowerSource() {
      return secondaryPowerSource_;
    }
    
    // optional bool online = 16;
    public static final int ONLINE_FIELD_NUMBER = 16;
    private boolean online_;
    public boolean hasOnline() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public boolean getOnline() {
      return online_;
    }
    
    private void initFields() {
      id_ = 0;
      address_ = 0;
      macAddress_ = 0L;
      linkQuality_ = 0F;
      endpoint_ = 0;
      deviceId_ = mrtech.smarthome.rpc.Models.DeviceId.DEVICE_ID_ON_OFF_SWITCH;
      zclVersion_ = 0;
      applicationVersion_ = 0;
      stackVersion_ = 0;
      hardwareVersion_ = 0;
      manufacturerName_ = "";
      modelIdentifier_ = "";
      dateCode_ = "";
      powerSource_ = mrtech.smarthome.rpc.Models.PowerSource.POWER_SOURCE_UNKNOWN;
      secondaryPowerSource_ = false;
      online_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<mrtech.smarthome.rpc.Models.ZigBeeDevice>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, address_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, macAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, linkQuality_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, endpoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, deviceId_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, zclVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, applicationVersion_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, stackVersion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getManufacturerNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getModelIdentifierBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getDateCodeBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeEnum(14, powerSource_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, secondaryPowerSource_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, online_);
      }
      extensionWriter.writeUntil(536870912, output);
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, address_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, macAddress_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, linkQuality_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, endpoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, deviceId_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, zclVersion_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, applicationVersion_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, stackVersion_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, hardwareVersion_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getManufacturerNameBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getModelIdentifierBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getDateCodeBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, powerSource_.getNumber());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, secondaryPowerSource_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, online_);
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZigBeeDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.ZigBeeDevice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          mrtech.smarthome.rpc.Models.ZigBeeDevice, Builder> implements mrtech.smarthome.rpc.Models.ZigBeeDeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZigBeeDevice_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZigBeeDevice_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.ZigBeeDevice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        address_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        macAddress_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        linkQuality_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000008);
        endpoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        deviceId_ = mrtech.smarthome.rpc.Models.DeviceId.DEVICE_ID_ON_OFF_SWITCH;
        bitField0_ = (bitField0_ & ~0x00000020);
        zclVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        applicationVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        stackVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        hardwareVersion_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        manufacturerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        modelIdentifier_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        dateCode_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        powerSource_ = mrtech.smarthome.rpc.Models.PowerSource.POWER_SOURCE_UNKNOWN;
        bitField0_ = (bitField0_ & ~0x00002000);
        secondaryPowerSource_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        online_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.ZigBeeDevice.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.ZigBeeDevice getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.ZigBeeDevice.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.ZigBeeDevice build() {
        mrtech.smarthome.rpc.Models.ZigBeeDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.ZigBeeDevice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.ZigBeeDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.ZigBeeDevice buildPartial() {
        mrtech.smarthome.rpc.Models.ZigBeeDevice result = new mrtech.smarthome.rpc.Models.ZigBeeDevice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.address_ = address_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.macAddress_ = macAddress_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.linkQuality_ = linkQuality_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.endpoint_ = endpoint_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.zclVersion_ = zclVersion_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.applicationVersion_ = applicationVersion_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.stackVersion_ = stackVersion_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.hardwareVersion_ = hardwareVersion_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.manufacturerName_ = manufacturerName_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.modelIdentifier_ = modelIdentifier_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.dateCode_ = dateCode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.powerSource_ = powerSource_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.secondaryPowerSource_ = secondaryPowerSource_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.online_ = online_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.ZigBeeDevice) {
          return mergeFrom((mrtech.smarthome.rpc.Models.ZigBeeDevice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.ZigBeeDevice other) {
        if (other == mrtech.smarthome.rpc.Models.ZigBeeDevice.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasAddress()) {
          setAddress(other.getAddress());
        }
        if (other.hasMacAddress()) {
          setMacAddress(other.getMacAddress());
        }
        if (other.hasLinkQuality()) {
          setLinkQuality(other.getLinkQuality());
        }
        if (other.hasEndpoint()) {
          setEndpoint(other.getEndpoint());
        }
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasZclVersion()) {
          setZclVersion(other.getZclVersion());
        }
        if (other.hasApplicationVersion()) {
          setApplicationVersion(other.getApplicationVersion());
        }
        if (other.hasStackVersion()) {
          setStackVersion(other.getStackVersion());
        }
        if (other.hasHardwareVersion()) {
          setHardwareVersion(other.getHardwareVersion());
        }
        if (other.hasManufacturerName()) {
          setManufacturerName(other.getManufacturerName());
        }
        if (other.hasModelIdentifier()) {
          setModelIdentifier(other.getModelIdentifier());
        }
        if (other.hasDateCode()) {
          setDateCode(other.getDateCode());
        }
        if (other.hasPowerSource()) {
          setPowerSource(other.getPowerSource());
        }
        if (other.hasSecondaryPowerSource()) {
          setSecondaryPowerSource(other.getSecondaryPowerSource());
        }
        if (other.hasOnline()) {
          setOnline(other.getOnline());
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              address_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              macAddress_ = input.readUInt64();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              linkQuality_ = input.readFloat();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              endpoint_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.DeviceId value = mrtech.smarthome.rpc.Models.DeviceId.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                deviceId_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              zclVersion_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              applicationVersion_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              stackVersion_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              hardwareVersion_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              manufacturerName_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              modelIdentifier_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              dateCode_ = input.readBytes();
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.PowerSource value = mrtech.smarthome.rpc.Models.PowerSource.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                powerSource_ = value;
              }
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              secondaryPowerSource_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              online_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 address = 2;
      private int address_ ;
      public boolean hasAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getAddress() {
        return address_;
      }
      public Builder setAddress(int value) {
        bitField0_ |= 0x00000002;
        address_ = value;
        onChanged();
        return this;
      }
      public Builder clearAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        address_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint64 mac_address = 3;
      private long macAddress_ ;
      public boolean hasMacAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getMacAddress() {
        return macAddress_;
      }
      public Builder setMacAddress(long value) {
        bitField0_ |= 0x00000004;
        macAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        macAddress_ = 0L;
        onChanged();
        return this;
      }
      
      // optional float link_quality = 4;
      private float linkQuality_ ;
      public boolean hasLinkQuality() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getLinkQuality() {
        return linkQuality_;
      }
      public Builder setLinkQuality(float value) {
        bitField0_ |= 0x00000008;
        linkQuality_ = value;
        onChanged();
        return this;
      }
      public Builder clearLinkQuality() {
        bitField0_ = (bitField0_ & ~0x00000008);
        linkQuality_ = 0F;
        onChanged();
        return this;
      }
      
      // optional int32 endpoint = 5;
      private int endpoint_ ;
      public boolean hasEndpoint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getEndpoint() {
        return endpoint_;
      }
      public Builder setEndpoint(int value) {
        bitField0_ |= 0x00000010;
        endpoint_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndpoint() {
        bitField0_ = (bitField0_ & ~0x00000010);
        endpoint_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.DeviceId device_id = 6;
      private mrtech.smarthome.rpc.Models.DeviceId deviceId_ = mrtech.smarthome.rpc.Models.DeviceId.DEVICE_ID_ON_OFF_SWITCH;
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public mrtech.smarthome.rpc.Models.DeviceId getDeviceId() {
        return deviceId_;
      }
      public Builder setDeviceId(mrtech.smarthome.rpc.Models.DeviceId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        deviceId_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceId_ = mrtech.smarthome.rpc.Models.DeviceId.DEVICE_ID_ON_OFF_SWITCH;
        onChanged();
        return this;
      }
      
      // optional int32 zcl_version = 7;
      private int zclVersion_ ;
      public boolean hasZclVersion() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getZclVersion() {
        return zclVersion_;
      }
      public Builder setZclVersion(int value) {
        bitField0_ |= 0x00000040;
        zclVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearZclVersion() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zclVersion_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 application_version = 8;
      private int applicationVersion_ ;
      public boolean hasApplicationVersion() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getApplicationVersion() {
        return applicationVersion_;
      }
      public Builder setApplicationVersion(int value) {
        bitField0_ |= 0x00000080;
        applicationVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearApplicationVersion() {
        bitField0_ = (bitField0_ & ~0x00000080);
        applicationVersion_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 stack_version = 9;
      private int stackVersion_ ;
      public boolean hasStackVersion() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getStackVersion() {
        return stackVersion_;
      }
      public Builder setStackVersion(int value) {
        bitField0_ |= 0x00000100;
        stackVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearStackVersion() {
        bitField0_ = (bitField0_ & ~0x00000100);
        stackVersion_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 hardware_version = 10;
      private int hardwareVersion_ ;
      public boolean hasHardwareVersion() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getHardwareVersion() {
        return hardwareVersion_;
      }
      public Builder setHardwareVersion(int value) {
        bitField0_ |= 0x00000200;
        hardwareVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearHardwareVersion() {
        bitField0_ = (bitField0_ & ~0x00000200);
        hardwareVersion_ = 0;
        onChanged();
        return this;
      }
      
      // optional string manufacturer_name = 11;
      private java.lang.Object manufacturerName_ = "";
      public boolean hasManufacturerName() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getManufacturerName() {
        java.lang.Object ref = manufacturerName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          manufacturerName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setManufacturerName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        manufacturerName_ = value;
        onChanged();
        return this;
      }
      public Builder clearManufacturerName() {
        bitField0_ = (bitField0_ & ~0x00000400);
        manufacturerName_ = getDefaultInstance().getManufacturerName();
        onChanged();
        return this;
      }
      void setManufacturerName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        manufacturerName_ = value;
        onChanged();
      }
      
      // optional string model_identifier = 12;
      private java.lang.Object modelIdentifier_ = "";
      public boolean hasModelIdentifier() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getModelIdentifier() {
        java.lang.Object ref = modelIdentifier_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          modelIdentifier_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setModelIdentifier(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        modelIdentifier_ = value;
        onChanged();
        return this;
      }
      public Builder clearModelIdentifier() {
        bitField0_ = (bitField0_ & ~0x00000800);
        modelIdentifier_ = getDefaultInstance().getModelIdentifier();
        onChanged();
        return this;
      }
      void setModelIdentifier(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        modelIdentifier_ = value;
        onChanged();
      }
      
      // optional string date_code = 13;
      private java.lang.Object dateCode_ = "";
      public boolean hasDateCode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getDateCode() {
        java.lang.Object ref = dateCode_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dateCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDateCode(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        dateCode_ = value;
        onChanged();
        return this;
      }
      public Builder clearDateCode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dateCode_ = getDefaultInstance().getDateCode();
        onChanged();
        return this;
      }
      void setDateCode(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        dateCode_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.PowerSource power_source = 14;
      private mrtech.smarthome.rpc.Models.PowerSource powerSource_ = mrtech.smarthome.rpc.Models.PowerSource.POWER_SOURCE_UNKNOWN;
      public boolean hasPowerSource() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public mrtech.smarthome.rpc.Models.PowerSource getPowerSource() {
        return powerSource_;
      }
      public Builder setPowerSource(mrtech.smarthome.rpc.Models.PowerSource value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        powerSource_ = value;
        onChanged();
        return this;
      }
      public Builder clearPowerSource() {
        bitField0_ = (bitField0_ & ~0x00002000);
        powerSource_ = mrtech.smarthome.rpc.Models.PowerSource.POWER_SOURCE_UNKNOWN;
        onChanged();
        return this;
      }
      
      // optional bool secondary_power_source = 15;
      private boolean secondaryPowerSource_ ;
      public boolean hasSecondaryPowerSource() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getSecondaryPowerSource() {
        return secondaryPowerSource_;
      }
      public Builder setSecondaryPowerSource(boolean value) {
        bitField0_ |= 0x00004000;
        secondaryPowerSource_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondaryPowerSource() {
        bitField0_ = (bitField0_ & ~0x00004000);
        secondaryPowerSource_ = false;
        onChanged();
        return this;
      }
      
      // optional bool online = 16;
      private boolean online_ ;
      public boolean hasOnline() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public boolean getOnline() {
        return online_;
      }
      public Builder setOnline(boolean value) {
        bitField0_ |= 0x00008000;
        online_ = value;
        onChanged();
        return this;
      }
      public Builder clearOnline() {
        bitField0_ = (bitField0_ & ~0x00008000);
        online_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.ZigBeeDevice)
    }
    
    static {
      defaultInstance = new ZigBeeDevice(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.ZigBeeDevice)
    public static final int DETAIL_FIELD_NUMBER = 256;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.Device,
        mrtech.smarthome.rpc.Models.ZigBeeDevice> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.ZigBeeDevice.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.ZigBeeDevice.class,
          mrtech.smarthome.rpc.Models.ZigBeeDevice.getDefaultInstance());
  }
  
  public interface OnOffClusterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool state = 1;
    boolean hasState();
    boolean getState();
  }
  public static final class OnOffCluster extends
      com.google.protobuf.GeneratedMessage
      implements OnOffClusterOrBuilder {
    // Use OnOffCluster.newBuilder() to construct.
    private OnOffCluster(Builder builder) {
      super(builder);
    }
    private OnOffCluster(boolean noInit) {}
    
    private static final OnOffCluster defaultInstance;
    public static OnOffCluster getDefaultInstance() {
      return defaultInstance;
    }
    
    public OnOffCluster getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OnOffCluster_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OnOffCluster_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool state = 1;
    public static final int STATE_FIELD_NUMBER = 1;
    private boolean state_;
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getState() {
      return state_;
    }
    
    private void initFields() {
      state_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, state_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, state_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OnOffCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.OnOffCluster prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.OnOffClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OnOffCluster_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OnOffCluster_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.OnOffCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        state_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.OnOffCluster.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.OnOffCluster getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.OnOffCluster.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.OnOffCluster build() {
        mrtech.smarthome.rpc.Models.OnOffCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.OnOffCluster buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.OnOffCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.OnOffCluster buildPartial() {
        mrtech.smarthome.rpc.Models.OnOffCluster result = new mrtech.smarthome.rpc.Models.OnOffCluster(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.OnOffCluster) {
          return mergeFrom((mrtech.smarthome.rpc.Models.OnOffCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.OnOffCluster other) {
        if (other == mrtech.smarthome.rpc.Models.OnOffCluster.getDefaultInstance()) return this;
        if (other.hasState()) {
          setState(other.getState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              state_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool state = 1;
      private boolean state_ ;
      public boolean hasState() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getState() {
        return state_;
      }
      public Builder setState(boolean value) {
        bitField0_ |= 0x00000001;
        state_ = value;
        onChanged();
        return this;
      }
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.OnOffCluster)
    }
    
    static {
      defaultInstance = new OnOffCluster(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.OnOffCluster)
    public static final int DETAIL_FIELD_NUMBER = 65542;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.ZigBeeDevice,
        mrtech.smarthome.rpc.Models.OnOffCluster> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.OnOffCluster.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.OnOffCluster.class,
          mrtech.smarthome.rpc.Models.OnOffCluster.getDefaultInstance());
  }
  
  public interface ElectricalMeasurementClusterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.MeasurementType measurement_type = 1;
    boolean hasMeasurementType();
    mrtech.smarthome.rpc.Models.MeasurementType getMeasurementType();
    
    // optional int32 frequency = 2;
    boolean hasFrequency();
    int getFrequency();
    
    // optional double rms_voltage = 3;
    boolean hasRmsVoltage();
    double getRmsVoltage();
    
    // optional double rms_current = 4;
    boolean hasRmsCurrent();
    double getRmsCurrent();
    
    // optional double active_power = 5;
    boolean hasActivePower();
    double getActivePower();
    
    // optional int32 reactive_power = 6;
    boolean hasReactivePower();
    int getReactivePower();
    
    // optional int32 apparent_power = 7;
    boolean hasApparentPower();
    int getApparentPower();
    
    // optional int32 power_factor = 8;
    boolean hasPowerFactor();
    int getPowerFactor();
    
    // optional bool overcurrent = 9;
    boolean hasOvercurrent();
    boolean getOvercurrent();
  }
  public static final class ElectricalMeasurementCluster extends
      com.google.protobuf.GeneratedMessage
      implements ElectricalMeasurementClusterOrBuilder {
    // Use ElectricalMeasurementCluster.newBuilder() to construct.
    private ElectricalMeasurementCluster(Builder builder) {
      super(builder);
    }
    private ElectricalMeasurementCluster(boolean noInit) {}
    
    private static final ElectricalMeasurementCluster defaultInstance;
    public static ElectricalMeasurementCluster getDefaultInstance() {
      return defaultInstance;
    }
    
    public ElectricalMeasurementCluster getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.MeasurementType measurement_type = 1;
    public static final int MEASUREMENT_TYPE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.MeasurementType measurementType_;
    public boolean hasMeasurementType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.MeasurementType getMeasurementType() {
      return measurementType_;
    }
    
    // optional int32 frequency = 2;
    public static final int FREQUENCY_FIELD_NUMBER = 2;
    private int frequency_;
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getFrequency() {
      return frequency_;
    }
    
    // optional double rms_voltage = 3;
    public static final int RMS_VOLTAGE_FIELD_NUMBER = 3;
    private double rmsVoltage_;
    public boolean hasRmsVoltage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public double getRmsVoltage() {
      return rmsVoltage_;
    }
    
    // optional double rms_current = 4;
    public static final int RMS_CURRENT_FIELD_NUMBER = 4;
    private double rmsCurrent_;
    public boolean hasRmsCurrent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public double getRmsCurrent() {
      return rmsCurrent_;
    }
    
    // optional double active_power = 5;
    public static final int ACTIVE_POWER_FIELD_NUMBER = 5;
    private double activePower_;
    public boolean hasActivePower() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public double getActivePower() {
      return activePower_;
    }
    
    // optional int32 reactive_power = 6;
    public static final int REACTIVE_POWER_FIELD_NUMBER = 6;
    private int reactivePower_;
    public boolean hasReactivePower() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getReactivePower() {
      return reactivePower_;
    }
    
    // optional int32 apparent_power = 7;
    public static final int APPARENT_POWER_FIELD_NUMBER = 7;
    private int apparentPower_;
    public boolean hasApparentPower() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getApparentPower() {
      return apparentPower_;
    }
    
    // optional int32 power_factor = 8;
    public static final int POWER_FACTOR_FIELD_NUMBER = 8;
    private int powerFactor_;
    public boolean hasPowerFactor() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getPowerFactor() {
      return powerFactor_;
    }
    
    // optional bool overcurrent = 9;
    public static final int OVERCURRENT_FIELD_NUMBER = 9;
    private boolean overcurrent_;
    public boolean hasOvercurrent() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getOvercurrent() {
      return overcurrent_;
    }
    
    private void initFields() {
      measurementType_ = mrtech.smarthome.rpc.Models.MeasurementType.MEASUREMENT_TYPE_NONE;
      frequency_ = 0;
      rmsVoltage_ = 0D;
      rmsCurrent_ = 0D;
      activePower_ = 0D;
      reactivePower_ = 0;
      apparentPower_ = 0;
      powerFactor_ = 0;
      overcurrent_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, measurementType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, frequency_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, rmsVoltage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, rmsCurrent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, activePower_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, reactivePower_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, apparentPower_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, powerFactor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, overcurrent_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, measurementType_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, frequency_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, rmsVoltage_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, rmsCurrent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, activePower_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, reactivePower_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, apparentPower_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, powerFactor_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, overcurrent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.ElectricalMeasurementClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        measurementType_ = mrtech.smarthome.rpc.Models.MeasurementType.MEASUREMENT_TYPE_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        frequency_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        rmsVoltage_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        rmsCurrent_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        activePower_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        reactivePower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        apparentPower_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        powerFactor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        overcurrent_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster build() {
        mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster buildPartial() {
        mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster result = new mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.measurementType_ = measurementType_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.rmsVoltage_ = rmsVoltage_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.rmsCurrent_ = rmsCurrent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.activePower_ = activePower_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.reactivePower_ = reactivePower_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.apparentPower_ = apparentPower_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.powerFactor_ = powerFactor_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.overcurrent_ = overcurrent_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster) {
          return mergeFrom((mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster other) {
        if (other == mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.getDefaultInstance()) return this;
        if (other.hasMeasurementType()) {
          setMeasurementType(other.getMeasurementType());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasRmsVoltage()) {
          setRmsVoltage(other.getRmsVoltage());
        }
        if (other.hasRmsCurrent()) {
          setRmsCurrent(other.getRmsCurrent());
        }
        if (other.hasActivePower()) {
          setActivePower(other.getActivePower());
        }
        if (other.hasReactivePower()) {
          setReactivePower(other.getReactivePower());
        }
        if (other.hasApparentPower()) {
          setApparentPower(other.getApparentPower());
        }
        if (other.hasPowerFactor()) {
          setPowerFactor(other.getPowerFactor());
        }
        if (other.hasOvercurrent()) {
          setOvercurrent(other.getOvercurrent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.MeasurementType value = mrtech.smarthome.rpc.Models.MeasurementType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                measurementType_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              frequency_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              rmsVoltage_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              rmsCurrent_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              activePower_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              reactivePower_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              apparentPower_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              powerFactor_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              overcurrent_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.MeasurementType measurement_type = 1;
      private mrtech.smarthome.rpc.Models.MeasurementType measurementType_ = mrtech.smarthome.rpc.Models.MeasurementType.MEASUREMENT_TYPE_NONE;
      public boolean hasMeasurementType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.MeasurementType getMeasurementType() {
        return measurementType_;
      }
      public Builder setMeasurementType(mrtech.smarthome.rpc.Models.MeasurementType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        measurementType_ = value;
        onChanged();
        return this;
      }
      public Builder clearMeasurementType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        measurementType_ = mrtech.smarthome.rpc.Models.MeasurementType.MEASUREMENT_TYPE_NONE;
        onChanged();
        return this;
      }
      
      // optional int32 frequency = 2;
      private int frequency_ ;
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getFrequency() {
        return frequency_;
      }
      public Builder setFrequency(int value) {
        bitField0_ |= 0x00000002;
        frequency_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000002);
        frequency_ = 0;
        onChanged();
        return this;
      }
      
      // optional double rms_voltage = 3;
      private double rmsVoltage_ ;
      public boolean hasRmsVoltage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public double getRmsVoltage() {
        return rmsVoltage_;
      }
      public Builder setRmsVoltage(double value) {
        bitField0_ |= 0x00000004;
        rmsVoltage_ = value;
        onChanged();
        return this;
      }
      public Builder clearRmsVoltage() {
        bitField0_ = (bitField0_ & ~0x00000004);
        rmsVoltage_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double rms_current = 4;
      private double rmsCurrent_ ;
      public boolean hasRmsCurrent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public double getRmsCurrent() {
        return rmsCurrent_;
      }
      public Builder setRmsCurrent(double value) {
        bitField0_ |= 0x00000008;
        rmsCurrent_ = value;
        onChanged();
        return this;
      }
      public Builder clearRmsCurrent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        rmsCurrent_ = 0D;
        onChanged();
        return this;
      }
      
      // optional double active_power = 5;
      private double activePower_ ;
      public boolean hasActivePower() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public double getActivePower() {
        return activePower_;
      }
      public Builder setActivePower(double value) {
        bitField0_ |= 0x00000010;
        activePower_ = value;
        onChanged();
        return this;
      }
      public Builder clearActivePower() {
        bitField0_ = (bitField0_ & ~0x00000010);
        activePower_ = 0D;
        onChanged();
        return this;
      }
      
      // optional int32 reactive_power = 6;
      private int reactivePower_ ;
      public boolean hasReactivePower() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getReactivePower() {
        return reactivePower_;
      }
      public Builder setReactivePower(int value) {
        bitField0_ |= 0x00000020;
        reactivePower_ = value;
        onChanged();
        return this;
      }
      public Builder clearReactivePower() {
        bitField0_ = (bitField0_ & ~0x00000020);
        reactivePower_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 apparent_power = 7;
      private int apparentPower_ ;
      public boolean hasApparentPower() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getApparentPower() {
        return apparentPower_;
      }
      public Builder setApparentPower(int value) {
        bitField0_ |= 0x00000040;
        apparentPower_ = value;
        onChanged();
        return this;
      }
      public Builder clearApparentPower() {
        bitField0_ = (bitField0_ & ~0x00000040);
        apparentPower_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 power_factor = 8;
      private int powerFactor_ ;
      public boolean hasPowerFactor() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getPowerFactor() {
        return powerFactor_;
      }
      public Builder setPowerFactor(int value) {
        bitField0_ |= 0x00000080;
        powerFactor_ = value;
        onChanged();
        return this;
      }
      public Builder clearPowerFactor() {
        bitField0_ = (bitField0_ & ~0x00000080);
        powerFactor_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool overcurrent = 9;
      private boolean overcurrent_ ;
      public boolean hasOvercurrent() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getOvercurrent() {
        return overcurrent_;
      }
      public Builder setOvercurrent(boolean value) {
        bitField0_ |= 0x00000100;
        overcurrent_ = value;
        onChanged();
        return this;
      }
      public Builder clearOvercurrent() {
        bitField0_ = (bitField0_ & ~0x00000100);
        overcurrent_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.ElectricalMeasurementCluster)
    }
    
    static {
      defaultInstance = new ElectricalMeasurementCluster(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.ElectricalMeasurementCluster)
    public static final int DETAIL_FIELD_NUMBER = 68356;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.ZigBeeDevice,
        mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.class,
          mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.getDefaultInstance());
  }
  
  public interface SimpleMeteringClusterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double current_summation_delivered = 1;
    boolean hasCurrentSummationDelivered();
    double getCurrentSummationDelivered();
    
    // optional .mrtech.smarthome.rpc.UnitOfMeasure unit = 2;
    boolean hasUnit();
    mrtech.smarthome.rpc.Models.UnitOfMeasure getUnit();
  }
  public static final class SimpleMeteringCluster extends
      com.google.protobuf.GeneratedMessage
      implements SimpleMeteringClusterOrBuilder {
    // Use SimpleMeteringCluster.newBuilder() to construct.
    private SimpleMeteringCluster(Builder builder) {
      super(builder);
    }
    private SimpleMeteringCluster(boolean noInit) {}
    
    private static final SimpleMeteringCluster defaultInstance;
    public static SimpleMeteringCluster getDefaultInstance() {
      return defaultInstance;
    }
    
    public SimpleMeteringCluster getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double current_summation_delivered = 1;
    public static final int CURRENT_SUMMATION_DELIVERED_FIELD_NUMBER = 1;
    private double currentSummationDelivered_;
    public boolean hasCurrentSummationDelivered() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getCurrentSummationDelivered() {
      return currentSummationDelivered_;
    }
    
    // optional .mrtech.smarthome.rpc.UnitOfMeasure unit = 2;
    public static final int UNIT_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.UnitOfMeasure unit_;
    public boolean hasUnit() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.UnitOfMeasure getUnit() {
      return unit_;
    }
    
    private void initFields() {
      currentSummationDelivered_ = 0D;
      unit_ = mrtech.smarthome.rpc.Models.UnitOfMeasure.UNIT_OF_MEASURE_KILO_WATT_HOURS;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, currentSummationDelivered_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, unit_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, currentSummationDelivered_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, unit_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SimpleMeteringCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SimpleMeteringCluster prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SimpleMeteringClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SimpleMeteringCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        currentSummationDelivered_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        unit_ = mrtech.smarthome.rpc.Models.UnitOfMeasure.UNIT_OF_MEASURE_KILO_WATT_HOURS;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SimpleMeteringCluster.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SimpleMeteringCluster getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SimpleMeteringCluster.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SimpleMeteringCluster build() {
        mrtech.smarthome.rpc.Models.SimpleMeteringCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SimpleMeteringCluster buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SimpleMeteringCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SimpleMeteringCluster buildPartial() {
        mrtech.smarthome.rpc.Models.SimpleMeteringCluster result = new mrtech.smarthome.rpc.Models.SimpleMeteringCluster(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.currentSummationDelivered_ = currentSummationDelivered_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.unit_ = unit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SimpleMeteringCluster) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SimpleMeteringCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SimpleMeteringCluster other) {
        if (other == mrtech.smarthome.rpc.Models.SimpleMeteringCluster.getDefaultInstance()) return this;
        if (other.hasCurrentSummationDelivered()) {
          setCurrentSummationDelivered(other.getCurrentSummationDelivered());
        }
        if (other.hasUnit()) {
          setUnit(other.getUnit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              currentSummationDelivered_ = input.readDouble();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.UnitOfMeasure value = mrtech.smarthome.rpc.Models.UnitOfMeasure.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                unit_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double current_summation_delivered = 1;
      private double currentSummationDelivered_ ;
      public boolean hasCurrentSummationDelivered() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getCurrentSummationDelivered() {
        return currentSummationDelivered_;
      }
      public Builder setCurrentSummationDelivered(double value) {
        bitField0_ |= 0x00000001;
        currentSummationDelivered_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentSummationDelivered() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentSummationDelivered_ = 0D;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.UnitOfMeasure unit = 2;
      private mrtech.smarthome.rpc.Models.UnitOfMeasure unit_ = mrtech.smarthome.rpc.Models.UnitOfMeasure.UNIT_OF_MEASURE_KILO_WATT_HOURS;
      public boolean hasUnit() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.UnitOfMeasure getUnit() {
        return unit_;
      }
      public Builder setUnit(mrtech.smarthome.rpc.Models.UnitOfMeasure value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        unit_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnit() {
        bitField0_ = (bitField0_ & ~0x00000002);
        unit_ = mrtech.smarthome.rpc.Models.UnitOfMeasure.UNIT_OF_MEASURE_KILO_WATT_HOURS;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SimpleMeteringCluster)
    }
    
    static {
      defaultInstance = new SimpleMeteringCluster(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SimpleMeteringCluster)
    public static final int DETAIL_FIELD_NUMBER = 67330;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.ZigBeeDevice,
        mrtech.smarthome.rpc.Models.SimpleMeteringCluster> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.SimpleMeteringCluster.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.SimpleMeteringCluster.class,
          mrtech.smarthome.rpc.Models.SimpleMeteringCluster.getDefaultInstance());
  }
  
  public interface TemperatureMeasurementClusterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional double measured_value = 1;
    boolean hasMeasuredValue();
    double getMeasuredValue();
  }
  public static final class TemperatureMeasurementCluster extends
      com.google.protobuf.GeneratedMessage
      implements TemperatureMeasurementClusterOrBuilder {
    // Use TemperatureMeasurementCluster.newBuilder() to construct.
    private TemperatureMeasurementCluster(Builder builder) {
      super(builder);
    }
    private TemperatureMeasurementCluster(boolean noInit) {}
    
    private static final TemperatureMeasurementCluster defaultInstance;
    public static TemperatureMeasurementCluster getDefaultInstance() {
      return defaultInstance;
    }
    
    public TemperatureMeasurementCluster getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional double measured_value = 1;
    public static final int MEASURED_VALUE_FIELD_NUMBER = 1;
    private double measuredValue_;
    public boolean hasMeasuredValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public double getMeasuredValue() {
      return measuredValue_;
    }
    
    private void initFields() {
      measuredValue_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, measuredValue_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, measuredValue_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.TemperatureMeasurementClusterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        measuredValue_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster build() {
        mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster buildPartial() {
        mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster result = new mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.measuredValue_ = measuredValue_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster) {
          return mergeFrom((mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster other) {
        if (other == mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.getDefaultInstance()) return this;
        if (other.hasMeasuredValue()) {
          setMeasuredValue(other.getMeasuredValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              measuredValue_ = input.readDouble();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional double measured_value = 1;
      private double measuredValue_ ;
      public boolean hasMeasuredValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public double getMeasuredValue() {
        return measuredValue_;
      }
      public Builder setMeasuredValue(double value) {
        bitField0_ |= 0x00000001;
        measuredValue_ = value;
        onChanged();
        return this;
      }
      public Builder clearMeasuredValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        measuredValue_ = 0D;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.TemperatureMeasurementCluster)
    }
    
    static {
      defaultInstance = new TemperatureMeasurementCluster(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.TemperatureMeasurementCluster)
    public static final int DETAIL_FIELD_NUMBER = 66562;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.ZigBeeDevice,
        mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.class,
          mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.getDefaultInstance());
  }
  
  public interface IasZoneOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 device_id = 2;
    boolean hasDeviceId();
    int getDeviceId();
    
    // optional .mrtech.smarthome.rpc.Device device = 3;
    boolean hasDevice();
    mrtech.smarthome.rpc.Models.Device getDevice();
    mrtech.smarthome.rpc.Models.DeviceOrBuilder getDeviceOrBuilder();
    
    // optional .mrtech.smarthome.rpc.ZoneType type = 4;
    boolean hasType();
    mrtech.smarthome.rpc.Models.ZoneType getType();
    
    // optional bool primary_alarm = 5;
    boolean hasPrimaryAlarm();
    boolean getPrimaryAlarm();
    
    // optional bool secondary_alarm = 6;
    boolean hasSecondaryAlarm();
    boolean getSecondaryAlarm();
    
    // optional bool tamper = 7;
    boolean hasTamper();
    boolean getTamper();
    
    // optional bool low_battery = 8;
    boolean hasLowBattery();
    boolean getLowBattery();
    
    // optional bool supervision_report = 9;
    boolean hasSupervisionReport();
    boolean getSupervisionReport();
    
    // optional bool restore_report = 10;
    boolean hasRestoreReport();
    boolean getRestoreReport();
    
    // optional bool trouble = 11;
    boolean hasTrouble();
    boolean getTrouble();
    
    // optional bool mains_fault = 12;
    boolean hasMainsFault();
    boolean getMainsFault();
    
    // optional bool test_mode = 13;
    boolean hasTestMode();
    boolean getTestMode();
    
    // optional bool battery_defect = 14;
    boolean hasBatteryDefect();
    boolean getBatteryDefect();
    
    // optional bool lack_of_supervision_report = 15;
    boolean hasLackOfSupervisionReport();
    boolean getLackOfSupervisionReport();
    
    // optional int32 last_activity = 16;
    boolean hasLastActivity();
    int getLastActivity();
    
    // optional bool bypassed = 17;
    boolean hasBypassed();
    boolean getBypassed();
    
    // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 18;
    boolean hasArmGroup();
    mrtech.smarthome.rpc.Models.ArmGroup getArmGroup();
  }
  public static final class IasZone extends
      com.google.protobuf.GeneratedMessage
      implements IasZoneOrBuilder {
    // Use IasZone.newBuilder() to construct.
    private IasZone(Builder builder) {
      super(builder);
    }
    private IasZone(boolean noInit) {}
    
    private static final IasZone defaultInstance;
    public static IasZone getDefaultInstance() {
      return defaultInstance;
    }
    
    public IasZone getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_IasZone_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_IasZone_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 device_id = 2;
    public static final int DEVICE_ID_FIELD_NUMBER = 2;
    private int deviceId_;
    public boolean hasDeviceId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getDeviceId() {
      return deviceId_;
    }
    
    // optional .mrtech.smarthome.rpc.Device device = 3;
    public static final int DEVICE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.Device device_;
    public boolean hasDevice() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.Device getDevice() {
      return device_;
    }
    public mrtech.smarthome.rpc.Models.DeviceOrBuilder getDeviceOrBuilder() {
      return device_;
    }
    
    // optional .mrtech.smarthome.rpc.ZoneType type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.ZoneType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.ZoneType getType() {
      return type_;
    }
    
    // optional bool primary_alarm = 5;
    public static final int PRIMARY_ALARM_FIELD_NUMBER = 5;
    private boolean primaryAlarm_;
    public boolean hasPrimaryAlarm() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getPrimaryAlarm() {
      return primaryAlarm_;
    }
    
    // optional bool secondary_alarm = 6;
    public static final int SECONDARY_ALARM_FIELD_NUMBER = 6;
    private boolean secondaryAlarm_;
    public boolean hasSecondaryAlarm() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getSecondaryAlarm() {
      return secondaryAlarm_;
    }
    
    // optional bool tamper = 7;
    public static final int TAMPER_FIELD_NUMBER = 7;
    private boolean tamper_;
    public boolean hasTamper() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getTamper() {
      return tamper_;
    }
    
    // optional bool low_battery = 8;
    public static final int LOW_BATTERY_FIELD_NUMBER = 8;
    private boolean lowBattery_;
    public boolean hasLowBattery() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getLowBattery() {
      return lowBattery_;
    }
    
    // optional bool supervision_report = 9;
    public static final int SUPERVISION_REPORT_FIELD_NUMBER = 9;
    private boolean supervisionReport_;
    public boolean hasSupervisionReport() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getSupervisionReport() {
      return supervisionReport_;
    }
    
    // optional bool restore_report = 10;
    public static final int RESTORE_REPORT_FIELD_NUMBER = 10;
    private boolean restoreReport_;
    public boolean hasRestoreReport() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public boolean getRestoreReport() {
      return restoreReport_;
    }
    
    // optional bool trouble = 11;
    public static final int TROUBLE_FIELD_NUMBER = 11;
    private boolean trouble_;
    public boolean hasTrouble() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public boolean getTrouble() {
      return trouble_;
    }
    
    // optional bool mains_fault = 12;
    public static final int MAINS_FAULT_FIELD_NUMBER = 12;
    private boolean mainsFault_;
    public boolean hasMainsFault() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public boolean getMainsFault() {
      return mainsFault_;
    }
    
    // optional bool test_mode = 13;
    public static final int TEST_MODE_FIELD_NUMBER = 13;
    private boolean testMode_;
    public boolean hasTestMode() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public boolean getTestMode() {
      return testMode_;
    }
    
    // optional bool battery_defect = 14;
    public static final int BATTERY_DEFECT_FIELD_NUMBER = 14;
    private boolean batteryDefect_;
    public boolean hasBatteryDefect() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public boolean getBatteryDefect() {
      return batteryDefect_;
    }
    
    // optional bool lack_of_supervision_report = 15;
    public static final int LACK_OF_SUPERVISION_REPORT_FIELD_NUMBER = 15;
    private boolean lackOfSupervisionReport_;
    public boolean hasLackOfSupervisionReport() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getLackOfSupervisionReport() {
      return lackOfSupervisionReport_;
    }
    
    // optional int32 last_activity = 16;
    public static final int LAST_ACTIVITY_FIELD_NUMBER = 16;
    private int lastActivity_;
    public boolean hasLastActivity() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getLastActivity() {
      return lastActivity_;
    }
    
    // optional bool bypassed = 17;
    public static final int BYPASSED_FIELD_NUMBER = 17;
    private boolean bypassed_;
    public boolean hasBypassed() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public boolean getBypassed() {
      return bypassed_;
    }
    
    // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 18;
    public static final int ARM_GROUP_FIELD_NUMBER = 18;
    private mrtech.smarthome.rpc.Models.ArmGroup armGroup_;
    public boolean hasArmGroup() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public mrtech.smarthome.rpc.Models.ArmGroup getArmGroup() {
      return armGroup_;
    }
    
    private void initFields() {
      id_ = 0;
      deviceId_ = 0;
      device_ = mrtech.smarthome.rpc.Models.Device.getDefaultInstance();
      type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
      primaryAlarm_ = false;
      secondaryAlarm_ = false;
      tamper_ = false;
      lowBattery_ = false;
      supervisionReport_ = false;
      restoreReport_ = false;
      trouble_ = false;
      mainsFault_ = false;
      testMode_ = false;
      batteryDefect_ = false;
      lackOfSupervisionReport_ = false;
      lastActivity_ = 0;
      bypassed_ = false;
      armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (hasDevice()) {
        if (!getDevice().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, device_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, primaryAlarm_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, secondaryAlarm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, tamper_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, lowBattery_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, supervisionReport_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, restoreReport_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, trouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, mainsFault_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBool(13, testMode_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, batteryDefect_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, lackOfSupervisionReport_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, lastActivity_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, bypassed_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeEnum(18, armGroup_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, deviceId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, device_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, primaryAlarm_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, secondaryAlarm_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, tamper_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, lowBattery_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, supervisionReport_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, restoreReport_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, trouble_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, mainsFault_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, testMode_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, batteryDefect_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, lackOfSupervisionReport_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, lastActivity_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, bypassed_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, armGroup_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.IasZone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.IasZone prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.IasZoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_IasZone_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_IasZone_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.IasZone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDeviceFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (deviceBuilder_ == null) {
          device_ = mrtech.smarthome.rpc.Models.Device.getDefaultInstance();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
        bitField0_ = (bitField0_ & ~0x00000008);
        primaryAlarm_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        secondaryAlarm_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        tamper_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        lowBattery_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        supervisionReport_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        restoreReport_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        trouble_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        mainsFault_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        testMode_ = false;
        bitField0_ = (bitField0_ & ~0x00001000);
        batteryDefect_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        lackOfSupervisionReport_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        lastActivity_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        bypassed_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.IasZone.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.IasZone getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.IasZone.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.IasZone build() {
        mrtech.smarthome.rpc.Models.IasZone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.IasZone buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.IasZone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.IasZone buildPartial() {
        mrtech.smarthome.rpc.Models.IasZone result = new mrtech.smarthome.rpc.Models.IasZone(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceId_ = deviceId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (deviceBuilder_ == null) {
          result.device_ = device_;
        } else {
          result.device_ = deviceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.primaryAlarm_ = primaryAlarm_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.secondaryAlarm_ = secondaryAlarm_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tamper_ = tamper_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lowBattery_ = lowBattery_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.supervisionReport_ = supervisionReport_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.restoreReport_ = restoreReport_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.trouble_ = trouble_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.mainsFault_ = mainsFault_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.testMode_ = testMode_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.batteryDefect_ = batteryDefect_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.lackOfSupervisionReport_ = lackOfSupervisionReport_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.lastActivity_ = lastActivity_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.bypassed_ = bypassed_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.armGroup_ = armGroup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.IasZone) {
          return mergeFrom((mrtech.smarthome.rpc.Models.IasZone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.IasZone other) {
        if (other == mrtech.smarthome.rpc.Models.IasZone.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDeviceId()) {
          setDeviceId(other.getDeviceId());
        }
        if (other.hasDevice()) {
          mergeDevice(other.getDevice());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPrimaryAlarm()) {
          setPrimaryAlarm(other.getPrimaryAlarm());
        }
        if (other.hasSecondaryAlarm()) {
          setSecondaryAlarm(other.getSecondaryAlarm());
        }
        if (other.hasTamper()) {
          setTamper(other.getTamper());
        }
        if (other.hasLowBattery()) {
          setLowBattery(other.getLowBattery());
        }
        if (other.hasSupervisionReport()) {
          setSupervisionReport(other.getSupervisionReport());
        }
        if (other.hasRestoreReport()) {
          setRestoreReport(other.getRestoreReport());
        }
        if (other.hasTrouble()) {
          setTrouble(other.getTrouble());
        }
        if (other.hasMainsFault()) {
          setMainsFault(other.getMainsFault());
        }
        if (other.hasTestMode()) {
          setTestMode(other.getTestMode());
        }
        if (other.hasBatteryDefect()) {
          setBatteryDefect(other.getBatteryDefect());
        }
        if (other.hasLackOfSupervisionReport()) {
          setLackOfSupervisionReport(other.getLackOfSupervisionReport());
        }
        if (other.hasLastActivity()) {
          setLastActivity(other.getLastActivity());
        }
        if (other.hasBypassed()) {
          setBypassed(other.getBypassed());
        }
        if (other.hasArmGroup()) {
          setArmGroup(other.getArmGroup());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (hasDevice()) {
          if (!getDevice().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              deviceId_ = input.readInt32();
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.Device.Builder subBuilder = mrtech.smarthome.rpc.Models.Device.newBuilder();
              if (hasDevice()) {
                subBuilder.mergeFrom(getDevice());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setDevice(subBuilder.buildPartial());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ZoneType value = mrtech.smarthome.rpc.Models.ZoneType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              primaryAlarm_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              secondaryAlarm_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              tamper_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              lowBattery_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              supervisionReport_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              restoreReport_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              trouble_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              mainsFault_ = input.readBool();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              testMode_ = input.readBool();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              batteryDefect_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              lackOfSupervisionReport_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              lastActivity_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              bypassed_ = input.readBool();
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ArmGroup value = mrtech.smarthome.rpc.Models.ArmGroup.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(18, rawValue);
              } else {
                bitField0_ |= 0x00020000;
                armGroup_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 device_id = 2;
      private int deviceId_ ;
      public boolean hasDeviceId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getDeviceId() {
        return deviceId_;
      }
      public Builder setDeviceId(int value) {
        bitField0_ |= 0x00000002;
        deviceId_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.Device device = 3;
      private mrtech.smarthome.rpc.Models.Device device_ = mrtech.smarthome.rpc.Models.Device.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Device, mrtech.smarthome.rpc.Models.Device.Builder, mrtech.smarthome.rpc.Models.DeviceOrBuilder> deviceBuilder_;
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.Device getDevice() {
        if (deviceBuilder_ == null) {
          return device_;
        } else {
          return deviceBuilder_.getMessage();
        }
      }
      public Builder setDevice(mrtech.smarthome.rpc.Models.Device value) {
        if (deviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          device_ = value;
          onChanged();
        } else {
          deviceBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setDevice(
          mrtech.smarthome.rpc.Models.Device.Builder builderForValue) {
        if (deviceBuilder_ == null) {
          device_ = builderForValue.build();
          onChanged();
        } else {
          deviceBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeDevice(mrtech.smarthome.rpc.Models.Device value) {
        if (deviceBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              device_ != mrtech.smarthome.rpc.Models.Device.getDefaultInstance()) {
            device_ =
              mrtech.smarthome.rpc.Models.Device.newBuilder(device_).mergeFrom(value).buildPartial();
          } else {
            device_ = value;
          }
          onChanged();
        } else {
          deviceBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearDevice() {
        if (deviceBuilder_ == null) {
          device_ = mrtech.smarthome.rpc.Models.Device.getDefaultInstance();
          onChanged();
        } else {
          deviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public mrtech.smarthome.rpc.Models.Device.Builder getDeviceBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDeviceFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.DeviceOrBuilder getDeviceOrBuilder() {
        if (deviceBuilder_ != null) {
          return deviceBuilder_.getMessageOrBuilder();
        } else {
          return device_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Device, mrtech.smarthome.rpc.Models.Device.Builder, mrtech.smarthome.rpc.Models.DeviceOrBuilder> 
          getDeviceFieldBuilder() {
        if (deviceBuilder_ == null) {
          deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.Device, mrtech.smarthome.rpc.Models.Device.Builder, mrtech.smarthome.rpc.Models.DeviceOrBuilder>(
                  device_,
                  getParentForChildren(),
                  isClean());
          device_ = null;
        }
        return deviceBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.ZoneType type = 4;
      private mrtech.smarthome.rpc.Models.ZoneType type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.ZoneType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.ZoneType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
        onChanged();
        return this;
      }
      
      // optional bool primary_alarm = 5;
      private boolean primaryAlarm_ ;
      public boolean hasPrimaryAlarm() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getPrimaryAlarm() {
        return primaryAlarm_;
      }
      public Builder setPrimaryAlarm(boolean value) {
        bitField0_ |= 0x00000010;
        primaryAlarm_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrimaryAlarm() {
        bitField0_ = (bitField0_ & ~0x00000010);
        primaryAlarm_ = false;
        onChanged();
        return this;
      }
      
      // optional bool secondary_alarm = 6;
      private boolean secondaryAlarm_ ;
      public boolean hasSecondaryAlarm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getSecondaryAlarm() {
        return secondaryAlarm_;
      }
      public Builder setSecondaryAlarm(boolean value) {
        bitField0_ |= 0x00000020;
        secondaryAlarm_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondaryAlarm() {
        bitField0_ = (bitField0_ & ~0x00000020);
        secondaryAlarm_ = false;
        onChanged();
        return this;
      }
      
      // optional bool tamper = 7;
      private boolean tamper_ ;
      public boolean hasTamper() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getTamper() {
        return tamper_;
      }
      public Builder setTamper(boolean value) {
        bitField0_ |= 0x00000040;
        tamper_ = value;
        onChanged();
        return this;
      }
      public Builder clearTamper() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tamper_ = false;
        onChanged();
        return this;
      }
      
      // optional bool low_battery = 8;
      private boolean lowBattery_ ;
      public boolean hasLowBattery() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getLowBattery() {
        return lowBattery_;
      }
      public Builder setLowBattery(boolean value) {
        bitField0_ |= 0x00000080;
        lowBattery_ = value;
        onChanged();
        return this;
      }
      public Builder clearLowBattery() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lowBattery_ = false;
        onChanged();
        return this;
      }
      
      // optional bool supervision_report = 9;
      private boolean supervisionReport_ ;
      public boolean hasSupervisionReport() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getSupervisionReport() {
        return supervisionReport_;
      }
      public Builder setSupervisionReport(boolean value) {
        bitField0_ |= 0x00000100;
        supervisionReport_ = value;
        onChanged();
        return this;
      }
      public Builder clearSupervisionReport() {
        bitField0_ = (bitField0_ & ~0x00000100);
        supervisionReport_ = false;
        onChanged();
        return this;
      }
      
      // optional bool restore_report = 10;
      private boolean restoreReport_ ;
      public boolean hasRestoreReport() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public boolean getRestoreReport() {
        return restoreReport_;
      }
      public Builder setRestoreReport(boolean value) {
        bitField0_ |= 0x00000200;
        restoreReport_ = value;
        onChanged();
        return this;
      }
      public Builder clearRestoreReport() {
        bitField0_ = (bitField0_ & ~0x00000200);
        restoreReport_ = false;
        onChanged();
        return this;
      }
      
      // optional bool trouble = 11;
      private boolean trouble_ ;
      public boolean hasTrouble() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public boolean getTrouble() {
        return trouble_;
      }
      public Builder setTrouble(boolean value) {
        bitField0_ |= 0x00000400;
        trouble_ = value;
        onChanged();
        return this;
      }
      public Builder clearTrouble() {
        bitField0_ = (bitField0_ & ~0x00000400);
        trouble_ = false;
        onChanged();
        return this;
      }
      
      // optional bool mains_fault = 12;
      private boolean mainsFault_ ;
      public boolean hasMainsFault() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public boolean getMainsFault() {
        return mainsFault_;
      }
      public Builder setMainsFault(boolean value) {
        bitField0_ |= 0x00000800;
        mainsFault_ = value;
        onChanged();
        return this;
      }
      public Builder clearMainsFault() {
        bitField0_ = (bitField0_ & ~0x00000800);
        mainsFault_ = false;
        onChanged();
        return this;
      }
      
      // optional bool test_mode = 13;
      private boolean testMode_ ;
      public boolean hasTestMode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public boolean getTestMode() {
        return testMode_;
      }
      public Builder setTestMode(boolean value) {
        bitField0_ |= 0x00001000;
        testMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearTestMode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        testMode_ = false;
        onChanged();
        return this;
      }
      
      // optional bool battery_defect = 14;
      private boolean batteryDefect_ ;
      public boolean hasBatteryDefect() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public boolean getBatteryDefect() {
        return batteryDefect_;
      }
      public Builder setBatteryDefect(boolean value) {
        bitField0_ |= 0x00002000;
        batteryDefect_ = value;
        onChanged();
        return this;
      }
      public Builder clearBatteryDefect() {
        bitField0_ = (bitField0_ & ~0x00002000);
        batteryDefect_ = false;
        onChanged();
        return this;
      }
      
      // optional bool lack_of_supervision_report = 15;
      private boolean lackOfSupervisionReport_ ;
      public boolean hasLackOfSupervisionReport() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getLackOfSupervisionReport() {
        return lackOfSupervisionReport_;
      }
      public Builder setLackOfSupervisionReport(boolean value) {
        bitField0_ |= 0x00004000;
        lackOfSupervisionReport_ = value;
        onChanged();
        return this;
      }
      public Builder clearLackOfSupervisionReport() {
        bitField0_ = (bitField0_ & ~0x00004000);
        lackOfSupervisionReport_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 last_activity = 16;
      private int lastActivity_ ;
      public boolean hasLastActivity() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getLastActivity() {
        return lastActivity_;
      }
      public Builder setLastActivity(int value) {
        bitField0_ |= 0x00008000;
        lastActivity_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastActivity() {
        bitField0_ = (bitField0_ & ~0x00008000);
        lastActivity_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool bypassed = 17;
      private boolean bypassed_ ;
      public boolean hasBypassed() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public boolean getBypassed() {
        return bypassed_;
      }
      public Builder setBypassed(boolean value) {
        bitField0_ |= 0x00010000;
        bypassed_ = value;
        onChanged();
        return this;
      }
      public Builder clearBypassed() {
        bitField0_ = (bitField0_ & ~0x00010000);
        bypassed_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 18;
      private mrtech.smarthome.rpc.Models.ArmGroup armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
      public boolean hasArmGroup() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public mrtech.smarthome.rpc.Models.ArmGroup getArmGroup() {
        return armGroup_;
      }
      public Builder setArmGroup(mrtech.smarthome.rpc.Models.ArmGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00020000;
        armGroup_ = value;
        onChanged();
        return this;
      }
      public Builder clearArmGroup() {
        bitField0_ = (bitField0_ & ~0x00020000);
        armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.IasZone)
    }
    
    static {
      defaultInstance = new IasZone(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.IasZone)
  }
  
  public interface CieConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.ArmMode arm_mode = 1;
    boolean hasArmMode();
    mrtech.smarthome.rpc.Models.ArmMode getArmMode();
    
    // optional int32 supervision_timeout = 2;
    boolean hasSupervisionTimeout();
    int getSupervisionTimeout();
    
    // optional int32 restore_timeout = 3;
    boolean hasRestoreTimeout();
    int getRestoreTimeout();
    
    // optional int32 entry_delay = 4;
    boolean hasEntryDelay();
    int getEntryDelay();
    
    // optional int32 exit_delay = 5;
    boolean hasExitDelay();
    int getExitDelay();
    
    // optional string passcode = 6;
    boolean hasPasscode();
    String getPasscode();
  }
  public static final class CieConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements CieConfigurationOrBuilder {
    // Use CieConfiguration.newBuilder() to construct.
    private CieConfiguration(Builder builder) {
      super(builder);
    }
    private CieConfiguration(boolean noInit) {}
    
    private static final CieConfiguration defaultInstance;
    public static CieConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public CieConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CieConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CieConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.ArmMode arm_mode = 1;
    public static final int ARM_MODE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.ArmMode armMode_;
    public boolean hasArmMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.ArmMode getArmMode() {
      return armMode_;
    }
    
    // optional int32 supervision_timeout = 2;
    public static final int SUPERVISION_TIMEOUT_FIELD_NUMBER = 2;
    private int supervisionTimeout_;
    public boolean hasSupervisionTimeout() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSupervisionTimeout() {
      return supervisionTimeout_;
    }
    
    // optional int32 restore_timeout = 3;
    public static final int RESTORE_TIMEOUT_FIELD_NUMBER = 3;
    private int restoreTimeout_;
    public boolean hasRestoreTimeout() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getRestoreTimeout() {
      return restoreTimeout_;
    }
    
    // optional int32 entry_delay = 4;
    public static final int ENTRY_DELAY_FIELD_NUMBER = 4;
    private int entryDelay_;
    public boolean hasEntryDelay() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getEntryDelay() {
      return entryDelay_;
    }
    
    // optional int32 exit_delay = 5;
    public static final int EXIT_DELAY_FIELD_NUMBER = 5;
    private int exitDelay_;
    public boolean hasExitDelay() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getExitDelay() {
      return exitDelay_;
    }
    
    // optional string passcode = 6;
    public static final int PASSCODE_FIELD_NUMBER = 6;
    private java.lang.Object passcode_;
    public boolean hasPasscode() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getPasscode() {
      java.lang.Object ref = passcode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passcode_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasscodeBytes() {
      java.lang.Object ref = passcode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passcode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      armMode_ = mrtech.smarthome.rpc.Models.ArmMode.ARM_MODE_DISARM;
      supervisionTimeout_ = 0;
      restoreTimeout_ = 0;
      entryDelay_ = 0;
      exitDelay_ = 0;
      passcode_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, armMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, supervisionTimeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, restoreTimeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, entryDelay_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, exitDelay_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPasscodeBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, armMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, supervisionTimeout_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, restoreTimeout_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, entryDelay_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, exitDelay_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPasscodeBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CieConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CieConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CieConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CieConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CieConfiguration_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CieConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        armMode_ = mrtech.smarthome.rpc.Models.ArmMode.ARM_MODE_DISARM;
        bitField0_ = (bitField0_ & ~0x00000001);
        supervisionTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        restoreTimeout_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        entryDelay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        exitDelay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        passcode_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CieConfiguration.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CieConfiguration getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CieConfiguration.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CieConfiguration build() {
        mrtech.smarthome.rpc.Models.CieConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CieConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CieConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CieConfiguration buildPartial() {
        mrtech.smarthome.rpc.Models.CieConfiguration result = new mrtech.smarthome.rpc.Models.CieConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.armMode_ = armMode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.supervisionTimeout_ = supervisionTimeout_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.restoreTimeout_ = restoreTimeout_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.entryDelay_ = entryDelay_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.exitDelay_ = exitDelay_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.passcode_ = passcode_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CieConfiguration) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CieConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CieConfiguration other) {
        if (other == mrtech.smarthome.rpc.Models.CieConfiguration.getDefaultInstance()) return this;
        if (other.hasArmMode()) {
          setArmMode(other.getArmMode());
        }
        if (other.hasSupervisionTimeout()) {
          setSupervisionTimeout(other.getSupervisionTimeout());
        }
        if (other.hasRestoreTimeout()) {
          setRestoreTimeout(other.getRestoreTimeout());
        }
        if (other.hasEntryDelay()) {
          setEntryDelay(other.getEntryDelay());
        }
        if (other.hasExitDelay()) {
          setExitDelay(other.getExitDelay());
        }
        if (other.hasPasscode()) {
          setPasscode(other.getPasscode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ArmMode value = mrtech.smarthome.rpc.Models.ArmMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                armMode_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              supervisionTimeout_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              restoreTimeout_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              entryDelay_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              exitDelay_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              passcode_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.ArmMode arm_mode = 1;
      private mrtech.smarthome.rpc.Models.ArmMode armMode_ = mrtech.smarthome.rpc.Models.ArmMode.ARM_MODE_DISARM;
      public boolean hasArmMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.ArmMode getArmMode() {
        return armMode_;
      }
      public Builder setArmMode(mrtech.smarthome.rpc.Models.ArmMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        armMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearArmMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        armMode_ = mrtech.smarthome.rpc.Models.ArmMode.ARM_MODE_DISARM;
        onChanged();
        return this;
      }
      
      // optional int32 supervision_timeout = 2;
      private int supervisionTimeout_ ;
      public boolean hasSupervisionTimeout() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSupervisionTimeout() {
        return supervisionTimeout_;
      }
      public Builder setSupervisionTimeout(int value) {
        bitField0_ |= 0x00000002;
        supervisionTimeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearSupervisionTimeout() {
        bitField0_ = (bitField0_ & ~0x00000002);
        supervisionTimeout_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 restore_timeout = 3;
      private int restoreTimeout_ ;
      public boolean hasRestoreTimeout() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getRestoreTimeout() {
        return restoreTimeout_;
      }
      public Builder setRestoreTimeout(int value) {
        bitField0_ |= 0x00000004;
        restoreTimeout_ = value;
        onChanged();
        return this;
      }
      public Builder clearRestoreTimeout() {
        bitField0_ = (bitField0_ & ~0x00000004);
        restoreTimeout_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 entry_delay = 4;
      private int entryDelay_ ;
      public boolean hasEntryDelay() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getEntryDelay() {
        return entryDelay_;
      }
      public Builder setEntryDelay(int value) {
        bitField0_ |= 0x00000008;
        entryDelay_ = value;
        onChanged();
        return this;
      }
      public Builder clearEntryDelay() {
        bitField0_ = (bitField0_ & ~0x00000008);
        entryDelay_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 exit_delay = 5;
      private int exitDelay_ ;
      public boolean hasExitDelay() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getExitDelay() {
        return exitDelay_;
      }
      public Builder setExitDelay(int value) {
        bitField0_ |= 0x00000010;
        exitDelay_ = value;
        onChanged();
        return this;
      }
      public Builder clearExitDelay() {
        bitField0_ = (bitField0_ & ~0x00000010);
        exitDelay_ = 0;
        onChanged();
        return this;
      }
      
      // optional string passcode = 6;
      private java.lang.Object passcode_ = "";
      public boolean hasPasscode() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getPasscode() {
        java.lang.Object ref = passcode_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passcode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPasscode(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        passcode_ = value;
        onChanged();
        return this;
      }
      public Builder clearPasscode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        passcode_ = getDefaultInstance().getPasscode();
        onChanged();
        return this;
      }
      void setPasscode(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        passcode_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CieConfiguration)
    }
    
    static {
      defaultInstance = new CieConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CieConfiguration)
  }
  
  public interface DeviceQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.DeviceType type = 1;
    boolean hasType();
    mrtech.smarthome.rpc.Models.DeviceType getType();
    
    // optional string alias = 2;
    boolean hasAlias();
    String getAlias();
    
    // optional bool filter_by_group = 3;
    boolean hasFilterByGroup();
    boolean getFilterByGroup();
    
    // optional int32 group_id = 4;
    boolean hasGroupId();
    int getGroupId();
    
    // optional int32 page = 5;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 6;
    boolean hasPageSize();
    int getPageSize();
    
    // repeated .mrtech.smarthome.rpc.DeviceId device_ids = 7;
    java.util.List<mrtech.smarthome.rpc.Models.DeviceId> getDeviceIdsList();
    int getDeviceIdsCount();
    mrtech.smarthome.rpc.Models.DeviceId getDeviceIds(int index);
  }
  public static final class DeviceQuery extends
      com.google.protobuf.GeneratedMessage
      implements DeviceQueryOrBuilder {
    // Use DeviceQuery.newBuilder() to construct.
    private DeviceQuery(Builder builder) {
      super(builder);
    }
    private DeviceQuery(boolean noInit) {}
    
    private static final DeviceQuery defaultInstance;
    public static DeviceQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeviceQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.DeviceType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.DeviceType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.DeviceType getType() {
      return type_;
    }
    
    // optional string alias = 2;
    public static final int ALIAS_FIELD_NUMBER = 2;
    private java.lang.Object alias_;
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          alias_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool filter_by_group = 3;
    public static final int FILTER_BY_GROUP_FIELD_NUMBER = 3;
    private boolean filterByGroup_;
    public boolean hasFilterByGroup() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getFilterByGroup() {
      return filterByGroup_;
    }
    
    // optional int32 group_id = 4;
    public static final int GROUP_ID_FIELD_NUMBER = 4;
    private int groupId_;
    public boolean hasGroupId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getGroupId() {
      return groupId_;
    }
    
    // optional int32 page = 5;
    public static final int PAGE_FIELD_NUMBER = 5;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 6;
    public static final int PAGE_SIZE_FIELD_NUMBER = 6;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    // repeated .mrtech.smarthome.rpc.DeviceId device_ids = 7;
    public static final int DEVICE_IDS_FIELD_NUMBER = 7;
    private java.util.List<mrtech.smarthome.rpc.Models.DeviceId> deviceIds_;
    public java.util.List<mrtech.smarthome.rpc.Models.DeviceId> getDeviceIdsList() {
      return deviceIds_;
    }
    public int getDeviceIdsCount() {
      return deviceIds_.size();
    }
    public mrtech.smarthome.rpc.Models.DeviceId getDeviceIds(int index) {
      return deviceIds_.get(index);
    }
    
    private void initFields() {
      type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
      alias_ = "";
      filterByGroup_ = false;
      groupId_ = 0;
      page_ = 0;
      pageSize_ = 0;
      deviceIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAliasBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, filterByGroup_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, page_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, pageSize_);
      }
      for (int i = 0; i < deviceIds_.size(); i++) {
        output.writeEnum(7, deviceIds_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAliasBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, filterByGroup_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, groupId_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, page_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, pageSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < deviceIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(deviceIds_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * deviceIds_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.DeviceQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.DeviceQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.DeviceQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        filterByGroup_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        groupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        deviceIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.DeviceQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.DeviceQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.DeviceQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.DeviceQuery build() {
        mrtech.smarthome.rpc.Models.DeviceQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.DeviceQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.DeviceQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.DeviceQuery buildPartial() {
        mrtech.smarthome.rpc.Models.DeviceQuery result = new mrtech.smarthome.rpc.Models.DeviceQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.filterByGroup_ = filterByGroup_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupId_ = groupId_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.pageSize_ = pageSize_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          deviceIds_ = java.util.Collections.unmodifiableList(deviceIds_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.deviceIds_ = deviceIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.DeviceQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.DeviceQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.DeviceQuery other) {
        if (other == mrtech.smarthome.rpc.Models.DeviceQuery.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAlias()) {
          setAlias(other.getAlias());
        }
        if (other.hasFilterByGroup()) {
          setFilterByGroup(other.getFilterByGroup());
        }
        if (other.hasGroupId()) {
          setGroupId(other.getGroupId());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        if (!other.deviceIds_.isEmpty()) {
          if (deviceIds_.isEmpty()) {
            deviceIds_ = other.deviceIds_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureDeviceIdsIsMutable();
            deviceIds_.addAll(other.deviceIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.DeviceType value = mrtech.smarthome.rpc.Models.DeviceType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              alias_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              filterByGroup_ = input.readBool();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              groupId_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              page_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              pageSize_ = input.readInt32();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.DeviceId value = mrtech.smarthome.rpc.Models.DeviceId.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                addDeviceIds(value);
              }
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                mrtech.smarthome.rpc.Models.DeviceId value = mrtech.smarthome.rpc.Models.DeviceId.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  addDeviceIds(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.DeviceType type = 1;
      private mrtech.smarthome.rpc.Models.DeviceType type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.DeviceType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.DeviceType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = mrtech.smarthome.rpc.Models.DeviceType.DEVICE_TYPE_ZIGBEE;
        onChanged();
        return this;
      }
      
      // optional string alias = 2;
      private java.lang.Object alias_ = "";
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAlias(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        alias_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000002);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      void setAlias(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        alias_ = value;
        onChanged();
      }
      
      // optional bool filter_by_group = 3;
      private boolean filterByGroup_ ;
      public boolean hasFilterByGroup() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getFilterByGroup() {
        return filterByGroup_;
      }
      public Builder setFilterByGroup(boolean value) {
        bitField0_ |= 0x00000004;
        filterByGroup_ = value;
        onChanged();
        return this;
      }
      public Builder clearFilterByGroup() {
        bitField0_ = (bitField0_ & ~0x00000004);
        filterByGroup_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 group_id = 4;
      private int groupId_ ;
      public boolean hasGroupId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getGroupId() {
        return groupId_;
      }
      public Builder setGroupId(int value) {
        bitField0_ |= 0x00000008;
        groupId_ = value;
        onChanged();
        return this;
      }
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        groupId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page = 5;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000010;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000010);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 6;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000020;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // repeated .mrtech.smarthome.rpc.DeviceId device_ids = 7;
      private java.util.List<mrtech.smarthome.rpc.Models.DeviceId> deviceIds_ =
        java.util.Collections.emptyList();
      private void ensureDeviceIdsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          deviceIds_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.DeviceId>(deviceIds_);
          bitField0_ |= 0x00000040;
        }
      }
      public java.util.List<mrtech.smarthome.rpc.Models.DeviceId> getDeviceIdsList() {
        return java.util.Collections.unmodifiableList(deviceIds_);
      }
      public int getDeviceIdsCount() {
        return deviceIds_.size();
      }
      public mrtech.smarthome.rpc.Models.DeviceId getDeviceIds(int index) {
        return deviceIds_.get(index);
      }
      public Builder setDeviceIds(
          int index, mrtech.smarthome.rpc.Models.DeviceId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeviceIdsIsMutable();
        deviceIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDeviceIds(mrtech.smarthome.rpc.Models.DeviceId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeviceIdsIsMutable();
        deviceIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDeviceIds(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.DeviceId> values) {
        ensureDeviceIdsIsMutable();
        super.addAll(values, deviceIds_);
        onChanged();
        return this;
      }
      public Builder clearDeviceIds() {
        deviceIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.DeviceQuery)
    }
    
    static {
      defaultInstance = new DeviceQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.DeviceQuery)
  }
  
  public interface ZoneQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.ZoneType type = 1;
    boolean hasType();
    mrtech.smarthome.rpc.Models.ZoneType getType();
    
    // optional int32 page = 3;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 4;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class ZoneQuery extends
      com.google.protobuf.GeneratedMessage
      implements ZoneQueryOrBuilder {
    // Use ZoneQuery.newBuilder() to construct.
    private ZoneQuery(Builder builder) {
      super(builder);
    }
    private ZoneQuery(boolean noInit) {}
    
    private static final ZoneQuery defaultInstance;
    public static ZoneQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public ZoneQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZoneQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZoneQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.ZoneType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.ZoneType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.ZoneType getType() {
      return type_;
    }
    
    // optional int32 page = 3;
    public static final int PAGE_FIELD_NUMBER = 3;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 4;
    public static final int PAGE_SIZE_FIELD_NUMBER = 4;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ZoneQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.ZoneQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.ZoneQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZoneQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ZoneQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.ZoneQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
        bitField0_ = (bitField0_ & ~0x00000001);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.ZoneQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.ZoneQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.ZoneQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.ZoneQuery build() {
        mrtech.smarthome.rpc.Models.ZoneQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.ZoneQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.ZoneQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.ZoneQuery buildPartial() {
        mrtech.smarthome.rpc.Models.ZoneQuery result = new mrtech.smarthome.rpc.Models.ZoneQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.ZoneQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.ZoneQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.ZoneQuery other) {
        if (other == mrtech.smarthome.rpc.Models.ZoneQuery.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ZoneType value = mrtech.smarthome.rpc.Models.ZoneType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              page_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.ZoneType type = 1;
      private mrtech.smarthome.rpc.Models.ZoneType type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.ZoneType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.ZoneType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = mrtech.smarthome.rpc.Models.ZoneType.ZONE_TYPE_STANDARD_CIE;
        onChanged();
        return this;
      }
      
      // optional int32 page = 3;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000002;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 4;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000004;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.ZoneQuery)
    }
    
    static {
      defaultInstance = new ZoneQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.ZoneQuery)
  }
  
  public interface TimelineOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int64 timestamp = 2;
    boolean hasTimestamp();
    long getTimestamp();
    
    // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
    boolean hasLevel();
    mrtech.smarthome.rpc.Models.TimelineLevel getLevel();
    
    // optional .mrtech.smarthome.rpc.TimelineType type = 4;
    boolean hasType();
    mrtech.smarthome.rpc.Models.TimelineType getType();
    
    // optional string parameter = 5;
    boolean hasParameter();
    String getParameter();
  }
  public static final class Timeline extends
      com.google.protobuf.GeneratedMessage
      implements TimelineOrBuilder {
    // Use Timeline.newBuilder() to construct.
    private Timeline(Builder builder) {
      super(builder);
    }
    private Timeline(boolean noInit) {}
    
    private static final Timeline defaultInstance;
    public static Timeline getDefaultInstance() {
      return defaultInstance;
    }
    
    public Timeline getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Timeline_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Timeline_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int64 timestamp = 2;
    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTimestamp() {
      return timestamp_;
    }
    
    // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.TimelineLevel level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.TimelineLevel getLevel() {
      return level_;
    }
    
    // optional .mrtech.smarthome.rpc.TimelineType type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.TimelineType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.TimelineType getType() {
      return type_;
    }
    
    // optional string parameter = 5;
    public static final int PARAMETER_FIELD_NUMBER = 5;
    private java.lang.Object parameter_;
    public boolean hasParameter() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getParameter() {
      java.lang.Object ref = parameter_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          parameter_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getParameterBytes() {
      java.lang.Object ref = parameter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        parameter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0;
      timestamp_ = 0L;
      level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
      parameter_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, level_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getParameterBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, timestamp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, level_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getParameterBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Timeline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Timeline prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.TimelineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Timeline_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Timeline_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Timeline.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
        bitField0_ = (bitField0_ & ~0x00000008);
        parameter_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Timeline.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Timeline getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Timeline.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Timeline build() {
        mrtech.smarthome.rpc.Models.Timeline result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Timeline buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Timeline result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Timeline buildPartial() {
        mrtech.smarthome.rpc.Models.Timeline result = new mrtech.smarthome.rpc.Models.Timeline(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.parameter_ = parameter_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Timeline) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Timeline)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Timeline other) {
        if (other == mrtech.smarthome.rpc.Models.Timeline.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasParameter()) {
          setParameter(other.getParameter());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              timestamp_ = input.readInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.TimelineLevel value = mrtech.smarthome.rpc.Models.TimelineLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                level_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.TimelineType value = mrtech.smarthome.rpc.Models.TimelineType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              parameter_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 timestamp = 2;
      private long timestamp_ ;
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTimestamp() {
        return timestamp_;
      }
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000002;
        timestamp_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        timestamp_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
      private mrtech.smarthome.rpc.Models.TimelineLevel level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.TimelineLevel getLevel() {
        return level_;
      }
      public Builder setLevel(mrtech.smarthome.rpc.Models.TimelineLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.TimelineType type = 4;
      private mrtech.smarthome.rpc.Models.TimelineType type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.TimelineType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.TimelineType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
        onChanged();
        return this;
      }
      
      // optional string parameter = 5;
      private java.lang.Object parameter_ = "";
      public boolean hasParameter() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getParameter() {
        java.lang.Object ref = parameter_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          parameter_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setParameter(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        parameter_ = value;
        onChanged();
        return this;
      }
      public Builder clearParameter() {
        bitField0_ = (bitField0_ & ~0x00000010);
        parameter_ = getDefaultInstance().getParameter();
        onChanged();
        return this;
      }
      void setParameter(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        parameter_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Timeline)
    }
    
    static {
      defaultInstance = new Timeline(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Timeline)
  }
  
  public interface CameraDeviceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string device_name = 2;
    boolean hasDeviceName();
    String getDeviceName();
    
    // optional string deviceid = 3;
    boolean hasDeviceid();
    String getDeviceid();
    
    // optional string ip_address = 4;
    boolean hasIpAddress();
    String getIpAddress();
    
    // optional int32 port = 5;
    boolean hasPort();
    int getPort();
    
    // optional string user = 6;
    boolean hasUser();
    String getUser();
    
    // optional string password = 7;
    boolean hasPassword();
    String getPassword();
    
    // optional string new_user = 8;
    boolean hasNewUser();
    String getNewUser();
    
    // optional string new_password = 9;
    boolean hasNewPassword();
    String getNewPassword();
    
    // optional bool is_online = 10;
    boolean hasIsOnline();
    boolean getIsOnline();
    
    // optional bool local_record_enabled = 11;
    boolean hasLocalRecordEnabled();
    boolean getLocalRecordEnabled();
    
    // optional bool bypassed = 12;
    boolean hasBypassed();
    boolean getBypassed();
    
    // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 13;
    boolean hasArmGroup();
    mrtech.smarthome.rpc.Models.ArmGroup getArmGroup();
    
    // optional bool motion_alarm = 14;
    boolean hasMotionAlarm();
    boolean getMotionAlarm();
    
    // optional bool is_connected = 15;
    boolean hasIsConnected();
    boolean getIsConnected();
    
    // optional uint64 last_seen = 16;
    boolean hasLastSeen();
    long getLastSeen();
    
    // optional bool authentication_error = 17;
    boolean hasAuthenticationError();
    boolean getAuthenticationError();
  }
  public static final class CameraDevice extends
      com.google.protobuf.GeneratedMessage
      implements CameraDeviceOrBuilder {
    // Use CameraDevice.newBuilder() to construct.
    private CameraDevice(Builder builder) {
      super(builder);
    }
    private CameraDevice(boolean noInit) {}
    
    private static final CameraDevice defaultInstance;
    public static CameraDevice getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraDevice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraDevice_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraDevice_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string device_name = 2;
    public static final int DEVICE_NAME_FIELD_NUMBER = 2;
    private java.lang.Object deviceName_;
    public boolean hasDeviceName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDeviceName() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          deviceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDeviceNameBytes() {
      java.lang.Object ref = deviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        deviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string deviceid = 3;
    public static final int DEVICEID_FIELD_NUMBER = 3;
    private java.lang.Object deviceid_;
    public boolean hasDeviceid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getDeviceid() {
      java.lang.Object ref = deviceid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          deviceid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDeviceidBytes() {
      java.lang.Object ref = deviceid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        deviceid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string ip_address = 4;
    public static final int IP_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.Object ipAddress_;
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getPort() {
      return port_;
    }
    
    // optional string user = 6;
    public static final int USER_FIELD_NUMBER = 6;
    private java.lang.Object user_;
    public boolean hasUser() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          user_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string password = 7;
    public static final int PASSWORD_FIELD_NUMBER = 7;
    private java.lang.Object password_;
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          password_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string new_user = 8;
    public static final int NEW_USER_FIELD_NUMBER = 8;
    private java.lang.Object newUser_;
    public boolean hasNewUser() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getNewUser() {
      java.lang.Object ref = newUser_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          newUser_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNewUserBytes() {
      java.lang.Object ref = newUser_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        newUser_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string new_password = 9;
    public static final int NEW_PASSWORD_FIELD_NUMBER = 9;
    private java.lang.Object newPassword_;
    public boolean hasNewPassword() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getNewPassword() {
      java.lang.Object ref = newPassword_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          newPassword_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNewPasswordBytes() {
      java.lang.Object ref = newPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        newPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool is_online = 10;
    public static final int IS_ONLINE_FIELD_NUMBER = 10;
    private boolean isOnline_;
    public boolean hasIsOnline() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public boolean getIsOnline() {
      return isOnline_;
    }
    
    // optional bool local_record_enabled = 11;
    public static final int LOCAL_RECORD_ENABLED_FIELD_NUMBER = 11;
    private boolean localRecordEnabled_;
    public boolean hasLocalRecordEnabled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public boolean getLocalRecordEnabled() {
      return localRecordEnabled_;
    }
    
    // optional bool bypassed = 12;
    public static final int BYPASSED_FIELD_NUMBER = 12;
    private boolean bypassed_;
    public boolean hasBypassed() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public boolean getBypassed() {
      return bypassed_;
    }
    
    // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 13;
    public static final int ARM_GROUP_FIELD_NUMBER = 13;
    private mrtech.smarthome.rpc.Models.ArmGroup armGroup_;
    public boolean hasArmGroup() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public mrtech.smarthome.rpc.Models.ArmGroup getArmGroup() {
      return armGroup_;
    }
    
    // optional bool motion_alarm = 14;
    public static final int MOTION_ALARM_FIELD_NUMBER = 14;
    private boolean motionAlarm_;
    public boolean hasMotionAlarm() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public boolean getMotionAlarm() {
      return motionAlarm_;
    }
    
    // optional bool is_connected = 15;
    public static final int IS_CONNECTED_FIELD_NUMBER = 15;
    private boolean isConnected_;
    public boolean hasIsConnected() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getIsConnected() {
      return isConnected_;
    }
    
    // optional uint64 last_seen = 16;
    public static final int LAST_SEEN_FIELD_NUMBER = 16;
    private long lastSeen_;
    public boolean hasLastSeen() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public long getLastSeen() {
      return lastSeen_;
    }
    
    // optional bool authentication_error = 17;
    public static final int AUTHENTICATION_ERROR_FIELD_NUMBER = 17;
    private boolean authenticationError_;
    public boolean hasAuthenticationError() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public boolean getAuthenticationError() {
      return authenticationError_;
    }
    
    private void initFields() {
      id_ = 0;
      deviceName_ = "";
      deviceid_ = "";
      ipAddress_ = "";
      port_ = 0;
      user_ = "";
      password_ = "";
      newUser_ = "";
      newPassword_ = "";
      isOnline_ = false;
      localRecordEnabled_ = false;
      bypassed_ = false;
      armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
      motionAlarm_ = false;
      isConnected_ = false;
      lastSeen_ = 0L;
      authenticationError_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getDeviceidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, port_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getUserBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getNewUserBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getNewPasswordBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, isOnline_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, localRecordEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBool(12, bypassed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(13, armGroup_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, motionAlarm_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, isConnected_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt64(16, lastSeen_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, authenticationError_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getDeviceidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, port_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getUserBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getNewUserBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNewPasswordBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, isOnline_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, localRecordEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, bypassed_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, armGroup_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, motionAlarm_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, isConnected_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(16, lastSeen_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, authenticationError_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraDevice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraDeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraDevice_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraDevice_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraDevice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        user_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        newUser_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        newPassword_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        isOnline_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        localRecordEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        bypassed_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
        bitField0_ = (bitField0_ & ~0x00001000);
        motionAlarm_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        isConnected_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        lastSeen_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        authenticationError_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraDevice.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraDevice getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraDevice.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraDevice build() {
        mrtech.smarthome.rpc.Models.CameraDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraDevice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraDevice buildPartial() {
        mrtech.smarthome.rpc.Models.CameraDevice result = new mrtech.smarthome.rpc.Models.CameraDevice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceName_ = deviceName_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.deviceid_ = deviceid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ipAddress_ = ipAddress_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.user_ = user_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.newUser_ = newUser_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.newPassword_ = newPassword_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isOnline_ = isOnline_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.localRecordEnabled_ = localRecordEnabled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bypassed_ = bypassed_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.armGroup_ = armGroup_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.motionAlarm_ = motionAlarm_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.isConnected_ = isConnected_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.lastSeen_ = lastSeen_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.authenticationError_ = authenticationError_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraDevice) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraDevice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraDevice other) {
        if (other == mrtech.smarthome.rpc.Models.CameraDevice.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasDeviceName()) {
          setDeviceName(other.getDeviceName());
        }
        if (other.hasDeviceid()) {
          setDeviceid(other.getDeviceid());
        }
        if (other.hasIpAddress()) {
          setIpAddress(other.getIpAddress());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasUser()) {
          setUser(other.getUser());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasNewUser()) {
          setNewUser(other.getNewUser());
        }
        if (other.hasNewPassword()) {
          setNewPassword(other.getNewPassword());
        }
        if (other.hasIsOnline()) {
          setIsOnline(other.getIsOnline());
        }
        if (other.hasLocalRecordEnabled()) {
          setLocalRecordEnabled(other.getLocalRecordEnabled());
        }
        if (other.hasBypassed()) {
          setBypassed(other.getBypassed());
        }
        if (other.hasArmGroup()) {
          setArmGroup(other.getArmGroup());
        }
        if (other.hasMotionAlarm()) {
          setMotionAlarm(other.getMotionAlarm());
        }
        if (other.hasIsConnected()) {
          setIsConnected(other.getIsConnected());
        }
        if (other.hasLastSeen()) {
          setLastSeen(other.getLastSeen());
        }
        if (other.hasAuthenticationError()) {
          setAuthenticationError(other.getAuthenticationError());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              deviceName_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              deviceid_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ipAddress_ = input.readBytes();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              port_ = input.readInt32();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              user_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              password_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              newUser_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              newPassword_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              isOnline_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              localRecordEnabled_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bypassed_ = input.readBool();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ArmGroup value = mrtech.smarthome.rpc.Models.ArmGroup.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(13, rawValue);
              } else {
                bitField0_ |= 0x00001000;
                armGroup_ = value;
              }
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              motionAlarm_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              isConnected_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              lastSeen_ = input.readUInt64();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              authenticationError_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string device_name = 2;
      private java.lang.Object deviceName_ = "";
      public boolean hasDeviceName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDeviceName() {
        java.lang.Object ref = deviceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          deviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDeviceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceName_ = getDefaultInstance().getDeviceName();
        onChanged();
        return this;
      }
      void setDeviceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        deviceName_ = value;
        onChanged();
      }
      
      // optional string deviceid = 3;
      private java.lang.Object deviceid_ = "";
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getDeviceid() {
        java.lang.Object ref = deviceid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          deviceid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDeviceid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        deviceid_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        deviceid_ = getDefaultInstance().getDeviceid();
        onChanged();
        return this;
      }
      void setDeviceid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        deviceid_ = value;
        onChanged();
      }
      
      // optional string ip_address = 4;
      private java.lang.Object ipAddress_ = "";
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      void setIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ipAddress_ = value;
        onChanged();
      }
      
      // optional int32 port = 5;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000010;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // optional string user = 6;
      private java.lang.Object user_ = "";
      public boolean hasUser() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUser(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        user_ = value;
        onChanged();
        return this;
      }
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000020);
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      void setUser(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        user_ = value;
        onChanged();
      }
      
      // optional string password = 7;
      private java.lang.Object password_ = "";
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        password_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000040);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      void setPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        password_ = value;
        onChanged();
      }
      
      // optional string new_user = 8;
      private java.lang.Object newUser_ = "";
      public boolean hasNewUser() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getNewUser() {
        java.lang.Object ref = newUser_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          newUser_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNewUser(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        newUser_ = value;
        onChanged();
        return this;
      }
      public Builder clearNewUser() {
        bitField0_ = (bitField0_ & ~0x00000080);
        newUser_ = getDefaultInstance().getNewUser();
        onChanged();
        return this;
      }
      void setNewUser(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        newUser_ = value;
        onChanged();
      }
      
      // optional string new_password = 9;
      private java.lang.Object newPassword_ = "";
      public boolean hasNewPassword() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getNewPassword() {
        java.lang.Object ref = newPassword_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          newPassword_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNewPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        newPassword_ = value;
        onChanged();
        return this;
      }
      public Builder clearNewPassword() {
        bitField0_ = (bitField0_ & ~0x00000100);
        newPassword_ = getDefaultInstance().getNewPassword();
        onChanged();
        return this;
      }
      void setNewPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        newPassword_ = value;
        onChanged();
      }
      
      // optional bool is_online = 10;
      private boolean isOnline_ ;
      public boolean hasIsOnline() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public boolean getIsOnline() {
        return isOnline_;
      }
      public Builder setIsOnline(boolean value) {
        bitField0_ |= 0x00000200;
        isOnline_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsOnline() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isOnline_ = false;
        onChanged();
        return this;
      }
      
      // optional bool local_record_enabled = 11;
      private boolean localRecordEnabled_ ;
      public boolean hasLocalRecordEnabled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public boolean getLocalRecordEnabled() {
        return localRecordEnabled_;
      }
      public Builder setLocalRecordEnabled(boolean value) {
        bitField0_ |= 0x00000400;
        localRecordEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalRecordEnabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        localRecordEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool bypassed = 12;
      private boolean bypassed_ ;
      public boolean hasBypassed() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public boolean getBypassed() {
        return bypassed_;
      }
      public Builder setBypassed(boolean value) {
        bitField0_ |= 0x00000800;
        bypassed_ = value;
        onChanged();
        return this;
      }
      public Builder clearBypassed() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bypassed_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.ArmGroup arm_group = 13;
      private mrtech.smarthome.rpc.Models.ArmGroup armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
      public boolean hasArmGroup() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public mrtech.smarthome.rpc.Models.ArmGroup getArmGroup() {
        return armGroup_;
      }
      public Builder setArmGroup(mrtech.smarthome.rpc.Models.ArmGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00001000;
        armGroup_ = value;
        onChanged();
        return this;
      }
      public Builder clearArmGroup() {
        bitField0_ = (bitField0_ & ~0x00001000);
        armGroup_ = mrtech.smarthome.rpc.Models.ArmGroup.ARM_GROUP_STAY;
        onChanged();
        return this;
      }
      
      // optional bool motion_alarm = 14;
      private boolean motionAlarm_ ;
      public boolean hasMotionAlarm() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public boolean getMotionAlarm() {
        return motionAlarm_;
      }
      public Builder setMotionAlarm(boolean value) {
        bitField0_ |= 0x00002000;
        motionAlarm_ = value;
        onChanged();
        return this;
      }
      public Builder clearMotionAlarm() {
        bitField0_ = (bitField0_ & ~0x00002000);
        motionAlarm_ = false;
        onChanged();
        return this;
      }
      
      // optional bool is_connected = 15;
      private boolean isConnected_ ;
      public boolean hasIsConnected() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getIsConnected() {
        return isConnected_;
      }
      public Builder setIsConnected(boolean value) {
        bitField0_ |= 0x00004000;
        isConnected_ = value;
        onChanged();
        return this;
      }
      public Builder clearIsConnected() {
        bitField0_ = (bitField0_ & ~0x00004000);
        isConnected_ = false;
        onChanged();
        return this;
      }
      
      // optional uint64 last_seen = 16;
      private long lastSeen_ ;
      public boolean hasLastSeen() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public long getLastSeen() {
        return lastSeen_;
      }
      public Builder setLastSeen(long value) {
        bitField0_ |= 0x00008000;
        lastSeen_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastSeen() {
        bitField0_ = (bitField0_ & ~0x00008000);
        lastSeen_ = 0L;
        onChanged();
        return this;
      }
      
      // optional bool authentication_error = 17;
      private boolean authenticationError_ ;
      public boolean hasAuthenticationError() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public boolean getAuthenticationError() {
        return authenticationError_;
      }
      public Builder setAuthenticationError(boolean value) {
        bitField0_ |= 0x00010000;
        authenticationError_ = value;
        onChanged();
        return this;
      }
      public Builder clearAuthenticationError() {
        bitField0_ = (bitField0_ & ~0x00010000);
        authenticationError_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraDevice)
    }
    
    static {
      defaultInstance = new CameraDevice(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraDevice)
    public static final int DETAIL_FIELD_NUMBER = 257;
    public static final
      com.google.protobuf.GeneratedMessage.GeneratedExtension<
        mrtech.smarthome.rpc.Models.Device,
        mrtech.smarthome.rpc.Models.CameraDevice> detail = com.google.protobuf.GeneratedMessage
            .newMessageScopedGeneratedExtension(
          mrtech.smarthome.rpc.Models.CameraDevice.getDefaultInstance(),
          0,
          mrtech.smarthome.rpc.Models.CameraDevice.class,
          mrtech.smarthome.rpc.Models.CameraDevice.getDefaultInstance());
  }
  
  public interface CameraInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.CameraStatus status = 1;
    boolean hasStatus();
    mrtech.smarthome.rpc.Models.CameraStatus getStatus();
    mrtech.smarthome.rpc.Models.CameraStatusOrBuilder getStatusOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraParam param = 2;
    boolean hasParam();
    mrtech.smarthome.rpc.Models.CameraParam getParam();
    mrtech.smarthome.rpc.Models.CameraParamOrBuilder getParamOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraRecordConfiguration record = 3;
    boolean hasRecord();
    mrtech.smarthome.rpc.Models.CameraRecordConfiguration getRecord();
    mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder getRecordOrBuilder();
  }
  public static final class CameraInfo extends
      com.google.protobuf.GeneratedMessage
      implements CameraInfoOrBuilder {
    // Use CameraInfo.newBuilder() to construct.
    private CameraInfo(Builder builder) {
      super(builder);
    }
    private CameraInfo(boolean noInit) {}
    
    private static final CameraInfo defaultInstance;
    public static CameraInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.CameraStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.CameraStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.CameraStatus getStatus() {
      return status_;
    }
    public mrtech.smarthome.rpc.Models.CameraStatusOrBuilder getStatusOrBuilder() {
      return status_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraParam param = 2;
    public static final int PARAM_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.CameraParam param_;
    public boolean hasParam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.CameraParam getParam() {
      return param_;
    }
    public mrtech.smarthome.rpc.Models.CameraParamOrBuilder getParamOrBuilder() {
      return param_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraRecordConfiguration record = 3;
    public static final int RECORD_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.CameraRecordConfiguration record_;
    public boolean hasRecord() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.CameraRecordConfiguration getRecord() {
      return record_;
    }
    public mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder getRecordOrBuilder() {
      return record_;
    }
    
    private void initFields() {
      status_ = mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance();
      param_ = mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance();
      record_ = mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, param_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, record_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, status_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, param_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, record_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getStatusFieldBuilder();
          getParamFieldBuilder();
          getRecordFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (statusBuilder_ == null) {
          status_ = mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (paramBuilder_ == null) {
          param_ = mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance();
        } else {
          paramBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (recordBuilder_ == null) {
          record_ = mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance();
        } else {
          recordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraInfo build() {
        mrtech.smarthome.rpc.Models.CameraInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraInfo buildPartial() {
        mrtech.smarthome.rpc.Models.CameraInfo result = new mrtech.smarthome.rpc.Models.CameraInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (statusBuilder_ == null) {
          result.status_ = status_;
        } else {
          result.status_ = statusBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (paramBuilder_ == null) {
          result.param_ = param_;
        } else {
          result.param_ = paramBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (recordBuilder_ == null) {
          result.record_ = record_;
        } else {
          result.record_ = recordBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraInfo other) {
        if (other == mrtech.smarthome.rpc.Models.CameraInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          mergeStatus(other.getStatus());
        }
        if (other.hasParam()) {
          mergeParam(other.getParam());
        }
        if (other.hasRecord()) {
          mergeRecord(other.getRecord());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              mrtech.smarthome.rpc.Models.CameraStatus.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraStatus.newBuilder();
              if (hasStatus()) {
                subBuilder.mergeFrom(getStatus());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setStatus(subBuilder.buildPartial());
              break;
            }
            case 18: {
              mrtech.smarthome.rpc.Models.CameraParam.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraParam.newBuilder();
              if (hasParam()) {
                subBuilder.mergeFrom(getParam());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setParam(subBuilder.buildPartial());
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraRecordConfiguration.newBuilder();
              if (hasRecord()) {
                subBuilder.mergeFrom(getRecord());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setRecord(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.CameraStatus status = 1;
      private mrtech.smarthome.rpc.Models.CameraStatus status_ = mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraStatus, mrtech.smarthome.rpc.Models.CameraStatus.Builder, mrtech.smarthome.rpc.Models.CameraStatusOrBuilder> statusBuilder_;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.CameraStatus getStatus() {
        if (statusBuilder_ == null) {
          return status_;
        } else {
          return statusBuilder_.getMessage();
        }
      }
      public Builder setStatus(mrtech.smarthome.rpc.Models.CameraStatus value) {
        if (statusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          status_ = value;
          onChanged();
        } else {
          statusBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setStatus(
          mrtech.smarthome.rpc.Models.CameraStatus.Builder builderForValue) {
        if (statusBuilder_ == null) {
          status_ = builderForValue.build();
          onChanged();
        } else {
          statusBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeStatus(mrtech.smarthome.rpc.Models.CameraStatus value) {
        if (statusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              status_ != mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance()) {
            status_ =
              mrtech.smarthome.rpc.Models.CameraStatus.newBuilder(status_).mergeFrom(value).buildPartial();
          } else {
            status_ = value;
          }
          onChanged();
        } else {
          statusBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearStatus() {
        if (statusBuilder_ == null) {
          status_ = mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance();
          onChanged();
        } else {
          statusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraStatus.Builder getStatusBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getStatusFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraStatusOrBuilder getStatusOrBuilder() {
        if (statusBuilder_ != null) {
          return statusBuilder_.getMessageOrBuilder();
        } else {
          return status_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraStatus, mrtech.smarthome.rpc.Models.CameraStatus.Builder, mrtech.smarthome.rpc.Models.CameraStatusOrBuilder> 
          getStatusFieldBuilder() {
        if (statusBuilder_ == null) {
          statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraStatus, mrtech.smarthome.rpc.Models.CameraStatus.Builder, mrtech.smarthome.rpc.Models.CameraStatusOrBuilder>(
                  status_,
                  getParentForChildren(),
                  isClean());
          status_ = null;
        }
        return statusBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraParam param = 2;
      private mrtech.smarthome.rpc.Models.CameraParam param_ = mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraParam, mrtech.smarthome.rpc.Models.CameraParam.Builder, mrtech.smarthome.rpc.Models.CameraParamOrBuilder> paramBuilder_;
      public boolean hasParam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.CameraParam getParam() {
        if (paramBuilder_ == null) {
          return param_;
        } else {
          return paramBuilder_.getMessage();
        }
      }
      public Builder setParam(mrtech.smarthome.rpc.Models.CameraParam value) {
        if (paramBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          param_ = value;
          onChanged();
        } else {
          paramBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setParam(
          mrtech.smarthome.rpc.Models.CameraParam.Builder builderForValue) {
        if (paramBuilder_ == null) {
          param_ = builderForValue.build();
          onChanged();
        } else {
          paramBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeParam(mrtech.smarthome.rpc.Models.CameraParam value) {
        if (paramBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              param_ != mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance()) {
            param_ =
              mrtech.smarthome.rpc.Models.CameraParam.newBuilder(param_).mergeFrom(value).buildPartial();
          } else {
            param_ = value;
          }
          onChanged();
        } else {
          paramBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearParam() {
        if (paramBuilder_ == null) {
          param_ = mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance();
          onChanged();
        } else {
          paramBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraParam.Builder getParamBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getParamFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraParamOrBuilder getParamOrBuilder() {
        if (paramBuilder_ != null) {
          return paramBuilder_.getMessageOrBuilder();
        } else {
          return param_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraParam, mrtech.smarthome.rpc.Models.CameraParam.Builder, mrtech.smarthome.rpc.Models.CameraParamOrBuilder> 
          getParamFieldBuilder() {
        if (paramBuilder_ == null) {
          paramBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraParam, mrtech.smarthome.rpc.Models.CameraParam.Builder, mrtech.smarthome.rpc.Models.CameraParamOrBuilder>(
                  param_,
                  getParentForChildren(),
                  isClean());
          param_ = null;
        }
        return paramBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraRecordConfiguration record = 3;
      private mrtech.smarthome.rpc.Models.CameraRecordConfiguration record_ = mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraRecordConfiguration, mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder, mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder> recordBuilder_;
      public boolean hasRecord() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.CameraRecordConfiguration getRecord() {
        if (recordBuilder_ == null) {
          return record_;
        } else {
          return recordBuilder_.getMessage();
        }
      }
      public Builder setRecord(mrtech.smarthome.rpc.Models.CameraRecordConfiguration value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          record_ = value;
          onChanged();
        } else {
          recordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setRecord(
          mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder builderForValue) {
        if (recordBuilder_ == null) {
          record_ = builderForValue.build();
          onChanged();
        } else {
          recordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeRecord(mrtech.smarthome.rpc.Models.CameraRecordConfiguration value) {
        if (recordBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              record_ != mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance()) {
            record_ =
              mrtech.smarthome.rpc.Models.CameraRecordConfiguration.newBuilder(record_).mergeFrom(value).buildPartial();
          } else {
            record_ = value;
          }
          onChanged();
        } else {
          recordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearRecord() {
        if (recordBuilder_ == null) {
          record_ = mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance();
          onChanged();
        } else {
          recordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder getRecordBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getRecordFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder getRecordOrBuilder() {
        if (recordBuilder_ != null) {
          return recordBuilder_.getMessageOrBuilder();
        } else {
          return record_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraRecordConfiguration, mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder, mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder> 
          getRecordFieldBuilder() {
        if (recordBuilder_ == null) {
          recordBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraRecordConfiguration, mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder, mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder>(
                  record_,
                  getParentForChildren(),
                  isClean());
          record_ = null;
        }
        return recordBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraInfo)
    }
    
    static {
      defaultInstance = new CameraInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraInfo)
  }
  
  public interface CameraStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string alias = 1;
    boolean hasAlias();
    String getAlias();
    
    // optional string deviceid = 2;
    boolean hasDeviceid();
    String getDeviceid();
    
    // optional string sys_ver = 3;
    boolean hasSysVer();
    String getSysVer();
    
    // optional int32 now = 4;
    boolean hasNow();
    int getNow();
    
    // optional int32 alarm_status = 5;
    boolean hasAlarmStatus();
    int getAlarmStatus();
    
    // optional bool upnp_status = 6;
    boolean hasUpnpStatus();
    boolean getUpnpStatus();
    
    // optional bool dnsenable = 7;
    boolean hasDnsenable();
    boolean getDnsenable();
    
    // optional bool osdenable = 8;
    boolean hasOsdenable();
    boolean getOsdenable();
    
    // optional bool syswifi_mode = 9;
    boolean hasSyswifiMode();
    boolean getSyswifiMode();
    
    // optional string mac = 10;
    boolean hasMac();
    String getMac();
    
    // optional string wifimac = 11;
    boolean hasWifimac();
    String getWifimac();
    
    // optional int32 record_sd_status = 12;
    boolean hasRecordSdStatus();
    int getRecordSdStatus();
    
    // optional int32 dns_status = 13;
    boolean hasDnsStatus();
    int getDnsStatus();
    
    // optional bool internet = 14;
    boolean hasInternet();
    boolean getInternet();
    
    // optional bool p2pstatus = 15;
    boolean hasP2Pstatus();
    boolean getP2Pstatus();
    
    // optional int32 devicetype = 16;
    boolean hasDevicetype();
    int getDevicetype();
    
    // optional int32 devicesubtype = 17;
    boolean hasDevicesubtype();
    int getDevicesubtype();
    
    // optional int32 externwifi = 18;
    boolean hasExternwifi();
    int getExternwifi();
    
    // optional bool encrypt = 19;
    boolean hasEncrypt();
    boolean getEncrypt();
    
    // optional bool under = 20;
    boolean hasUnder();
    boolean getUnder();
    
    // optional uint64 sdtotal = 21;
    boolean hasSdtotal();
    long getSdtotal();
    
    // optional uint64 sdfree = 22;
    boolean hasSdfree();
    long getSdfree();
  }
  public static final class CameraStatus extends
      com.google.protobuf.GeneratedMessage
      implements CameraStatusOrBuilder {
    // Use CameraStatus.newBuilder() to construct.
    private CameraStatus(Builder builder) {
      super(builder);
    }
    private CameraStatus(boolean noInit) {}
    
    private static final CameraStatus defaultInstance;
    public static CameraStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraStatus_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string alias = 1;
    public static final int ALIAS_FIELD_NUMBER = 1;
    private java.lang.Object alias_;
    public boolean hasAlias() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getAlias() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          alias_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAliasBytes() {
      java.lang.Object ref = alias_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        alias_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string deviceid = 2;
    public static final int DEVICEID_FIELD_NUMBER = 2;
    private java.lang.Object deviceid_;
    public boolean hasDeviceid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getDeviceid() {
      java.lang.Object ref = deviceid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          deviceid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDeviceidBytes() {
      java.lang.Object ref = deviceid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        deviceid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string sys_ver = 3;
    public static final int SYS_VER_FIELD_NUMBER = 3;
    private java.lang.Object sysVer_;
    public boolean hasSysVer() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSysVer() {
      java.lang.Object ref = sysVer_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sysVer_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSysVerBytes() {
      java.lang.Object ref = sysVer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sysVer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 now = 4;
    public static final int NOW_FIELD_NUMBER = 4;
    private int now_;
    public boolean hasNow() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getNow() {
      return now_;
    }
    
    // optional int32 alarm_status = 5;
    public static final int ALARM_STATUS_FIELD_NUMBER = 5;
    private int alarmStatus_;
    public boolean hasAlarmStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getAlarmStatus() {
      return alarmStatus_;
    }
    
    // optional bool upnp_status = 6;
    public static final int UPNP_STATUS_FIELD_NUMBER = 6;
    private boolean upnpStatus_;
    public boolean hasUpnpStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public boolean getUpnpStatus() {
      return upnpStatus_;
    }
    
    // optional bool dnsenable = 7;
    public static final int DNSENABLE_FIELD_NUMBER = 7;
    private boolean dnsenable_;
    public boolean hasDnsenable() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getDnsenable() {
      return dnsenable_;
    }
    
    // optional bool osdenable = 8;
    public static final int OSDENABLE_FIELD_NUMBER = 8;
    private boolean osdenable_;
    public boolean hasOsdenable() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public boolean getOsdenable() {
      return osdenable_;
    }
    
    // optional bool syswifi_mode = 9;
    public static final int SYSWIFI_MODE_FIELD_NUMBER = 9;
    private boolean syswifiMode_;
    public boolean hasSyswifiMode() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getSyswifiMode() {
      return syswifiMode_;
    }
    
    // optional string mac = 10;
    public static final int MAC_FIELD_NUMBER = 10;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wifimac = 11;
    public static final int WIFIMAC_FIELD_NUMBER = 11;
    private java.lang.Object wifimac_;
    public boolean hasWifimac() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getWifimac() {
      java.lang.Object ref = wifimac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wifimac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWifimacBytes() {
      java.lang.Object ref = wifimac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wifimac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 record_sd_status = 12;
    public static final int RECORD_SD_STATUS_FIELD_NUMBER = 12;
    private int recordSdStatus_;
    public boolean hasRecordSdStatus() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getRecordSdStatus() {
      return recordSdStatus_;
    }
    
    // optional int32 dns_status = 13;
    public static final int DNS_STATUS_FIELD_NUMBER = 13;
    private int dnsStatus_;
    public boolean hasDnsStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getDnsStatus() {
      return dnsStatus_;
    }
    
    // optional bool internet = 14;
    public static final int INTERNET_FIELD_NUMBER = 14;
    private boolean internet_;
    public boolean hasInternet() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public boolean getInternet() {
      return internet_;
    }
    
    // optional bool p2pstatus = 15;
    public static final int P2PSTATUS_FIELD_NUMBER = 15;
    private boolean p2Pstatus_;
    public boolean hasP2Pstatus() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getP2Pstatus() {
      return p2Pstatus_;
    }
    
    // optional int32 devicetype = 16;
    public static final int DEVICETYPE_FIELD_NUMBER = 16;
    private int devicetype_;
    public boolean hasDevicetype() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getDevicetype() {
      return devicetype_;
    }
    
    // optional int32 devicesubtype = 17;
    public static final int DEVICESUBTYPE_FIELD_NUMBER = 17;
    private int devicesubtype_;
    public boolean hasDevicesubtype() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getDevicesubtype() {
      return devicesubtype_;
    }
    
    // optional int32 externwifi = 18;
    public static final int EXTERNWIFI_FIELD_NUMBER = 18;
    private int externwifi_;
    public boolean hasExternwifi() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getExternwifi() {
      return externwifi_;
    }
    
    // optional bool encrypt = 19;
    public static final int ENCRYPT_FIELD_NUMBER = 19;
    private boolean encrypt_;
    public boolean hasEncrypt() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public boolean getEncrypt() {
      return encrypt_;
    }
    
    // optional bool under = 20;
    public static final int UNDER_FIELD_NUMBER = 20;
    private boolean under_;
    public boolean hasUnder() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public boolean getUnder() {
      return under_;
    }
    
    // optional uint64 sdtotal = 21;
    public static final int SDTOTAL_FIELD_NUMBER = 21;
    private long sdtotal_;
    public boolean hasSdtotal() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public long getSdtotal() {
      return sdtotal_;
    }
    
    // optional uint64 sdfree = 22;
    public static final int SDFREE_FIELD_NUMBER = 22;
    private long sdfree_;
    public boolean hasSdfree() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public long getSdfree() {
      return sdfree_;
    }
    
    private void initFields() {
      alias_ = "";
      deviceid_ = "";
      sysVer_ = "";
      now_ = 0;
      alarmStatus_ = 0;
      upnpStatus_ = false;
      dnsenable_ = false;
      osdenable_ = false;
      syswifiMode_ = false;
      mac_ = "";
      wifimac_ = "";
      recordSdStatus_ = 0;
      dnsStatus_ = 0;
      internet_ = false;
      p2Pstatus_ = false;
      devicetype_ = 0;
      devicesubtype_ = 0;
      externwifi_ = 0;
      encrypt_ = false;
      under_ = false;
      sdtotal_ = 0L;
      sdfree_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAliasBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getDeviceidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSysVerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, now_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, alarmStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, upnpStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, dnsenable_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, osdenable_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, syswifiMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getMacBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getWifimacBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, recordSdStatus_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, dnsStatus_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBool(14, internet_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, p2Pstatus_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, devicetype_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, devicesubtype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, externwifi_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(19, encrypt_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(20, under_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt64(21, sdtotal_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeUInt64(22, sdfree_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAliasBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getDeviceidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSysVerBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, now_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, alarmStatus_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, upnpStatus_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, dnsenable_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, osdenable_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, syswifiMode_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getMacBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getWifimacBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, recordSdStatus_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, dnsStatus_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, internet_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, p2Pstatus_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, devicetype_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, devicesubtype_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, externwifi_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, encrypt_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, under_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(21, sdtotal_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, sdfree_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraStatus_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraStatus_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        alias_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        sysVer_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        now_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        alarmStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        upnpStatus_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        dnsenable_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        osdenable_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        syswifiMode_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        wifimac_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        recordSdStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        dnsStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        internet_ = false;
        bitField0_ = (bitField0_ & ~0x00002000);
        p2Pstatus_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        devicetype_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        devicesubtype_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        externwifi_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        encrypt_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        under_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        sdtotal_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        sdfree_ = 0L;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraStatus.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraStatus getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraStatus build() {
        mrtech.smarthome.rpc.Models.CameraStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraStatus buildPartial() {
        mrtech.smarthome.rpc.Models.CameraStatus result = new mrtech.smarthome.rpc.Models.CameraStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.alias_ = alias_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.deviceid_ = deviceid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sysVer_ = sysVer_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.now_ = now_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.alarmStatus_ = alarmStatus_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.upnpStatus_ = upnpStatus_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dnsenable_ = dnsenable_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.osdenable_ = osdenable_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.syswifiMode_ = syswifiMode_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.wifimac_ = wifimac_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.recordSdStatus_ = recordSdStatus_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.dnsStatus_ = dnsStatus_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.internet_ = internet_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.p2Pstatus_ = p2Pstatus_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.devicetype_ = devicetype_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.devicesubtype_ = devicesubtype_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.externwifi_ = externwifi_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.encrypt_ = encrypt_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.under_ = under_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.sdtotal_ = sdtotal_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.sdfree_ = sdfree_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraStatus) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraStatus other) {
        if (other == mrtech.smarthome.rpc.Models.CameraStatus.getDefaultInstance()) return this;
        if (other.hasAlias()) {
          setAlias(other.getAlias());
        }
        if (other.hasDeviceid()) {
          setDeviceid(other.getDeviceid());
        }
        if (other.hasSysVer()) {
          setSysVer(other.getSysVer());
        }
        if (other.hasNow()) {
          setNow(other.getNow());
        }
        if (other.hasAlarmStatus()) {
          setAlarmStatus(other.getAlarmStatus());
        }
        if (other.hasUpnpStatus()) {
          setUpnpStatus(other.getUpnpStatus());
        }
        if (other.hasDnsenable()) {
          setDnsenable(other.getDnsenable());
        }
        if (other.hasOsdenable()) {
          setOsdenable(other.getOsdenable());
        }
        if (other.hasSyswifiMode()) {
          setSyswifiMode(other.getSyswifiMode());
        }
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasWifimac()) {
          setWifimac(other.getWifimac());
        }
        if (other.hasRecordSdStatus()) {
          setRecordSdStatus(other.getRecordSdStatus());
        }
        if (other.hasDnsStatus()) {
          setDnsStatus(other.getDnsStatus());
        }
        if (other.hasInternet()) {
          setInternet(other.getInternet());
        }
        if (other.hasP2Pstatus()) {
          setP2Pstatus(other.getP2Pstatus());
        }
        if (other.hasDevicetype()) {
          setDevicetype(other.getDevicetype());
        }
        if (other.hasDevicesubtype()) {
          setDevicesubtype(other.getDevicesubtype());
        }
        if (other.hasExternwifi()) {
          setExternwifi(other.getExternwifi());
        }
        if (other.hasEncrypt()) {
          setEncrypt(other.getEncrypt());
        }
        if (other.hasUnder()) {
          setUnder(other.getUnder());
        }
        if (other.hasSdtotal()) {
          setSdtotal(other.getSdtotal());
        }
        if (other.hasSdfree()) {
          setSdfree(other.getSdfree());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              alias_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              deviceid_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              sysVer_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              now_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              alarmStatus_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              upnpStatus_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              dnsenable_ = input.readBool();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              osdenable_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              syswifiMode_ = input.readBool();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              mac_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              wifimac_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              recordSdStatus_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              dnsStatus_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              internet_ = input.readBool();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              p2Pstatus_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              devicetype_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              devicesubtype_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              externwifi_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              encrypt_ = input.readBool();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              under_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              sdtotal_ = input.readUInt64();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              sdfree_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string alias = 1;
      private java.lang.Object alias_ = "";
      public boolean hasAlias() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getAlias() {
        java.lang.Object ref = alias_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          alias_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAlias(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlias() {
        bitField0_ = (bitField0_ & ~0x00000001);
        alias_ = getDefaultInstance().getAlias();
        onChanged();
        return this;
      }
      void setAlias(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        alias_ = value;
        onChanged();
      }
      
      // optional string deviceid = 2;
      private java.lang.Object deviceid_ = "";
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getDeviceid() {
        java.lang.Object ref = deviceid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          deviceid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDeviceid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        deviceid_ = value;
        onChanged();
        return this;
      }
      public Builder clearDeviceid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        deviceid_ = getDefaultInstance().getDeviceid();
        onChanged();
        return this;
      }
      void setDeviceid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        deviceid_ = value;
        onChanged();
      }
      
      // optional string sys_ver = 3;
      private java.lang.Object sysVer_ = "";
      public boolean hasSysVer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSysVer() {
        java.lang.Object ref = sysVer_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sysVer_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSysVer(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        sysVer_ = value;
        onChanged();
        return this;
      }
      public Builder clearSysVer() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sysVer_ = getDefaultInstance().getSysVer();
        onChanged();
        return this;
      }
      void setSysVer(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        sysVer_ = value;
        onChanged();
      }
      
      // optional int32 now = 4;
      private int now_ ;
      public boolean hasNow() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getNow() {
        return now_;
      }
      public Builder setNow(int value) {
        bitField0_ |= 0x00000008;
        now_ = value;
        onChanged();
        return this;
      }
      public Builder clearNow() {
        bitField0_ = (bitField0_ & ~0x00000008);
        now_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 alarm_status = 5;
      private int alarmStatus_ ;
      public boolean hasAlarmStatus() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getAlarmStatus() {
        return alarmStatus_;
      }
      public Builder setAlarmStatus(int value) {
        bitField0_ |= 0x00000010;
        alarmStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlarmStatus() {
        bitField0_ = (bitField0_ & ~0x00000010);
        alarmStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool upnp_status = 6;
      private boolean upnpStatus_ ;
      public boolean hasUpnpStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public boolean getUpnpStatus() {
        return upnpStatus_;
      }
      public Builder setUpnpStatus(boolean value) {
        bitField0_ |= 0x00000020;
        upnpStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpnpStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        upnpStatus_ = false;
        onChanged();
        return this;
      }
      
      // optional bool dnsenable = 7;
      private boolean dnsenable_ ;
      public boolean hasDnsenable() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getDnsenable() {
        return dnsenable_;
      }
      public Builder setDnsenable(boolean value) {
        bitField0_ |= 0x00000040;
        dnsenable_ = value;
        onChanged();
        return this;
      }
      public Builder clearDnsenable() {
        bitField0_ = (bitField0_ & ~0x00000040);
        dnsenable_ = false;
        onChanged();
        return this;
      }
      
      // optional bool osdenable = 8;
      private boolean osdenable_ ;
      public boolean hasOsdenable() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getOsdenable() {
        return osdenable_;
      }
      public Builder setOsdenable(boolean value) {
        bitField0_ |= 0x00000080;
        osdenable_ = value;
        onChanged();
        return this;
      }
      public Builder clearOsdenable() {
        bitField0_ = (bitField0_ & ~0x00000080);
        osdenable_ = false;
        onChanged();
        return this;
      }
      
      // optional bool syswifi_mode = 9;
      private boolean syswifiMode_ ;
      public boolean hasSyswifiMode() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getSyswifiMode() {
        return syswifiMode_;
      }
      public Builder setSyswifiMode(boolean value) {
        bitField0_ |= 0x00000100;
        syswifiMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearSyswifiMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        syswifiMode_ = false;
        onChanged();
        return this;
      }
      
      // optional string mac = 10;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        mac_ = value;
        onChanged();
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        mac_ = value;
        onChanged();
      }
      
      // optional string wifimac = 11;
      private java.lang.Object wifimac_ = "";
      public boolean hasWifimac() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getWifimac() {
        java.lang.Object ref = wifimac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wifimac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWifimac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        wifimac_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifimac() {
        bitField0_ = (bitField0_ & ~0x00000400);
        wifimac_ = getDefaultInstance().getWifimac();
        onChanged();
        return this;
      }
      void setWifimac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        wifimac_ = value;
        onChanged();
      }
      
      // optional int32 record_sd_status = 12;
      private int recordSdStatus_ ;
      public boolean hasRecordSdStatus() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getRecordSdStatus() {
        return recordSdStatus_;
      }
      public Builder setRecordSdStatus(int value) {
        bitField0_ |= 0x00000800;
        recordSdStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecordSdStatus() {
        bitField0_ = (bitField0_ & ~0x00000800);
        recordSdStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 dns_status = 13;
      private int dnsStatus_ ;
      public boolean hasDnsStatus() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getDnsStatus() {
        return dnsStatus_;
      }
      public Builder setDnsStatus(int value) {
        bitField0_ |= 0x00001000;
        dnsStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearDnsStatus() {
        bitField0_ = (bitField0_ & ~0x00001000);
        dnsStatus_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool internet = 14;
      private boolean internet_ ;
      public boolean hasInternet() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public boolean getInternet() {
        return internet_;
      }
      public Builder setInternet(boolean value) {
        bitField0_ |= 0x00002000;
        internet_ = value;
        onChanged();
        return this;
      }
      public Builder clearInternet() {
        bitField0_ = (bitField0_ & ~0x00002000);
        internet_ = false;
        onChanged();
        return this;
      }
      
      // optional bool p2pstatus = 15;
      private boolean p2Pstatus_ ;
      public boolean hasP2Pstatus() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getP2Pstatus() {
        return p2Pstatus_;
      }
      public Builder setP2Pstatus(boolean value) {
        bitField0_ |= 0x00004000;
        p2Pstatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearP2Pstatus() {
        bitField0_ = (bitField0_ & ~0x00004000);
        p2Pstatus_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 devicetype = 16;
      private int devicetype_ ;
      public boolean hasDevicetype() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getDevicetype() {
        return devicetype_;
      }
      public Builder setDevicetype(int value) {
        bitField0_ |= 0x00008000;
        devicetype_ = value;
        onChanged();
        return this;
      }
      public Builder clearDevicetype() {
        bitField0_ = (bitField0_ & ~0x00008000);
        devicetype_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 devicesubtype = 17;
      private int devicesubtype_ ;
      public boolean hasDevicesubtype() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getDevicesubtype() {
        return devicesubtype_;
      }
      public Builder setDevicesubtype(int value) {
        bitField0_ |= 0x00010000;
        devicesubtype_ = value;
        onChanged();
        return this;
      }
      public Builder clearDevicesubtype() {
        bitField0_ = (bitField0_ & ~0x00010000);
        devicesubtype_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 externwifi = 18;
      private int externwifi_ ;
      public boolean hasExternwifi() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getExternwifi() {
        return externwifi_;
      }
      public Builder setExternwifi(int value) {
        bitField0_ |= 0x00020000;
        externwifi_ = value;
        onChanged();
        return this;
      }
      public Builder clearExternwifi() {
        bitField0_ = (bitField0_ & ~0x00020000);
        externwifi_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool encrypt = 19;
      private boolean encrypt_ ;
      public boolean hasEncrypt() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public boolean getEncrypt() {
        return encrypt_;
      }
      public Builder setEncrypt(boolean value) {
        bitField0_ |= 0x00040000;
        encrypt_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncrypt() {
        bitField0_ = (bitField0_ & ~0x00040000);
        encrypt_ = false;
        onChanged();
        return this;
      }
      
      // optional bool under = 20;
      private boolean under_ ;
      public boolean hasUnder() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public boolean getUnder() {
        return under_;
      }
      public Builder setUnder(boolean value) {
        bitField0_ |= 0x00080000;
        under_ = value;
        onChanged();
        return this;
      }
      public Builder clearUnder() {
        bitField0_ = (bitField0_ & ~0x00080000);
        under_ = false;
        onChanged();
        return this;
      }
      
      // optional uint64 sdtotal = 21;
      private long sdtotal_ ;
      public boolean hasSdtotal() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public long getSdtotal() {
        return sdtotal_;
      }
      public Builder setSdtotal(long value) {
        bitField0_ |= 0x00100000;
        sdtotal_ = value;
        onChanged();
        return this;
      }
      public Builder clearSdtotal() {
        bitField0_ = (bitField0_ & ~0x00100000);
        sdtotal_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 sdfree = 22;
      private long sdfree_ ;
      public boolean hasSdfree() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public long getSdfree() {
        return sdfree_;
      }
      public Builder setSdfree(long value) {
        bitField0_ |= 0x00200000;
        sdfree_ = value;
        onChanged();
        return this;
      }
      public Builder clearSdfree() {
        bitField0_ = (bitField0_ & ~0x00200000);
        sdfree_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraStatus)
    }
    
    static {
      defaultInstance = new CameraStatus(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraStatus)
  }
  
  public interface CameraParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.CameraTime time = 1;
    boolean hasTime();
    mrtech.smarthome.rpc.Models.CameraTime getTime();
    mrtech.smarthome.rpc.Models.CameraTimeOrBuilder getTimeOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraNetwork network = 2;
    boolean hasNetwork();
    mrtech.smarthome.rpc.Models.CameraNetwork getNetwork();
    mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder getNetworkOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraWlan wlan = 3;
    boolean hasWlan();
    mrtech.smarthome.rpc.Models.CameraWlan getWlan();
    mrtech.smarthome.rpc.Models.CameraWlanOrBuilder getWlanOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraAlarm alarm = 4;
    boolean hasAlarm();
    mrtech.smarthome.rpc.Models.CameraAlarm getAlarm();
    mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder getAlarmOrBuilder();
    
    // optional .mrtech.smarthome.rpc.CameraSnapshotParam snapshotparam = 5;
    boolean hasSnapshotparam();
    mrtech.smarthome.rpc.Models.CameraSnapshotParam getSnapshotparam();
    mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder getSnapshotparamOrBuilder();
  }
  public static final class CameraParam extends
      com.google.protobuf.GeneratedMessage
      implements CameraParamOrBuilder {
    // Use CameraParam.newBuilder() to construct.
    private CameraParam(Builder builder) {
      super(builder);
    }
    private CameraParam(boolean noInit) {}
    
    private static final CameraParam defaultInstance;
    public static CameraParam getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraParam getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraParam_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraParam_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.CameraTime time = 1;
    public static final int TIME_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.CameraTime time_;
    public boolean hasTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.CameraTime getTime() {
      return time_;
    }
    public mrtech.smarthome.rpc.Models.CameraTimeOrBuilder getTimeOrBuilder() {
      return time_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraNetwork network = 2;
    public static final int NETWORK_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.CameraNetwork network_;
    public boolean hasNetwork() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.CameraNetwork getNetwork() {
      return network_;
    }
    public mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder getNetworkOrBuilder() {
      return network_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlan wlan = 3;
    public static final int WLAN_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.CameraWlan wlan_;
    public boolean hasWlan() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.CameraWlan getWlan() {
      return wlan_;
    }
    public mrtech.smarthome.rpc.Models.CameraWlanOrBuilder getWlanOrBuilder() {
      return wlan_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraAlarm alarm = 4;
    public static final int ALARM_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.CameraAlarm alarm_;
    public boolean hasAlarm() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.CameraAlarm getAlarm() {
      return alarm_;
    }
    public mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder getAlarmOrBuilder() {
      return alarm_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraSnapshotParam snapshotparam = 5;
    public static final int SNAPSHOTPARAM_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.CameraSnapshotParam snapshotparam_;
    public boolean hasSnapshotparam() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.CameraSnapshotParam getSnapshotparam() {
      return snapshotparam_;
    }
    public mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder getSnapshotparamOrBuilder() {
      return snapshotparam_;
    }
    
    private void initFields() {
      time_ = mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance();
      network_ = mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance();
      wlan_ = mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance();
      alarm_ = mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance();
      snapshotparam_ = mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, network_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, wlan_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, alarm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, snapshotparam_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, time_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, network_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, wlan_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, alarm_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, snapshotparam_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraParam_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraParam_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimeFieldBuilder();
          getNetworkFieldBuilder();
          getWlanFieldBuilder();
          getAlarmFieldBuilder();
          getSnapshotparamFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (timeBuilder_ == null) {
          time_ = mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (networkBuilder_ == null) {
          network_ = mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance();
        } else {
          networkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (wlanBuilder_ == null) {
          wlan_ = mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance();
        } else {
          wlanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (alarmBuilder_ == null) {
          alarm_ = mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance();
        } else {
          alarmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (snapshotparamBuilder_ == null) {
          snapshotparam_ = mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance();
        } else {
          snapshotparamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraParam.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraParam getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraParam build() {
        mrtech.smarthome.rpc.Models.CameraParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraParam buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraParam buildPartial() {
        mrtech.smarthome.rpc.Models.CameraParam result = new mrtech.smarthome.rpc.Models.CameraParam(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (timeBuilder_ == null) {
          result.time_ = time_;
        } else {
          result.time_ = timeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (networkBuilder_ == null) {
          result.network_ = network_;
        } else {
          result.network_ = networkBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (wlanBuilder_ == null) {
          result.wlan_ = wlan_;
        } else {
          result.wlan_ = wlanBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (alarmBuilder_ == null) {
          result.alarm_ = alarm_;
        } else {
          result.alarm_ = alarmBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (snapshotparamBuilder_ == null) {
          result.snapshotparam_ = snapshotparam_;
        } else {
          result.snapshotparam_ = snapshotparamBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraParam) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraParam other) {
        if (other == mrtech.smarthome.rpc.Models.CameraParam.getDefaultInstance()) return this;
        if (other.hasTime()) {
          mergeTime(other.getTime());
        }
        if (other.hasNetwork()) {
          mergeNetwork(other.getNetwork());
        }
        if (other.hasWlan()) {
          mergeWlan(other.getWlan());
        }
        if (other.hasAlarm()) {
          mergeAlarm(other.getAlarm());
        }
        if (other.hasSnapshotparam()) {
          mergeSnapshotparam(other.getSnapshotparam());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              mrtech.smarthome.rpc.Models.CameraTime.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraTime.newBuilder();
              if (hasTime()) {
                subBuilder.mergeFrom(getTime());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTime(subBuilder.buildPartial());
              break;
            }
            case 18: {
              mrtech.smarthome.rpc.Models.CameraNetwork.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraNetwork.newBuilder();
              if (hasNetwork()) {
                subBuilder.mergeFrom(getNetwork());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setNetwork(subBuilder.buildPartial());
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.CameraWlan.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraWlan.newBuilder();
              if (hasWlan()) {
                subBuilder.mergeFrom(getWlan());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setWlan(subBuilder.buildPartial());
              break;
            }
            case 34: {
              mrtech.smarthome.rpc.Models.CameraAlarm.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraAlarm.newBuilder();
              if (hasAlarm()) {
                subBuilder.mergeFrom(getAlarm());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAlarm(subBuilder.buildPartial());
              break;
            }
            case 42: {
              mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder subBuilder = mrtech.smarthome.rpc.Models.CameraSnapshotParam.newBuilder();
              if (hasSnapshotparam()) {
                subBuilder.mergeFrom(getSnapshotparam());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setSnapshotparam(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.CameraTime time = 1;
      private mrtech.smarthome.rpc.Models.CameraTime time_ = mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraTime, mrtech.smarthome.rpc.Models.CameraTime.Builder, mrtech.smarthome.rpc.Models.CameraTimeOrBuilder> timeBuilder_;
      public boolean hasTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.CameraTime getTime() {
        if (timeBuilder_ == null) {
          return time_;
        } else {
          return timeBuilder_.getMessage();
        }
      }
      public Builder setTime(mrtech.smarthome.rpc.Models.CameraTime value) {
        if (timeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          time_ = value;
          onChanged();
        } else {
          timeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setTime(
          mrtech.smarthome.rpc.Models.CameraTime.Builder builderForValue) {
        if (timeBuilder_ == null) {
          time_ = builderForValue.build();
          onChanged();
        } else {
          timeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeTime(mrtech.smarthome.rpc.Models.CameraTime value) {
        if (timeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              time_ != mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance()) {
            time_ =
              mrtech.smarthome.rpc.Models.CameraTime.newBuilder(time_).mergeFrom(value).buildPartial();
          } else {
            time_ = value;
          }
          onChanged();
        } else {
          timeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearTime() {
        if (timeBuilder_ == null) {
          time_ = mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance();
          onChanged();
        } else {
          timeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraTime.Builder getTimeBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimeFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraTimeOrBuilder getTimeOrBuilder() {
        if (timeBuilder_ != null) {
          return timeBuilder_.getMessageOrBuilder();
        } else {
          return time_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraTime, mrtech.smarthome.rpc.Models.CameraTime.Builder, mrtech.smarthome.rpc.Models.CameraTimeOrBuilder> 
          getTimeFieldBuilder() {
        if (timeBuilder_ == null) {
          timeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraTime, mrtech.smarthome.rpc.Models.CameraTime.Builder, mrtech.smarthome.rpc.Models.CameraTimeOrBuilder>(
                  time_,
                  getParentForChildren(),
                  isClean());
          time_ = null;
        }
        return timeBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraNetwork network = 2;
      private mrtech.smarthome.rpc.Models.CameraNetwork network_ = mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraNetwork, mrtech.smarthome.rpc.Models.CameraNetwork.Builder, mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder> networkBuilder_;
      public boolean hasNetwork() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.CameraNetwork getNetwork() {
        if (networkBuilder_ == null) {
          return network_;
        } else {
          return networkBuilder_.getMessage();
        }
      }
      public Builder setNetwork(mrtech.smarthome.rpc.Models.CameraNetwork value) {
        if (networkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          network_ = value;
          onChanged();
        } else {
          networkBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setNetwork(
          mrtech.smarthome.rpc.Models.CameraNetwork.Builder builderForValue) {
        if (networkBuilder_ == null) {
          network_ = builderForValue.build();
          onChanged();
        } else {
          networkBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeNetwork(mrtech.smarthome.rpc.Models.CameraNetwork value) {
        if (networkBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              network_ != mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance()) {
            network_ =
              mrtech.smarthome.rpc.Models.CameraNetwork.newBuilder(network_).mergeFrom(value).buildPartial();
          } else {
            network_ = value;
          }
          onChanged();
        } else {
          networkBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearNetwork() {
        if (networkBuilder_ == null) {
          network_ = mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance();
          onChanged();
        } else {
          networkBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraNetwork.Builder getNetworkBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getNetworkFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder getNetworkOrBuilder() {
        if (networkBuilder_ != null) {
          return networkBuilder_.getMessageOrBuilder();
        } else {
          return network_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraNetwork, mrtech.smarthome.rpc.Models.CameraNetwork.Builder, mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder> 
          getNetworkFieldBuilder() {
        if (networkBuilder_ == null) {
          networkBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraNetwork, mrtech.smarthome.rpc.Models.CameraNetwork.Builder, mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder>(
                  network_,
                  getParentForChildren(),
                  isClean());
          network_ = null;
        }
        return networkBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlan wlan = 3;
      private mrtech.smarthome.rpc.Models.CameraWlan wlan_ = mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraWlan, mrtech.smarthome.rpc.Models.CameraWlan.Builder, mrtech.smarthome.rpc.Models.CameraWlanOrBuilder> wlanBuilder_;
      public boolean hasWlan() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.CameraWlan getWlan() {
        if (wlanBuilder_ == null) {
          return wlan_;
        } else {
          return wlanBuilder_.getMessage();
        }
      }
      public Builder setWlan(mrtech.smarthome.rpc.Models.CameraWlan value) {
        if (wlanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          wlan_ = value;
          onChanged();
        } else {
          wlanBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setWlan(
          mrtech.smarthome.rpc.Models.CameraWlan.Builder builderForValue) {
        if (wlanBuilder_ == null) {
          wlan_ = builderForValue.build();
          onChanged();
        } else {
          wlanBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeWlan(mrtech.smarthome.rpc.Models.CameraWlan value) {
        if (wlanBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              wlan_ != mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance()) {
            wlan_ =
              mrtech.smarthome.rpc.Models.CameraWlan.newBuilder(wlan_).mergeFrom(value).buildPartial();
          } else {
            wlan_ = value;
          }
          onChanged();
        } else {
          wlanBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearWlan() {
        if (wlanBuilder_ == null) {
          wlan_ = mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance();
          onChanged();
        } else {
          wlanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraWlan.Builder getWlanBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getWlanFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraWlanOrBuilder getWlanOrBuilder() {
        if (wlanBuilder_ != null) {
          return wlanBuilder_.getMessageOrBuilder();
        } else {
          return wlan_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraWlan, mrtech.smarthome.rpc.Models.CameraWlan.Builder, mrtech.smarthome.rpc.Models.CameraWlanOrBuilder> 
          getWlanFieldBuilder() {
        if (wlanBuilder_ == null) {
          wlanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraWlan, mrtech.smarthome.rpc.Models.CameraWlan.Builder, mrtech.smarthome.rpc.Models.CameraWlanOrBuilder>(
                  wlan_,
                  getParentForChildren(),
                  isClean());
          wlan_ = null;
        }
        return wlanBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraAlarm alarm = 4;
      private mrtech.smarthome.rpc.Models.CameraAlarm alarm_ = mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraAlarm, mrtech.smarthome.rpc.Models.CameraAlarm.Builder, mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder> alarmBuilder_;
      public boolean hasAlarm() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.CameraAlarm getAlarm() {
        if (alarmBuilder_ == null) {
          return alarm_;
        } else {
          return alarmBuilder_.getMessage();
        }
      }
      public Builder setAlarm(mrtech.smarthome.rpc.Models.CameraAlarm value) {
        if (alarmBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alarm_ = value;
          onChanged();
        } else {
          alarmBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder setAlarm(
          mrtech.smarthome.rpc.Models.CameraAlarm.Builder builderForValue) {
        if (alarmBuilder_ == null) {
          alarm_ = builderForValue.build();
          onChanged();
        } else {
          alarmBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder mergeAlarm(mrtech.smarthome.rpc.Models.CameraAlarm value) {
        if (alarmBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              alarm_ != mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance()) {
            alarm_ =
              mrtech.smarthome.rpc.Models.CameraAlarm.newBuilder(alarm_).mergeFrom(value).buildPartial();
          } else {
            alarm_ = value;
          }
          onChanged();
        } else {
          alarmBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      public Builder clearAlarm() {
        if (alarmBuilder_ == null) {
          alarm_ = mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance();
          onChanged();
        } else {
          alarmBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraAlarm.Builder getAlarmBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getAlarmFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder getAlarmOrBuilder() {
        if (alarmBuilder_ != null) {
          return alarmBuilder_.getMessageOrBuilder();
        } else {
          return alarm_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraAlarm, mrtech.smarthome.rpc.Models.CameraAlarm.Builder, mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder> 
          getAlarmFieldBuilder() {
        if (alarmBuilder_ == null) {
          alarmBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraAlarm, mrtech.smarthome.rpc.Models.CameraAlarm.Builder, mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder>(
                  alarm_,
                  getParentForChildren(),
                  isClean());
          alarm_ = null;
        }
        return alarmBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.CameraSnapshotParam snapshotparam = 5;
      private mrtech.smarthome.rpc.Models.CameraSnapshotParam snapshotparam_ = mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraSnapshotParam, mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder, mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder> snapshotparamBuilder_;
      public boolean hasSnapshotparam() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.CameraSnapshotParam getSnapshotparam() {
        if (snapshotparamBuilder_ == null) {
          return snapshotparam_;
        } else {
          return snapshotparamBuilder_.getMessage();
        }
      }
      public Builder setSnapshotparam(mrtech.smarthome.rpc.Models.CameraSnapshotParam value) {
        if (snapshotparamBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          snapshotparam_ = value;
          onChanged();
        } else {
          snapshotparamBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder setSnapshotparam(
          mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder builderForValue) {
        if (snapshotparamBuilder_ == null) {
          snapshotparam_ = builderForValue.build();
          onChanged();
        } else {
          snapshotparamBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder mergeSnapshotparam(mrtech.smarthome.rpc.Models.CameraSnapshotParam value) {
        if (snapshotparamBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              snapshotparam_ != mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance()) {
            snapshotparam_ =
              mrtech.smarthome.rpc.Models.CameraSnapshotParam.newBuilder(snapshotparam_).mergeFrom(value).buildPartial();
          } else {
            snapshotparam_ = value;
          }
          onChanged();
        } else {
          snapshotparamBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      public Builder clearSnapshotparam() {
        if (snapshotparamBuilder_ == null) {
          snapshotparam_ = mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance();
          onChanged();
        } else {
          snapshotparamBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      public mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder getSnapshotparamBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getSnapshotparamFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder getSnapshotparamOrBuilder() {
        if (snapshotparamBuilder_ != null) {
          return snapshotparamBuilder_.getMessageOrBuilder();
        } else {
          return snapshotparam_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.CameraSnapshotParam, mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder, mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder> 
          getSnapshotparamFieldBuilder() {
        if (snapshotparamBuilder_ == null) {
          snapshotparamBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.CameraSnapshotParam, mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder, mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder>(
                  snapshotparam_,
                  getParentForChildren(),
                  isClean());
          snapshotparam_ = null;
        }
        return snapshotparamBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraParam)
    }
    
    static {
      defaultInstance = new CameraParam(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraParam)
  }
  
  public interface CameraRecordConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool record_enabled = 1;
    boolean hasRecordEnabled();
    boolean getRecordEnabled();
    
    // optional bool record_cover_enabled = 2;
    boolean hasRecordCoverEnabled();
    boolean getRecordCoverEnabled();
    
    // optional uint64 sd_card_capacity = 3;
    boolean hasSdCardCapacity();
    long getSdCardCapacity();
    
    // optional .mrtech.smarthome.rpc.CameraSdStatus sd_status = 4;
    boolean hasSdStatus();
    mrtech.smarthome.rpc.Models.CameraSdStatus getSdStatus();
    
    // optional bool local_record_enabled = 5;
    boolean hasLocalRecordEnabled();
    boolean getLocalRecordEnabled();
  }
  public static final class CameraRecordConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements CameraRecordConfigurationOrBuilder {
    // Use CameraRecordConfiguration.newBuilder() to construct.
    private CameraRecordConfiguration(Builder builder) {
      super(builder);
    }
    private CameraRecordConfiguration(boolean noInit) {}
    
    private static final CameraRecordConfiguration defaultInstance;
    public static CameraRecordConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraRecordConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool record_enabled = 1;
    public static final int RECORD_ENABLED_FIELD_NUMBER = 1;
    private boolean recordEnabled_;
    public boolean hasRecordEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getRecordEnabled() {
      return recordEnabled_;
    }
    
    // optional bool record_cover_enabled = 2;
    public static final int RECORD_COVER_ENABLED_FIELD_NUMBER = 2;
    private boolean recordCoverEnabled_;
    public boolean hasRecordCoverEnabled() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getRecordCoverEnabled() {
      return recordCoverEnabled_;
    }
    
    // optional uint64 sd_card_capacity = 3;
    public static final int SD_CARD_CAPACITY_FIELD_NUMBER = 3;
    private long sdCardCapacity_;
    public boolean hasSdCardCapacity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getSdCardCapacity() {
      return sdCardCapacity_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraSdStatus sd_status = 4;
    public static final int SD_STATUS_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.CameraSdStatus sdStatus_;
    public boolean hasSdStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.CameraSdStatus getSdStatus() {
      return sdStatus_;
    }
    
    // optional bool local_record_enabled = 5;
    public static final int LOCAL_RECORD_ENABLED_FIELD_NUMBER = 5;
    private boolean localRecordEnabled_;
    public boolean hasLocalRecordEnabled() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getLocalRecordEnabled() {
      return localRecordEnabled_;
    }
    
    private void initFields() {
      recordEnabled_ = false;
      recordCoverEnabled_ = false;
      sdCardCapacity_ = 0L;
      sdStatus_ = mrtech.smarthome.rpc.Models.CameraSdStatus.CAMERA_SD_STATUS_NO_EXIST;
      localRecordEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, recordEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, recordCoverEnabled_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, sdCardCapacity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, sdStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, localRecordEnabled_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, recordEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, recordCoverEnabled_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, sdCardCapacity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, sdStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, localRecordEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraRecordConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraRecordConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraRecordConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraRecordConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        recordEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        recordCoverEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        sdCardCapacity_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        sdStatus_ = mrtech.smarthome.rpc.Models.CameraSdStatus.CAMERA_SD_STATUS_NO_EXIST;
        bitField0_ = (bitField0_ & ~0x00000008);
        localRecordEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraRecordConfiguration getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraRecordConfiguration build() {
        mrtech.smarthome.rpc.Models.CameraRecordConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraRecordConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraRecordConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraRecordConfiguration buildPartial() {
        mrtech.smarthome.rpc.Models.CameraRecordConfiguration result = new mrtech.smarthome.rpc.Models.CameraRecordConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.recordEnabled_ = recordEnabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.recordCoverEnabled_ = recordCoverEnabled_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sdCardCapacity_ = sdCardCapacity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sdStatus_ = sdStatus_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.localRecordEnabled_ = localRecordEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraRecordConfiguration) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraRecordConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraRecordConfiguration other) {
        if (other == mrtech.smarthome.rpc.Models.CameraRecordConfiguration.getDefaultInstance()) return this;
        if (other.hasRecordEnabled()) {
          setRecordEnabled(other.getRecordEnabled());
        }
        if (other.hasRecordCoverEnabled()) {
          setRecordCoverEnabled(other.getRecordCoverEnabled());
        }
        if (other.hasSdCardCapacity()) {
          setSdCardCapacity(other.getSdCardCapacity());
        }
        if (other.hasSdStatus()) {
          setSdStatus(other.getSdStatus());
        }
        if (other.hasLocalRecordEnabled()) {
          setLocalRecordEnabled(other.getLocalRecordEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              recordEnabled_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              recordCoverEnabled_ = input.readBool();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              sdCardCapacity_ = input.readUInt64();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraSdStatus value = mrtech.smarthome.rpc.Models.CameraSdStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                sdStatus_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              localRecordEnabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool record_enabled = 1;
      private boolean recordEnabled_ ;
      public boolean hasRecordEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getRecordEnabled() {
        return recordEnabled_;
      }
      public Builder setRecordEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        recordEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecordEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        recordEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool record_cover_enabled = 2;
      private boolean recordCoverEnabled_ ;
      public boolean hasRecordCoverEnabled() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getRecordCoverEnabled() {
        return recordCoverEnabled_;
      }
      public Builder setRecordCoverEnabled(boolean value) {
        bitField0_ |= 0x00000002;
        recordCoverEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecordCoverEnabled() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recordCoverEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional uint64 sd_card_capacity = 3;
      private long sdCardCapacity_ ;
      public boolean hasSdCardCapacity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getSdCardCapacity() {
        return sdCardCapacity_;
      }
      public Builder setSdCardCapacity(long value) {
        bitField0_ |= 0x00000004;
        sdCardCapacity_ = value;
        onChanged();
        return this;
      }
      public Builder clearSdCardCapacity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sdCardCapacity_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.CameraSdStatus sd_status = 4;
      private mrtech.smarthome.rpc.Models.CameraSdStatus sdStatus_ = mrtech.smarthome.rpc.Models.CameraSdStatus.CAMERA_SD_STATUS_NO_EXIST;
      public boolean hasSdStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.CameraSdStatus getSdStatus() {
        return sdStatus_;
      }
      public Builder setSdStatus(mrtech.smarthome.rpc.Models.CameraSdStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        sdStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearSdStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sdStatus_ = mrtech.smarthome.rpc.Models.CameraSdStatus.CAMERA_SD_STATUS_NO_EXIST;
        onChanged();
        return this;
      }
      
      // optional bool local_record_enabled = 5;
      private boolean localRecordEnabled_ ;
      public boolean hasLocalRecordEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getLocalRecordEnabled() {
        return localRecordEnabled_;
      }
      public Builder setLocalRecordEnabled(boolean value) {
        bitField0_ |= 0x00000010;
        localRecordEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalRecordEnabled() {
        bitField0_ = (bitField0_ & ~0x00000010);
        localRecordEnabled_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraRecordConfiguration)
    }
    
    static {
      defaultInstance = new CameraRecordConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraRecordConfiguration)
  }
  
  public interface LocalRecordConfigurationOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool local_record_cover_enabled = 1;
    boolean hasLocalRecordCoverEnabled();
    boolean getLocalRecordCoverEnabled();
    
    // optional int32 record_file_length = 2;
    boolean hasRecordFileLength();
    int getRecordFileLength();
    
    // optional int32 reserved_disk_space = 3;
    boolean hasReservedDiskSpace();
    int getReservedDiskSpace();
  }
  public static final class LocalRecordConfiguration extends
      com.google.protobuf.GeneratedMessage
      implements LocalRecordConfigurationOrBuilder {
    // Use LocalRecordConfiguration.newBuilder() to construct.
    private LocalRecordConfiguration(Builder builder) {
      super(builder);
    }
    private LocalRecordConfiguration(boolean noInit) {}
    
    private static final LocalRecordConfiguration defaultInstance;
    public static LocalRecordConfiguration getDefaultInstance() {
      return defaultInstance;
    }
    
    public LocalRecordConfiguration getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool local_record_cover_enabled = 1;
    public static final int LOCAL_RECORD_COVER_ENABLED_FIELD_NUMBER = 1;
    private boolean localRecordCoverEnabled_;
    public boolean hasLocalRecordCoverEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getLocalRecordCoverEnabled() {
      return localRecordCoverEnabled_;
    }
    
    // optional int32 record_file_length = 2;
    public static final int RECORD_FILE_LENGTH_FIELD_NUMBER = 2;
    private int recordFileLength_;
    public boolean hasRecordFileLength() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getRecordFileLength() {
      return recordFileLength_;
    }
    
    // optional int32 reserved_disk_space = 3;
    public static final int RESERVED_DISK_SPACE_FIELD_NUMBER = 3;
    private int reservedDiskSpace_;
    public boolean hasReservedDiskSpace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getReservedDiskSpace() {
      return reservedDiskSpace_;
    }
    
    private void initFields() {
      localRecordCoverEnabled_ = false;
      recordFileLength_ = 0;
      reservedDiskSpace_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, localRecordCoverEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, recordFileLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, reservedDiskSpace_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, localRecordCoverEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, recordFileLength_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, reservedDiskSpace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.LocalRecordConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.LocalRecordConfiguration prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.LocalRecordConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.LocalRecordConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        localRecordCoverEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        recordFileLength_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        reservedDiskSpace_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.LocalRecordConfiguration.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.LocalRecordConfiguration getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.LocalRecordConfiguration.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.LocalRecordConfiguration build() {
        mrtech.smarthome.rpc.Models.LocalRecordConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.LocalRecordConfiguration buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.LocalRecordConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.LocalRecordConfiguration buildPartial() {
        mrtech.smarthome.rpc.Models.LocalRecordConfiguration result = new mrtech.smarthome.rpc.Models.LocalRecordConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.localRecordCoverEnabled_ = localRecordCoverEnabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.recordFileLength_ = recordFileLength_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.reservedDiskSpace_ = reservedDiskSpace_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.LocalRecordConfiguration) {
          return mergeFrom((mrtech.smarthome.rpc.Models.LocalRecordConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.LocalRecordConfiguration other) {
        if (other == mrtech.smarthome.rpc.Models.LocalRecordConfiguration.getDefaultInstance()) return this;
        if (other.hasLocalRecordCoverEnabled()) {
          setLocalRecordCoverEnabled(other.getLocalRecordCoverEnabled());
        }
        if (other.hasRecordFileLength()) {
          setRecordFileLength(other.getRecordFileLength());
        }
        if (other.hasReservedDiskSpace()) {
          setReservedDiskSpace(other.getReservedDiskSpace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              localRecordCoverEnabled_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              recordFileLength_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              reservedDiskSpace_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool local_record_cover_enabled = 1;
      private boolean localRecordCoverEnabled_ ;
      public boolean hasLocalRecordCoverEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getLocalRecordCoverEnabled() {
        return localRecordCoverEnabled_;
      }
      public Builder setLocalRecordCoverEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        localRecordCoverEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalRecordCoverEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        localRecordCoverEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 record_file_length = 2;
      private int recordFileLength_ ;
      public boolean hasRecordFileLength() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getRecordFileLength() {
        return recordFileLength_;
      }
      public Builder setRecordFileLength(int value) {
        bitField0_ |= 0x00000002;
        recordFileLength_ = value;
        onChanged();
        return this;
      }
      public Builder clearRecordFileLength() {
        bitField0_ = (bitField0_ & ~0x00000002);
        recordFileLength_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 reserved_disk_space = 3;
      private int reservedDiskSpace_ ;
      public boolean hasReservedDiskSpace() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getReservedDiskSpace() {
        return reservedDiskSpace_;
      }
      public Builder setReservedDiskSpace(int value) {
        bitField0_ |= 0x00000004;
        reservedDiskSpace_ = value;
        onChanged();
        return this;
      }
      public Builder clearReservedDiskSpace() {
        bitField0_ = (bitField0_ & ~0x00000004);
        reservedDiskSpace_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.LocalRecordConfiguration)
    }
    
    static {
      defaultInstance = new LocalRecordConfiguration(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.LocalRecordConfiguration)
  }
  
  public interface CameraAlarmOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool motion_detection_armed = 1;
    boolean hasMotionDetectionArmed();
    boolean getMotionDetectionArmed();
    
    // optional int32 motion_detection_sensitivity = 2;
    boolean hasMotionDetectionSensitivity();
    int getMotionDetectionSensitivity();
  }
  public static final class CameraAlarm extends
      com.google.protobuf.GeneratedMessage
      implements CameraAlarmOrBuilder {
    // Use CameraAlarm.newBuilder() to construct.
    private CameraAlarm(Builder builder) {
      super(builder);
    }
    private CameraAlarm(boolean noInit) {}
    
    private static final CameraAlarm defaultInstance;
    public static CameraAlarm getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraAlarm getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraAlarm_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraAlarm_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool motion_detection_armed = 1;
    public static final int MOTION_DETECTION_ARMED_FIELD_NUMBER = 1;
    private boolean motionDetectionArmed_;
    public boolean hasMotionDetectionArmed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getMotionDetectionArmed() {
      return motionDetectionArmed_;
    }
    
    // optional int32 motion_detection_sensitivity = 2;
    public static final int MOTION_DETECTION_SENSITIVITY_FIELD_NUMBER = 2;
    private int motionDetectionSensitivity_;
    public boolean hasMotionDetectionSensitivity() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMotionDetectionSensitivity() {
      return motionDetectionSensitivity_;
    }
    
    private void initFields() {
      motionDetectionArmed_ = false;
      motionDetectionSensitivity_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, motionDetectionArmed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, motionDetectionSensitivity_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, motionDetectionArmed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, motionDetectionSensitivity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraAlarm parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraAlarm prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraAlarmOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraAlarm_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraAlarm_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraAlarm.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        motionDetectionArmed_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        motionDetectionSensitivity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraAlarm.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraAlarm getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraAlarm build() {
        mrtech.smarthome.rpc.Models.CameraAlarm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraAlarm buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraAlarm result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraAlarm buildPartial() {
        mrtech.smarthome.rpc.Models.CameraAlarm result = new mrtech.smarthome.rpc.Models.CameraAlarm(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.motionDetectionArmed_ = motionDetectionArmed_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.motionDetectionSensitivity_ = motionDetectionSensitivity_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraAlarm) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraAlarm)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraAlarm other) {
        if (other == mrtech.smarthome.rpc.Models.CameraAlarm.getDefaultInstance()) return this;
        if (other.hasMotionDetectionArmed()) {
          setMotionDetectionArmed(other.getMotionDetectionArmed());
        }
        if (other.hasMotionDetectionSensitivity()) {
          setMotionDetectionSensitivity(other.getMotionDetectionSensitivity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              motionDetectionArmed_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              motionDetectionSensitivity_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool motion_detection_armed = 1;
      private boolean motionDetectionArmed_ ;
      public boolean hasMotionDetectionArmed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getMotionDetectionArmed() {
        return motionDetectionArmed_;
      }
      public Builder setMotionDetectionArmed(boolean value) {
        bitField0_ |= 0x00000001;
        motionDetectionArmed_ = value;
        onChanged();
        return this;
      }
      public Builder clearMotionDetectionArmed() {
        bitField0_ = (bitField0_ & ~0x00000001);
        motionDetectionArmed_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 motion_detection_sensitivity = 2;
      private int motionDetectionSensitivity_ ;
      public boolean hasMotionDetectionSensitivity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMotionDetectionSensitivity() {
        return motionDetectionSensitivity_;
      }
      public Builder setMotionDetectionSensitivity(int value) {
        bitField0_ |= 0x00000002;
        motionDetectionSensitivity_ = value;
        onChanged();
        return this;
      }
      public Builder clearMotionDetectionSensitivity() {
        bitField0_ = (bitField0_ & ~0x00000002);
        motionDetectionSensitivity_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraAlarm)
    }
    
    static {
      defaultInstance = new CameraAlarm(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraAlarm)
  }
  
  public interface CameraTimeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 now = 1;
    boolean hasNow();
    int getNow();
    
    // optional int32 tz = 2;
    boolean hasTz();
    int getTz();
    
    // optional bool ntp_enabled = 3;
    boolean hasNtpEnabled();
    boolean getNtpEnabled();
    
    // optional string ntp_server = 4;
    boolean hasNtpServer();
    String getNtpServer();
  }
  public static final class CameraTime extends
      com.google.protobuf.GeneratedMessage
      implements CameraTimeOrBuilder {
    // Use CameraTime.newBuilder() to construct.
    private CameraTime(Builder builder) {
      super(builder);
    }
    private CameraTime(boolean noInit) {}
    
    private static final CameraTime defaultInstance;
    public static CameraTime getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraTime getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraTime_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraTime_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 now = 1;
    public static final int NOW_FIELD_NUMBER = 1;
    private int now_;
    public boolean hasNow() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getNow() {
      return now_;
    }
    
    // optional int32 tz = 2;
    public static final int TZ_FIELD_NUMBER = 2;
    private int tz_;
    public boolean hasTz() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTz() {
      return tz_;
    }
    
    // optional bool ntp_enabled = 3;
    public static final int NTP_ENABLED_FIELD_NUMBER = 3;
    private boolean ntpEnabled_;
    public boolean hasNtpEnabled() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getNtpEnabled() {
      return ntpEnabled_;
    }
    
    // optional string ntp_server = 4;
    public static final int NTP_SERVER_FIELD_NUMBER = 4;
    private java.lang.Object ntpServer_;
    public boolean hasNtpServer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getNtpServer() {
      java.lang.Object ref = ntpServer_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ntpServer_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNtpServerBytes() {
      java.lang.Object ref = ntpServer_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ntpServer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      now_ = 0;
      tz_ = 0;
      ntpEnabled_ = false;
      ntpServer_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, now_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, tz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, ntpEnabled_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNtpServerBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, now_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, tz_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, ntpEnabled_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNtpServerBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraTime_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraTime_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        now_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tz_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ntpEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        ntpServer_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraTime.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraTime getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraTime build() {
        mrtech.smarthome.rpc.Models.CameraTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraTime buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraTime buildPartial() {
        mrtech.smarthome.rpc.Models.CameraTime result = new mrtech.smarthome.rpc.Models.CameraTime(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.now_ = now_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tz_ = tz_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ntpEnabled_ = ntpEnabled_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ntpServer_ = ntpServer_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraTime) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraTime other) {
        if (other == mrtech.smarthome.rpc.Models.CameraTime.getDefaultInstance()) return this;
        if (other.hasNow()) {
          setNow(other.getNow());
        }
        if (other.hasTz()) {
          setTz(other.getTz());
        }
        if (other.hasNtpEnabled()) {
          setNtpEnabled(other.getNtpEnabled());
        }
        if (other.hasNtpServer()) {
          setNtpServer(other.getNtpServer());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              now_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tz_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ntpEnabled_ = input.readBool();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ntpServer_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 now = 1;
      private int now_ ;
      public boolean hasNow() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getNow() {
        return now_;
      }
      public Builder setNow(int value) {
        bitField0_ |= 0x00000001;
        now_ = value;
        onChanged();
        return this;
      }
      public Builder clearNow() {
        bitField0_ = (bitField0_ & ~0x00000001);
        now_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 tz = 2;
      private int tz_ ;
      public boolean hasTz() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTz() {
        return tz_;
      }
      public Builder setTz(int value) {
        bitField0_ |= 0x00000002;
        tz_ = value;
        onChanged();
        return this;
      }
      public Builder clearTz() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tz_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool ntp_enabled = 3;
      private boolean ntpEnabled_ ;
      public boolean hasNtpEnabled() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getNtpEnabled() {
        return ntpEnabled_;
      }
      public Builder setNtpEnabled(boolean value) {
        bitField0_ |= 0x00000004;
        ntpEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearNtpEnabled() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ntpEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string ntp_server = 4;
      private java.lang.Object ntpServer_ = "";
      public boolean hasNtpServer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getNtpServer() {
        java.lang.Object ref = ntpServer_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ntpServer_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNtpServer(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ntpServer_ = value;
        onChanged();
        return this;
      }
      public Builder clearNtpServer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ntpServer_ = getDefaultInstance().getNtpServer();
        onChanged();
        return this;
      }
      void setNtpServer(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ntpServer_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraTime)
    }
    
    static {
      defaultInstance = new CameraTime(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraTime)
  }
  
  public interface CameraSetSnapshotOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string Snapshot = 1;
    boolean hasSnapshot();
    String getSnapshot();
  }
  public static final class CameraSetSnapshot extends
      com.google.protobuf.GeneratedMessage
      implements CameraSetSnapshotOrBuilder {
    // Use CameraSetSnapshot.newBuilder() to construct.
    private CameraSetSnapshot(Builder builder) {
      super(builder);
    }
    private CameraSetSnapshot(boolean noInit) {}
    
    private static final CameraSetSnapshot defaultInstance;
    public static CameraSetSnapshot getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraSetSnapshot getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string Snapshot = 1;
    public static final int SNAPSHOT_FIELD_NUMBER = 1;
    private java.lang.Object snapshot_;
    public boolean hasSnapshot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSnapshot() {
      java.lang.Object ref = snapshot_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          snapshot_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSnapshotBytes() {
      java.lang.Object ref = snapshot_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        snapshot_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      snapshot_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSnapshotBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSnapshotBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSetSnapshot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraSetSnapshot prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraSetSnapshotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraSetSnapshot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        snapshot_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraSetSnapshot.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraSetSnapshot getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraSetSnapshot.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraSetSnapshot build() {
        mrtech.smarthome.rpc.Models.CameraSetSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraSetSnapshot buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraSetSnapshot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraSetSnapshot buildPartial() {
        mrtech.smarthome.rpc.Models.CameraSetSnapshot result = new mrtech.smarthome.rpc.Models.CameraSetSnapshot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.snapshot_ = snapshot_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraSetSnapshot) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraSetSnapshot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraSetSnapshot other) {
        if (other == mrtech.smarthome.rpc.Models.CameraSetSnapshot.getDefaultInstance()) return this;
        if (other.hasSnapshot()) {
          setSnapshot(other.getSnapshot());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              snapshot_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string Snapshot = 1;
      private java.lang.Object snapshot_ = "";
      public boolean hasSnapshot() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSnapshot() {
        java.lang.Object ref = snapshot_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          snapshot_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSnapshot(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        snapshot_ = value;
        onChanged();
        return this;
      }
      public Builder clearSnapshot() {
        bitField0_ = (bitField0_ & ~0x00000001);
        snapshot_ = getDefaultInstance().getSnapshot();
        onChanged();
        return this;
      }
      void setSnapshot(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        snapshot_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraSetSnapshot)
    }
    
    static {
      defaultInstance = new CameraSetSnapshot(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraSetSnapshot)
  }
  
  public interface CameraSnapshotParamOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 cameratype = 1;
    boolean hasCameratype();
    int getCameratype();
    
    // optional int32 resolution = 2;
    boolean hasResolution();
    int getResolution();
    
    // optional int32 resolutionsub = 3;
    boolean hasResolutionsub();
    int getResolutionsub();
    
    // optional int32 resolutionsubsub = 4;
    boolean hasResolutionsubsub();
    int getResolutionsubsub();
    
    // optional int32 vbright = 5;
    boolean hasVbright();
    int getVbright();
    
    // optional int32 vcontrast = 6;
    boolean hasVcontrast();
    int getVcontrast();
    
    // optional int32 vhue = 7;
    boolean hasVhue();
    int getVhue();
    
    // optional int32 vsaturation = 8;
    boolean hasVsaturation();
    int getVsaturation();
    
    // optional bool OSDEnable = 9;
    boolean hasOSDEnable();
    boolean getOSDEnable();
    
    // optional int32 mode = 10;
    boolean hasMode();
    int getMode();
    
    // optional int32 flip = 11;
    boolean hasFlip();
    int getFlip();
    
    // optional int32 enc_size = 12;
    boolean hasEncSize();
    int getEncSize();
    
    // optional int32 enc_framerate = 13;
    boolean hasEncFramerate();
    int getEncFramerate();
    
    // optional int32 enc_keyframe = 14;
    boolean hasEncKeyframe();
    int getEncKeyframe();
    
    // optional int32 enc_quant = 15;
    boolean hasEncQuant();
    int getEncQuant();
    
    // optional int32 enc_ratemode = 16;
    boolean hasEncRatemode();
    int getEncRatemode();
    
    // optional int32 enc_bitrate = 17;
    boolean hasEncBitrate();
    int getEncBitrate();
    
    // optional int32 enc_main_mode = 18;
    boolean hasEncMainMode();
    int getEncMainMode();
    
    // optional int32 sub_enc_size = 19;
    boolean hasSubEncSize();
    int getSubEncSize();
    
    // optional int32 sub_enc_framerate = 20;
    boolean hasSubEncFramerate();
    int getSubEncFramerate();
    
    // optional int32 sub_enc_keyframe = 21;
    boolean hasSubEncKeyframe();
    int getSubEncKeyframe();
    
    // optional int32 sub_enc_quant = 22;
    boolean hasSubEncQuant();
    int getSubEncQuant();
    
    // optional int32 sub_enc_ratemode = 23;
    boolean hasSubEncRatemode();
    int getSubEncRatemode();
    
    // optional int32 sub_enc_bitrate = 24;
    boolean hasSubEncBitrate();
    int getSubEncBitrate();
    
    // optional int32 sub_sub_enc_size = 25;
    boolean hasSubSubEncSize();
    int getSubSubEncSize();
    
    // optional int32 sub_sub_enc_framerate = 26;
    boolean hasSubSubEncFramerate();
    int getSubSubEncFramerate();
    
    // optional int32 sub_sub_enc_keyframe = 27;
    boolean hasSubSubEncKeyframe();
    int getSubSubEncKeyframe();
    
    // optional int32 sub_sub_enc_quant = 28;
    boolean hasSubSubEncQuant();
    int getSubSubEncQuant();
    
    // optional int32 sub_sub_enc_ratemode = 29;
    boolean hasSubSubEncRatemode();
    int getSubSubEncRatemode();
    
    // optional int32 sub_sub_enc_bitrate = 30;
    boolean hasSubSubEncBitrate();
    int getSubSubEncBitrate();
    
    // optional int32 speed = 31;
    boolean hasSpeed();
    int getSpeed();
    
    // optional int32 ircut = 32;
    boolean hasIrcut();
    int getIrcut();
    
    // optional int32 involume = 33;
    boolean hasInvolume();
    int getInvolume();
    
    // optional int32 outvolume = 34;
    boolean hasOutvolume();
    int getOutvolume();
    
    // optional int32 audiotype = 35;
    boolean hasAudiotype();
    int getAudiotype();
  }
  public static final class CameraSnapshotParam extends
      com.google.protobuf.GeneratedMessage
      implements CameraSnapshotParamOrBuilder {
    // Use CameraSnapshotParam.newBuilder() to construct.
    private CameraSnapshotParam(Builder builder) {
      super(builder);
    }
    private CameraSnapshotParam(boolean noInit) {}
    
    private static final CameraSnapshotParam defaultInstance;
    public static CameraSnapshotParam getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraSnapshotParam getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_fieldAccessorTable;
    }
    
    private int bitField0_;
    private int bitField1_;
    // optional int32 cameratype = 1;
    public static final int CAMERATYPE_FIELD_NUMBER = 1;
    private int cameratype_;
    public boolean hasCameratype() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getCameratype() {
      return cameratype_;
    }
    
    // optional int32 resolution = 2;
    public static final int RESOLUTION_FIELD_NUMBER = 2;
    private int resolution_;
    public boolean hasResolution() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getResolution() {
      return resolution_;
    }
    
    // optional int32 resolutionsub = 3;
    public static final int RESOLUTIONSUB_FIELD_NUMBER = 3;
    private int resolutionsub_;
    public boolean hasResolutionsub() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getResolutionsub() {
      return resolutionsub_;
    }
    
    // optional int32 resolutionsubsub = 4;
    public static final int RESOLUTIONSUBSUB_FIELD_NUMBER = 4;
    private int resolutionsubsub_;
    public boolean hasResolutionsubsub() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getResolutionsubsub() {
      return resolutionsubsub_;
    }
    
    // optional int32 vbright = 5;
    public static final int VBRIGHT_FIELD_NUMBER = 5;
    private int vbright_;
    public boolean hasVbright() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getVbright() {
      return vbright_;
    }
    
    // optional int32 vcontrast = 6;
    public static final int VCONTRAST_FIELD_NUMBER = 6;
    private int vcontrast_;
    public boolean hasVcontrast() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getVcontrast() {
      return vcontrast_;
    }
    
    // optional int32 vhue = 7;
    public static final int VHUE_FIELD_NUMBER = 7;
    private int vhue_;
    public boolean hasVhue() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getVhue() {
      return vhue_;
    }
    
    // optional int32 vsaturation = 8;
    public static final int VSATURATION_FIELD_NUMBER = 8;
    private int vsaturation_;
    public boolean hasVsaturation() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public int getVsaturation() {
      return vsaturation_;
    }
    
    // optional bool OSDEnable = 9;
    public static final int OSDENABLE_FIELD_NUMBER = 9;
    private boolean oSDEnable_;
    public boolean hasOSDEnable() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public boolean getOSDEnable() {
      return oSDEnable_;
    }
    
    // optional int32 mode = 10;
    public static final int MODE_FIELD_NUMBER = 10;
    private int mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getMode() {
      return mode_;
    }
    
    // optional int32 flip = 11;
    public static final int FLIP_FIELD_NUMBER = 11;
    private int flip_;
    public boolean hasFlip() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getFlip() {
      return flip_;
    }
    
    // optional int32 enc_size = 12;
    public static final int ENC_SIZE_FIELD_NUMBER = 12;
    private int encSize_;
    public boolean hasEncSize() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getEncSize() {
      return encSize_;
    }
    
    // optional int32 enc_framerate = 13;
    public static final int ENC_FRAMERATE_FIELD_NUMBER = 13;
    private int encFramerate_;
    public boolean hasEncFramerate() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public int getEncFramerate() {
      return encFramerate_;
    }
    
    // optional int32 enc_keyframe = 14;
    public static final int ENC_KEYFRAME_FIELD_NUMBER = 14;
    private int encKeyframe_;
    public boolean hasEncKeyframe() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getEncKeyframe() {
      return encKeyframe_;
    }
    
    // optional int32 enc_quant = 15;
    public static final int ENC_QUANT_FIELD_NUMBER = 15;
    private int encQuant_;
    public boolean hasEncQuant() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public int getEncQuant() {
      return encQuant_;
    }
    
    // optional int32 enc_ratemode = 16;
    public static final int ENC_RATEMODE_FIELD_NUMBER = 16;
    private int encRatemode_;
    public boolean hasEncRatemode() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getEncRatemode() {
      return encRatemode_;
    }
    
    // optional int32 enc_bitrate = 17;
    public static final int ENC_BITRATE_FIELD_NUMBER = 17;
    private int encBitrate_;
    public boolean hasEncBitrate() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public int getEncBitrate() {
      return encBitrate_;
    }
    
    // optional int32 enc_main_mode = 18;
    public static final int ENC_MAIN_MODE_FIELD_NUMBER = 18;
    private int encMainMode_;
    public boolean hasEncMainMode() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getEncMainMode() {
      return encMainMode_;
    }
    
    // optional int32 sub_enc_size = 19;
    public static final int SUB_ENC_SIZE_FIELD_NUMBER = 19;
    private int subEncSize_;
    public boolean hasSubEncSize() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getSubEncSize() {
      return subEncSize_;
    }
    
    // optional int32 sub_enc_framerate = 20;
    public static final int SUB_ENC_FRAMERATE_FIELD_NUMBER = 20;
    private int subEncFramerate_;
    public boolean hasSubEncFramerate() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getSubEncFramerate() {
      return subEncFramerate_;
    }
    
    // optional int32 sub_enc_keyframe = 21;
    public static final int SUB_ENC_KEYFRAME_FIELD_NUMBER = 21;
    private int subEncKeyframe_;
    public boolean hasSubEncKeyframe() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public int getSubEncKeyframe() {
      return subEncKeyframe_;
    }
    
    // optional int32 sub_enc_quant = 22;
    public static final int SUB_ENC_QUANT_FIELD_NUMBER = 22;
    private int subEncQuant_;
    public boolean hasSubEncQuant() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public int getSubEncQuant() {
      return subEncQuant_;
    }
    
    // optional int32 sub_enc_ratemode = 23;
    public static final int SUB_ENC_RATEMODE_FIELD_NUMBER = 23;
    private int subEncRatemode_;
    public boolean hasSubEncRatemode() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    public int getSubEncRatemode() {
      return subEncRatemode_;
    }
    
    // optional int32 sub_enc_bitrate = 24;
    public static final int SUB_ENC_BITRATE_FIELD_NUMBER = 24;
    private int subEncBitrate_;
    public boolean hasSubEncBitrate() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    public int getSubEncBitrate() {
      return subEncBitrate_;
    }
    
    // optional int32 sub_sub_enc_size = 25;
    public static final int SUB_SUB_ENC_SIZE_FIELD_NUMBER = 25;
    private int subSubEncSize_;
    public boolean hasSubSubEncSize() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    public int getSubSubEncSize() {
      return subSubEncSize_;
    }
    
    // optional int32 sub_sub_enc_framerate = 26;
    public static final int SUB_SUB_ENC_FRAMERATE_FIELD_NUMBER = 26;
    private int subSubEncFramerate_;
    public boolean hasSubSubEncFramerate() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    public int getSubSubEncFramerate() {
      return subSubEncFramerate_;
    }
    
    // optional int32 sub_sub_enc_keyframe = 27;
    public static final int SUB_SUB_ENC_KEYFRAME_FIELD_NUMBER = 27;
    private int subSubEncKeyframe_;
    public boolean hasSubSubEncKeyframe() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    public int getSubSubEncKeyframe() {
      return subSubEncKeyframe_;
    }
    
    // optional int32 sub_sub_enc_quant = 28;
    public static final int SUB_SUB_ENC_QUANT_FIELD_NUMBER = 28;
    private int subSubEncQuant_;
    public boolean hasSubSubEncQuant() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    public int getSubSubEncQuant() {
      return subSubEncQuant_;
    }
    
    // optional int32 sub_sub_enc_ratemode = 29;
    public static final int SUB_SUB_ENC_RATEMODE_FIELD_NUMBER = 29;
    private int subSubEncRatemode_;
    public boolean hasSubSubEncRatemode() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    public int getSubSubEncRatemode() {
      return subSubEncRatemode_;
    }
    
    // optional int32 sub_sub_enc_bitrate = 30;
    public static final int SUB_SUB_ENC_BITRATE_FIELD_NUMBER = 30;
    private int subSubEncBitrate_;
    public boolean hasSubSubEncBitrate() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    public int getSubSubEncBitrate() {
      return subSubEncBitrate_;
    }
    
    // optional int32 speed = 31;
    public static final int SPEED_FIELD_NUMBER = 31;
    private int speed_;
    public boolean hasSpeed() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    public int getSpeed() {
      return speed_;
    }
    
    // optional int32 ircut = 32;
    public static final int IRCUT_FIELD_NUMBER = 32;
    private int ircut_;
    public boolean hasIrcut() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    public int getIrcut() {
      return ircut_;
    }
    
    // optional int32 involume = 33;
    public static final int INVOLUME_FIELD_NUMBER = 33;
    private int involume_;
    public boolean hasInvolume() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    public int getInvolume() {
      return involume_;
    }
    
    // optional int32 outvolume = 34;
    public static final int OUTVOLUME_FIELD_NUMBER = 34;
    private int outvolume_;
    public boolean hasOutvolume() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    public int getOutvolume() {
      return outvolume_;
    }
    
    // optional int32 audiotype = 35;
    public static final int AUDIOTYPE_FIELD_NUMBER = 35;
    private int audiotype_;
    public boolean hasAudiotype() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    public int getAudiotype() {
      return audiotype_;
    }
    
    private void initFields() {
      cameratype_ = 0;
      resolution_ = 0;
      resolutionsub_ = 0;
      resolutionsubsub_ = 0;
      vbright_ = 0;
      vcontrast_ = 0;
      vhue_ = 0;
      vsaturation_ = 0;
      oSDEnable_ = false;
      mode_ = 0;
      flip_ = 0;
      encSize_ = 0;
      encFramerate_ = 0;
      encKeyframe_ = 0;
      encQuant_ = 0;
      encRatemode_ = 0;
      encBitrate_ = 0;
      encMainMode_ = 0;
      subEncSize_ = 0;
      subEncFramerate_ = 0;
      subEncKeyframe_ = 0;
      subEncQuant_ = 0;
      subEncRatemode_ = 0;
      subEncBitrate_ = 0;
      subSubEncSize_ = 0;
      subSubEncFramerate_ = 0;
      subSubEncKeyframe_ = 0;
      subSubEncQuant_ = 0;
      subSubEncRatemode_ = 0;
      subSubEncBitrate_ = 0;
      speed_ = 0;
      ircut_ = 0;
      involume_ = 0;
      outvolume_ = 0;
      audiotype_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cameratype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, resolution_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, resolutionsub_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, resolutionsubsub_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, vbright_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, vcontrast_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, vhue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, vsaturation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, oSDEnable_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, mode_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, flip_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, encSize_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, encFramerate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, encKeyframe_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, encQuant_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, encRatemode_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, encBitrate_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, encMainMode_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, subEncSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, subEncFramerate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(21, subEncKeyframe_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeInt32(22, subEncQuant_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeInt32(23, subEncRatemode_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeInt32(24, subEncBitrate_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeInt32(25, subSubEncSize_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeInt32(26, subSubEncFramerate_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeInt32(27, subSubEncKeyframe_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(28, subSubEncQuant_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeInt32(29, subSubEncRatemode_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeInt32(30, subSubEncBitrate_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeInt32(31, speed_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeInt32(32, ircut_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(33, involume_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(34, outvolume_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(35, audiotype_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cameratype_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, resolution_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, resolutionsub_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, resolutionsubsub_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, vbright_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, vcontrast_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, vhue_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, vsaturation_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, oSDEnable_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mode_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, flip_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, encSize_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, encFramerate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, encKeyframe_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, encQuant_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, encRatemode_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, encBitrate_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, encMainMode_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, subEncSize_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, subEncFramerate_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, subEncKeyframe_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, subEncQuant_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, subEncRatemode_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, subEncBitrate_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(25, subSubEncSize_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, subSubEncFramerate_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, subSubEncKeyframe_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, subSubEncQuant_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(29, subSubEncRatemode_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, subSubEncBitrate_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, speed_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(32, ircut_);
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(33, involume_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(34, outvolume_);
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(35, audiotype_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraSnapshotParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraSnapshotParam prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraSnapshotParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraSnapshotParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        cameratype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        resolution_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        resolutionsub_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        resolutionsubsub_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        vbright_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        vcontrast_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        vhue_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        vsaturation_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        oSDEnable_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        mode_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        flip_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        encSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        encFramerate_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        encKeyframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        encQuant_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        encRatemode_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        encBitrate_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        encMainMode_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        subEncSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        subEncFramerate_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        subEncKeyframe_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        subEncQuant_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        subEncRatemode_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        subEncBitrate_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        subSubEncSize_ = 0;
        bitField0_ = (bitField0_ & ~0x01000000);
        subSubEncFramerate_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        subSubEncKeyframe_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        subSubEncQuant_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        subSubEncRatemode_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        subSubEncBitrate_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        speed_ = 0;
        bitField0_ = (bitField0_ & ~0x40000000);
        ircut_ = 0;
        bitField0_ = (bitField0_ & ~0x80000000);
        involume_ = 0;
        bitField1_ = (bitField1_ & ~0x00000001);
        outvolume_ = 0;
        bitField1_ = (bitField1_ & ~0x00000002);
        audiotype_ = 0;
        bitField1_ = (bitField1_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraSnapshotParam getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraSnapshotParam build() {
        mrtech.smarthome.rpc.Models.CameraSnapshotParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraSnapshotParam buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraSnapshotParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraSnapshotParam buildPartial() {
        mrtech.smarthome.rpc.Models.CameraSnapshotParam result = new mrtech.smarthome.rpc.Models.CameraSnapshotParam(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cameratype_ = cameratype_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.resolution_ = resolution_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.resolutionsub_ = resolutionsub_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.resolutionsubsub_ = resolutionsubsub_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.vbright_ = vbright_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.vcontrast_ = vcontrast_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.vhue_ = vhue_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.vsaturation_ = vsaturation_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.oSDEnable_ = oSDEnable_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.flip_ = flip_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.encSize_ = encSize_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.encFramerate_ = encFramerate_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.encKeyframe_ = encKeyframe_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.encQuant_ = encQuant_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.encRatemode_ = encRatemode_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.encBitrate_ = encBitrate_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.encMainMode_ = encMainMode_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.subEncSize_ = subEncSize_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.subEncFramerate_ = subEncFramerate_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.subEncKeyframe_ = subEncKeyframe_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.subEncQuant_ = subEncQuant_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.subEncRatemode_ = subEncRatemode_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.subEncBitrate_ = subEncBitrate_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.subSubEncSize_ = subSubEncSize_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.subSubEncFramerate_ = subSubEncFramerate_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.subSubEncKeyframe_ = subSubEncKeyframe_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.subSubEncQuant_ = subSubEncQuant_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        result.subSubEncRatemode_ = subSubEncRatemode_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.subSubEncBitrate_ = subSubEncBitrate_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        result.speed_ = speed_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        result.ircut_ = ircut_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField1_ |= 0x00000001;
        }
        result.involume_ = involume_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000002;
        }
        result.outvolume_ = outvolume_;
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000004;
        }
        result.audiotype_ = audiotype_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraSnapshotParam) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraSnapshotParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraSnapshotParam other) {
        if (other == mrtech.smarthome.rpc.Models.CameraSnapshotParam.getDefaultInstance()) return this;
        if (other.hasCameratype()) {
          setCameratype(other.getCameratype());
        }
        if (other.hasResolution()) {
          setResolution(other.getResolution());
        }
        if (other.hasResolutionsub()) {
          setResolutionsub(other.getResolutionsub());
        }
        if (other.hasResolutionsubsub()) {
          setResolutionsubsub(other.getResolutionsubsub());
        }
        if (other.hasVbright()) {
          setVbright(other.getVbright());
        }
        if (other.hasVcontrast()) {
          setVcontrast(other.getVcontrast());
        }
        if (other.hasVhue()) {
          setVhue(other.getVhue());
        }
        if (other.hasVsaturation()) {
          setVsaturation(other.getVsaturation());
        }
        if (other.hasOSDEnable()) {
          setOSDEnable(other.getOSDEnable());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasFlip()) {
          setFlip(other.getFlip());
        }
        if (other.hasEncSize()) {
          setEncSize(other.getEncSize());
        }
        if (other.hasEncFramerate()) {
          setEncFramerate(other.getEncFramerate());
        }
        if (other.hasEncKeyframe()) {
          setEncKeyframe(other.getEncKeyframe());
        }
        if (other.hasEncQuant()) {
          setEncQuant(other.getEncQuant());
        }
        if (other.hasEncRatemode()) {
          setEncRatemode(other.getEncRatemode());
        }
        if (other.hasEncBitrate()) {
          setEncBitrate(other.getEncBitrate());
        }
        if (other.hasEncMainMode()) {
          setEncMainMode(other.getEncMainMode());
        }
        if (other.hasSubEncSize()) {
          setSubEncSize(other.getSubEncSize());
        }
        if (other.hasSubEncFramerate()) {
          setSubEncFramerate(other.getSubEncFramerate());
        }
        if (other.hasSubEncKeyframe()) {
          setSubEncKeyframe(other.getSubEncKeyframe());
        }
        if (other.hasSubEncQuant()) {
          setSubEncQuant(other.getSubEncQuant());
        }
        if (other.hasSubEncRatemode()) {
          setSubEncRatemode(other.getSubEncRatemode());
        }
        if (other.hasSubEncBitrate()) {
          setSubEncBitrate(other.getSubEncBitrate());
        }
        if (other.hasSubSubEncSize()) {
          setSubSubEncSize(other.getSubSubEncSize());
        }
        if (other.hasSubSubEncFramerate()) {
          setSubSubEncFramerate(other.getSubSubEncFramerate());
        }
        if (other.hasSubSubEncKeyframe()) {
          setSubSubEncKeyframe(other.getSubSubEncKeyframe());
        }
        if (other.hasSubSubEncQuant()) {
          setSubSubEncQuant(other.getSubSubEncQuant());
        }
        if (other.hasSubSubEncRatemode()) {
          setSubSubEncRatemode(other.getSubSubEncRatemode());
        }
        if (other.hasSubSubEncBitrate()) {
          setSubSubEncBitrate(other.getSubSubEncBitrate());
        }
        if (other.hasSpeed()) {
          setSpeed(other.getSpeed());
        }
        if (other.hasIrcut()) {
          setIrcut(other.getIrcut());
        }
        if (other.hasInvolume()) {
          setInvolume(other.getInvolume());
        }
        if (other.hasOutvolume()) {
          setOutvolume(other.getOutvolume());
        }
        if (other.hasAudiotype()) {
          setAudiotype(other.getAudiotype());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cameratype_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              resolution_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              resolutionsub_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              resolutionsubsub_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              vbright_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              vcontrast_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              vhue_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              vsaturation_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              oSDEnable_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              mode_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              flip_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              encSize_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              encFramerate_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              encKeyframe_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              encQuant_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              encRatemode_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              encBitrate_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              encMainMode_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              subEncSize_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              subEncFramerate_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              subEncKeyframe_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00200000;
              subEncQuant_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              subEncRatemode_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              subEncBitrate_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              subSubEncSize_ = input.readInt32();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              subSubEncFramerate_ = input.readInt32();
              break;
            }
            case 216: {
              bitField0_ |= 0x04000000;
              subSubEncKeyframe_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x08000000;
              subSubEncQuant_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x10000000;
              subSubEncRatemode_ = input.readInt32();
              break;
            }
            case 240: {
              bitField0_ |= 0x20000000;
              subSubEncBitrate_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x40000000;
              speed_ = input.readInt32();
              break;
            }
            case 256: {
              bitField0_ |= 0x80000000;
              ircut_ = input.readInt32();
              break;
            }
            case 264: {
              bitField1_ |= 0x00000001;
              involume_ = input.readInt32();
              break;
            }
            case 272: {
              bitField1_ |= 0x00000002;
              outvolume_ = input.readInt32();
              break;
            }
            case 280: {
              bitField1_ |= 0x00000004;
              audiotype_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      private int bitField1_;
      
      // optional int32 cameratype = 1;
      private int cameratype_ ;
      public boolean hasCameratype() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getCameratype() {
        return cameratype_;
      }
      public Builder setCameratype(int value) {
        bitField0_ |= 0x00000001;
        cameratype_ = value;
        onChanged();
        return this;
      }
      public Builder clearCameratype() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cameratype_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 resolution = 2;
      private int resolution_ ;
      public boolean hasResolution() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getResolution() {
        return resolution_;
      }
      public Builder setResolution(int value) {
        bitField0_ |= 0x00000002;
        resolution_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolution() {
        bitField0_ = (bitField0_ & ~0x00000002);
        resolution_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 resolutionsub = 3;
      private int resolutionsub_ ;
      public boolean hasResolutionsub() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getResolutionsub() {
        return resolutionsub_;
      }
      public Builder setResolutionsub(int value) {
        bitField0_ |= 0x00000004;
        resolutionsub_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutionsub() {
        bitField0_ = (bitField0_ & ~0x00000004);
        resolutionsub_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 resolutionsubsub = 4;
      private int resolutionsubsub_ ;
      public boolean hasResolutionsubsub() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getResolutionsubsub() {
        return resolutionsubsub_;
      }
      public Builder setResolutionsubsub(int value) {
        bitField0_ |= 0x00000008;
        resolutionsubsub_ = value;
        onChanged();
        return this;
      }
      public Builder clearResolutionsubsub() {
        bitField0_ = (bitField0_ & ~0x00000008);
        resolutionsubsub_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 vbright = 5;
      private int vbright_ ;
      public boolean hasVbright() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getVbright() {
        return vbright_;
      }
      public Builder setVbright(int value) {
        bitField0_ |= 0x00000010;
        vbright_ = value;
        onChanged();
        return this;
      }
      public Builder clearVbright() {
        bitField0_ = (bitField0_ & ~0x00000010);
        vbright_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 vcontrast = 6;
      private int vcontrast_ ;
      public boolean hasVcontrast() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getVcontrast() {
        return vcontrast_;
      }
      public Builder setVcontrast(int value) {
        bitField0_ |= 0x00000020;
        vcontrast_ = value;
        onChanged();
        return this;
      }
      public Builder clearVcontrast() {
        bitField0_ = (bitField0_ & ~0x00000020);
        vcontrast_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 vhue = 7;
      private int vhue_ ;
      public boolean hasVhue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getVhue() {
        return vhue_;
      }
      public Builder setVhue(int value) {
        bitField0_ |= 0x00000040;
        vhue_ = value;
        onChanged();
        return this;
      }
      public Builder clearVhue() {
        bitField0_ = (bitField0_ & ~0x00000040);
        vhue_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 vsaturation = 8;
      private int vsaturation_ ;
      public boolean hasVsaturation() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public int getVsaturation() {
        return vsaturation_;
      }
      public Builder setVsaturation(int value) {
        bitField0_ |= 0x00000080;
        vsaturation_ = value;
        onChanged();
        return this;
      }
      public Builder clearVsaturation() {
        bitField0_ = (bitField0_ & ~0x00000080);
        vsaturation_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool OSDEnable = 9;
      private boolean oSDEnable_ ;
      public boolean hasOSDEnable() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public boolean getOSDEnable() {
        return oSDEnable_;
      }
      public Builder setOSDEnable(boolean value) {
        bitField0_ |= 0x00000100;
        oSDEnable_ = value;
        onChanged();
        return this;
      }
      public Builder clearOSDEnable() {
        bitField0_ = (bitField0_ & ~0x00000100);
        oSDEnable_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 mode = 10;
      private int mode_ ;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getMode() {
        return mode_;
      }
      public Builder setMode(int value) {
        bitField0_ |= 0x00000200;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 flip = 11;
      private int flip_ ;
      public boolean hasFlip() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getFlip() {
        return flip_;
      }
      public Builder setFlip(int value) {
        bitField0_ |= 0x00000400;
        flip_ = value;
        onChanged();
        return this;
      }
      public Builder clearFlip() {
        bitField0_ = (bitField0_ & ~0x00000400);
        flip_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_size = 12;
      private int encSize_ ;
      public boolean hasEncSize() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getEncSize() {
        return encSize_;
      }
      public Builder setEncSize(int value) {
        bitField0_ |= 0x00000800;
        encSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncSize() {
        bitField0_ = (bitField0_ & ~0x00000800);
        encSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_framerate = 13;
      private int encFramerate_ ;
      public boolean hasEncFramerate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getEncFramerate() {
        return encFramerate_;
      }
      public Builder setEncFramerate(int value) {
        bitField0_ |= 0x00001000;
        encFramerate_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncFramerate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        encFramerate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_keyframe = 14;
      private int encKeyframe_ ;
      public boolean hasEncKeyframe() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getEncKeyframe() {
        return encKeyframe_;
      }
      public Builder setEncKeyframe(int value) {
        bitField0_ |= 0x00002000;
        encKeyframe_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncKeyframe() {
        bitField0_ = (bitField0_ & ~0x00002000);
        encKeyframe_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_quant = 15;
      private int encQuant_ ;
      public boolean hasEncQuant() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public int getEncQuant() {
        return encQuant_;
      }
      public Builder setEncQuant(int value) {
        bitField0_ |= 0x00004000;
        encQuant_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncQuant() {
        bitField0_ = (bitField0_ & ~0x00004000);
        encQuant_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_ratemode = 16;
      private int encRatemode_ ;
      public boolean hasEncRatemode() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public int getEncRatemode() {
        return encRatemode_;
      }
      public Builder setEncRatemode(int value) {
        bitField0_ |= 0x00008000;
        encRatemode_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncRatemode() {
        bitField0_ = (bitField0_ & ~0x00008000);
        encRatemode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_bitrate = 17;
      private int encBitrate_ ;
      public boolean hasEncBitrate() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public int getEncBitrate() {
        return encBitrate_;
      }
      public Builder setEncBitrate(int value) {
        bitField0_ |= 0x00010000;
        encBitrate_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncBitrate() {
        bitField0_ = (bitField0_ & ~0x00010000);
        encBitrate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enc_main_mode = 18;
      private int encMainMode_ ;
      public boolean hasEncMainMode() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getEncMainMode() {
        return encMainMode_;
      }
      public Builder setEncMainMode(int value) {
        bitField0_ |= 0x00020000;
        encMainMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncMainMode() {
        bitField0_ = (bitField0_ & ~0x00020000);
        encMainMode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_size = 19;
      private int subEncSize_ ;
      public boolean hasSubEncSize() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getSubEncSize() {
        return subEncSize_;
      }
      public Builder setSubEncSize(int value) {
        bitField0_ |= 0x00040000;
        subEncSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncSize() {
        bitField0_ = (bitField0_ & ~0x00040000);
        subEncSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_framerate = 20;
      private int subEncFramerate_ ;
      public boolean hasSubEncFramerate() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getSubEncFramerate() {
        return subEncFramerate_;
      }
      public Builder setSubEncFramerate(int value) {
        bitField0_ |= 0x00080000;
        subEncFramerate_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncFramerate() {
        bitField0_ = (bitField0_ & ~0x00080000);
        subEncFramerate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_keyframe = 21;
      private int subEncKeyframe_ ;
      public boolean hasSubEncKeyframe() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public int getSubEncKeyframe() {
        return subEncKeyframe_;
      }
      public Builder setSubEncKeyframe(int value) {
        bitField0_ |= 0x00100000;
        subEncKeyframe_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncKeyframe() {
        bitField0_ = (bitField0_ & ~0x00100000);
        subEncKeyframe_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_quant = 22;
      private int subEncQuant_ ;
      public boolean hasSubEncQuant() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public int getSubEncQuant() {
        return subEncQuant_;
      }
      public Builder setSubEncQuant(int value) {
        bitField0_ |= 0x00200000;
        subEncQuant_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncQuant() {
        bitField0_ = (bitField0_ & ~0x00200000);
        subEncQuant_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_ratemode = 23;
      private int subEncRatemode_ ;
      public boolean hasSubEncRatemode() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public int getSubEncRatemode() {
        return subEncRatemode_;
      }
      public Builder setSubEncRatemode(int value) {
        bitField0_ |= 0x00400000;
        subEncRatemode_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncRatemode() {
        bitField0_ = (bitField0_ & ~0x00400000);
        subEncRatemode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_enc_bitrate = 24;
      private int subEncBitrate_ ;
      public boolean hasSubEncBitrate() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public int getSubEncBitrate() {
        return subEncBitrate_;
      }
      public Builder setSubEncBitrate(int value) {
        bitField0_ |= 0x00800000;
        subEncBitrate_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubEncBitrate() {
        bitField0_ = (bitField0_ & ~0x00800000);
        subEncBitrate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_size = 25;
      private int subSubEncSize_ ;
      public boolean hasSubSubEncSize() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public int getSubSubEncSize() {
        return subSubEncSize_;
      }
      public Builder setSubSubEncSize(int value) {
        bitField0_ |= 0x01000000;
        subSubEncSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncSize() {
        bitField0_ = (bitField0_ & ~0x01000000);
        subSubEncSize_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_framerate = 26;
      private int subSubEncFramerate_ ;
      public boolean hasSubSubEncFramerate() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public int getSubSubEncFramerate() {
        return subSubEncFramerate_;
      }
      public Builder setSubSubEncFramerate(int value) {
        bitField0_ |= 0x02000000;
        subSubEncFramerate_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncFramerate() {
        bitField0_ = (bitField0_ & ~0x02000000);
        subSubEncFramerate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_keyframe = 27;
      private int subSubEncKeyframe_ ;
      public boolean hasSubSubEncKeyframe() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      public int getSubSubEncKeyframe() {
        return subSubEncKeyframe_;
      }
      public Builder setSubSubEncKeyframe(int value) {
        bitField0_ |= 0x04000000;
        subSubEncKeyframe_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncKeyframe() {
        bitField0_ = (bitField0_ & ~0x04000000);
        subSubEncKeyframe_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_quant = 28;
      private int subSubEncQuant_ ;
      public boolean hasSubSubEncQuant() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      public int getSubSubEncQuant() {
        return subSubEncQuant_;
      }
      public Builder setSubSubEncQuant(int value) {
        bitField0_ |= 0x08000000;
        subSubEncQuant_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncQuant() {
        bitField0_ = (bitField0_ & ~0x08000000);
        subSubEncQuant_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_ratemode = 29;
      private int subSubEncRatemode_ ;
      public boolean hasSubSubEncRatemode() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      public int getSubSubEncRatemode() {
        return subSubEncRatemode_;
      }
      public Builder setSubSubEncRatemode(int value) {
        bitField0_ |= 0x10000000;
        subSubEncRatemode_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncRatemode() {
        bitField0_ = (bitField0_ & ~0x10000000);
        subSubEncRatemode_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 sub_sub_enc_bitrate = 30;
      private int subSubEncBitrate_ ;
      public boolean hasSubSubEncBitrate() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      public int getSubSubEncBitrate() {
        return subSubEncBitrate_;
      }
      public Builder setSubSubEncBitrate(int value) {
        bitField0_ |= 0x20000000;
        subSubEncBitrate_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubSubEncBitrate() {
        bitField0_ = (bitField0_ & ~0x20000000);
        subSubEncBitrate_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 speed = 31;
      private int speed_ ;
      public boolean hasSpeed() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      public int getSpeed() {
        return speed_;
      }
      public Builder setSpeed(int value) {
        bitField0_ |= 0x40000000;
        speed_ = value;
        onChanged();
        return this;
      }
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x40000000);
        speed_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 ircut = 32;
      private int ircut_ ;
      public boolean hasIrcut() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      public int getIrcut() {
        return ircut_;
      }
      public Builder setIrcut(int value) {
        bitField0_ |= 0x80000000;
        ircut_ = value;
        onChanged();
        return this;
      }
      public Builder clearIrcut() {
        bitField0_ = (bitField0_ & ~0x80000000);
        ircut_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 involume = 33;
      private int involume_ ;
      public boolean hasInvolume() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      public int getInvolume() {
        return involume_;
      }
      public Builder setInvolume(int value) {
        bitField1_ |= 0x00000001;
        involume_ = value;
        onChanged();
        return this;
      }
      public Builder clearInvolume() {
        bitField1_ = (bitField1_ & ~0x00000001);
        involume_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 outvolume = 34;
      private int outvolume_ ;
      public boolean hasOutvolume() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      public int getOutvolume() {
        return outvolume_;
      }
      public Builder setOutvolume(int value) {
        bitField1_ |= 0x00000002;
        outvolume_ = value;
        onChanged();
        return this;
      }
      public Builder clearOutvolume() {
        bitField1_ = (bitField1_ & ~0x00000002);
        outvolume_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 audiotype = 35;
      private int audiotype_ ;
      public boolean hasAudiotype() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      public int getAudiotype() {
        return audiotype_;
      }
      public Builder setAudiotype(int value) {
        bitField1_ |= 0x00000004;
        audiotype_ = value;
        onChanged();
        return this;
      }
      public Builder clearAudiotype() {
        bitField1_ = (bitField1_ & ~0x00000004);
        audiotype_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraSnapshotParam)
    }
    
    static {
      defaultInstance = new CameraSnapshotParam(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraSnapshotParam)
  }
  
  public interface CameraNetworkOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool dhcp_enabled = 1;
    boolean hasDhcpEnabled();
    boolean getDhcpEnabled();
    
    // optional string ip_address = 2;
    boolean hasIpAddress();
    String getIpAddress();
    
    // optional string subnet_mask = 3;
    boolean hasSubnetMask();
    String getSubnetMask();
    
    // optional string gateway = 4;
    boolean hasGateway();
    String getGateway();
    
    // optional string dns1 = 5;
    boolean hasDns1();
    String getDns1();
    
    // optional string dns2 = 6;
    boolean hasDns2();
    String getDns2();
    
    // optional int32 port = 7;
    boolean hasPort();
    int getPort();
  }
  public static final class CameraNetwork extends
      com.google.protobuf.GeneratedMessage
      implements CameraNetworkOrBuilder {
    // Use CameraNetwork.newBuilder() to construct.
    private CameraNetwork(Builder builder) {
      super(builder);
    }
    private CameraNetwork(boolean noInit) {}
    
    private static final CameraNetwork defaultInstance;
    public static CameraNetwork getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraNetwork getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraNetwork_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraNetwork_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool dhcp_enabled = 1;
    public static final int DHCP_ENABLED_FIELD_NUMBER = 1;
    private boolean dhcpEnabled_;
    public boolean hasDhcpEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getDhcpEnabled() {
      return dhcpEnabled_;
    }
    
    // optional string ip_address = 2;
    public static final int IP_ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object ipAddress_;
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string subnet_mask = 3;
    public static final int SUBNET_MASK_FIELD_NUMBER = 3;
    private java.lang.Object subnetMask_;
    public boolean hasSubnetMask() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSubnetMask() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subnetMask_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubnetMaskBytes() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subnetMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string gateway = 4;
    public static final int GATEWAY_FIELD_NUMBER = 4;
    private java.lang.Object gateway_;
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getGateway() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          gateway_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGatewayBytes() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dns1 = 5;
    public static final int DNS1_FIELD_NUMBER = 5;
    private java.lang.Object dns1_;
    public boolean hasDns1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getDns1() {
      java.lang.Object ref = dns1_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dns1_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDns1Bytes() {
      java.lang.Object ref = dns1_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dns1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string dns2 = 6;
    public static final int DNS2_FIELD_NUMBER = 6;
    private java.lang.Object dns2_;
    public boolean hasDns2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getDns2() {
      java.lang.Object ref = dns2_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dns2_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDns2Bytes() {
      java.lang.Object ref = dns2_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dns2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 port = 7;
    public static final int PORT_FIELD_NUMBER = 7;
    private int port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getPort() {
      return port_;
    }
    
    private void initFields() {
      dhcpEnabled_ = false;
      ipAddress_ = "";
      subnetMask_ = "";
      gateway_ = "";
      dns1_ = "";
      dns2_ = "";
      port_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, dhcpEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getDns1Bytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getDns2Bytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, port_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, dhcpEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getDns1Bytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getDns2Bytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, port_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraNetwork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraNetwork prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraNetworkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraNetwork_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraNetwork_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraNetwork.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        dhcpEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        subnetMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        dns1_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        dns2_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        port_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraNetwork.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraNetwork getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraNetwork build() {
        mrtech.smarthome.rpc.Models.CameraNetwork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraNetwork buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraNetwork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraNetwork buildPartial() {
        mrtech.smarthome.rpc.Models.CameraNetwork result = new mrtech.smarthome.rpc.Models.CameraNetwork(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.dhcpEnabled_ = dhcpEnabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ipAddress_ = ipAddress_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.subnetMask_ = subnetMask_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.dns1_ = dns1_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.dns2_ = dns2_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.port_ = port_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraNetwork) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraNetwork)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraNetwork other) {
        if (other == mrtech.smarthome.rpc.Models.CameraNetwork.getDefaultInstance()) return this;
        if (other.hasDhcpEnabled()) {
          setDhcpEnabled(other.getDhcpEnabled());
        }
        if (other.hasIpAddress()) {
          setIpAddress(other.getIpAddress());
        }
        if (other.hasSubnetMask()) {
          setSubnetMask(other.getSubnetMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasDns1()) {
          setDns1(other.getDns1());
        }
        if (other.hasDns2()) {
          setDns2(other.getDns2());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              dhcpEnabled_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ipAddress_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              subnetMask_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              gateway_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              dns1_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              dns2_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              port_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool dhcp_enabled = 1;
      private boolean dhcpEnabled_ ;
      public boolean hasDhcpEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getDhcpEnabled() {
        return dhcpEnabled_;
      }
      public Builder setDhcpEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        dhcpEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearDhcpEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        dhcpEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string ip_address = 2;
      private java.lang.Object ipAddress_ = "";
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      void setIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        ipAddress_ = value;
        onChanged();
      }
      
      // optional string subnet_mask = 3;
      private java.lang.Object subnetMask_ = "";
      public boolean hasSubnetMask() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSubnetMask() {
        java.lang.Object ref = subnetMask_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subnetMask_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubnetMask(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        subnetMask_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubnetMask() {
        bitField0_ = (bitField0_ & ~0x00000004);
        subnetMask_ = getDefaultInstance().getSubnetMask();
        onChanged();
        return this;
      }
      void setSubnetMask(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        subnetMask_ = value;
        onChanged();
      }
      
      // optional string gateway = 4;
      private java.lang.Object gateway_ = "";
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getGateway() {
        java.lang.Object ref = gateway_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          gateway_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGateway(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gateway_ = value;
        onChanged();
        return this;
      }
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      void setGateway(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        gateway_ = value;
        onChanged();
      }
      
      // optional string dns1 = 5;
      private java.lang.Object dns1_ = "";
      public boolean hasDns1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getDns1() {
        java.lang.Object ref = dns1_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dns1_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDns1(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        dns1_ = value;
        onChanged();
        return this;
      }
      public Builder clearDns1() {
        bitField0_ = (bitField0_ & ~0x00000010);
        dns1_ = getDefaultInstance().getDns1();
        onChanged();
        return this;
      }
      void setDns1(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        dns1_ = value;
        onChanged();
      }
      
      // optional string dns2 = 6;
      private java.lang.Object dns2_ = "";
      public boolean hasDns2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getDns2() {
        java.lang.Object ref = dns2_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dns2_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDns2(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        dns2_ = value;
        onChanged();
        return this;
      }
      public Builder clearDns2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dns2_ = getDefaultInstance().getDns2();
        onChanged();
        return this;
      }
      void setDns2(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        dns2_ = value;
        onChanged();
      }
      
      // optional int32 port = 7;
      private int port_ ;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getPort() {
        return port_;
      }
      public Builder setPort(int value) {
        bitField0_ |= 0x00000040;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000040);
        port_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraNetwork)
    }
    
    static {
      defaultInstance = new CameraNetwork(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraNetwork)
  }
  
  public interface CameraWlanOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool enabled = 1;
    boolean hasEnabled();
    boolean getEnabled();
    
    // optional string ssid = 2;
    boolean hasSsid();
    String getSsid();
    
    // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 3;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.CameraWlanMode getMode();
    
    // optional .mrtech.smarthome.rpc.CameraWlanEncrypt encryption_type = 4;
    boolean hasEncryptionType();
    mrtech.smarthome.rpc.Models.CameraWlanEncrypt getEncryptionType();
    
    // optional .mrtech.smarthome.rpc.CameraWlanAuthtype authentication_type = 5;
    boolean hasAuthenticationType();
    mrtech.smarthome.rpc.Models.CameraWlanAuthtype getAuthenticationType();
    
    // optional .mrtech.smarthome.rpc.CameraWlanKeyFormat wep_key_format = 6;
    boolean hasWepKeyFormat();
    mrtech.smarthome.rpc.Models.CameraWlanKeyFormat getWepKeyFormat();
    
    // optional string wep_key = 7;
    boolean hasWepKey();
    String getWepKey();
    
    // optional .mrtech.smarthome.rpc.CameraWlanKeyLength wep_key_bits = 8;
    boolean hasWepKeyBits();
    mrtech.smarthome.rpc.Models.CameraWlanKeyLength getWepKeyBits();
    
    // optional string wpa_psk = 9;
    boolean hasWpaPsk();
    String getWpaPsk();
  }
  public static final class CameraWlan extends
      com.google.protobuf.GeneratedMessage
      implements CameraWlanOrBuilder {
    // Use CameraWlan.newBuilder() to construct.
    private CameraWlan(Builder builder) {
      super(builder);
    }
    private CameraWlan(boolean noInit) {}
    
    private static final CameraWlan defaultInstance;
    public static CameraWlan getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraWlan getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWlan_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWlan_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool enabled = 1;
    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    // optional string ssid = 2;
    public static final int SSID_FIELD_NUMBER = 2;
    private java.lang.Object ssid_;
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ssid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 3;
    public static final int MODE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.CameraWlanMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanMode getMode() {
      return mode_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanEncrypt encryption_type = 4;
    public static final int ENCRYPTION_TYPE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.CameraWlanEncrypt encryptionType_;
    public boolean hasEncryptionType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanEncrypt getEncryptionType() {
      return encryptionType_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanAuthtype authentication_type = 5;
    public static final int AUTHENTICATION_TYPE_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.CameraWlanAuthtype authenticationType_;
    public boolean hasAuthenticationType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanAuthtype getAuthenticationType() {
      return authenticationType_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanKeyFormat wep_key_format = 6;
    public static final int WEP_KEY_FORMAT_FIELD_NUMBER = 6;
    private mrtech.smarthome.rpc.Models.CameraWlanKeyFormat wepKeyFormat_;
    public boolean hasWepKeyFormat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanKeyFormat getWepKeyFormat() {
      return wepKeyFormat_;
    }
    
    // optional string wep_key = 7;
    public static final int WEP_KEY_FIELD_NUMBER = 7;
    private java.lang.Object wepKey_;
    public boolean hasWepKey() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getWepKey() {
      java.lang.Object ref = wepKey_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wepKey_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWepKeyBytes() {
      java.lang.Object ref = wepKey_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wepKey_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanKeyLength wep_key_bits = 8;
    public static final int WEP_KEY_BITS_FIELD_NUMBER = 8;
    private mrtech.smarthome.rpc.Models.CameraWlanKeyLength wepKeyBits_;
    public boolean hasWepKeyBits() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanKeyLength getWepKeyBits() {
      return wepKeyBits_;
    }
    
    // optional string wpa_psk = 9;
    public static final int WPA_PSK_FIELD_NUMBER = 9;
    private java.lang.Object wpaPsk_;
    public boolean hasWpaPsk() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getWpaPsk() {
      java.lang.Object ref = wpaPsk_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wpaPsk_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWpaPskBytes() {
      java.lang.Object ref = wpaPsk_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wpaPsk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      enabled_ = false;
      ssid_ = "";
      mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
      encryptionType_ = mrtech.smarthome.rpc.Models.CameraWlanEncrypt.CAMERA_WLAN_ENCRYPT_OPEN;
      authenticationType_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
      wepKeyFormat_ = mrtech.smarthome.rpc.Models.CameraWlanKeyFormat.CAMERA_WLAN_KEY_FORMAT_HEX;
      wepKey_ = "";
      wepKeyBits_ = mrtech.smarthome.rpc.Models.CameraWlanKeyLength.CAMERA_WLAN_KEY_LENGTH_64BIT;
      wpaPsk_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSsidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, encryptionType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, authenticationType_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, wepKeyFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getWepKeyBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, wepKeyBits_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getWpaPskBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSsidBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, encryptionType_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, authenticationType_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, wepKeyFormat_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getWepKeyBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, wepKeyBits_.getNumber());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getWpaPskBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWlan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraWlan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraWlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWlan_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWlan_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraWlan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
        bitField0_ = (bitField0_ & ~0x00000004);
        encryptionType_ = mrtech.smarthome.rpc.Models.CameraWlanEncrypt.CAMERA_WLAN_ENCRYPT_OPEN;
        bitField0_ = (bitField0_ & ~0x00000008);
        authenticationType_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
        bitField0_ = (bitField0_ & ~0x00000010);
        wepKeyFormat_ = mrtech.smarthome.rpc.Models.CameraWlanKeyFormat.CAMERA_WLAN_KEY_FORMAT_HEX;
        bitField0_ = (bitField0_ & ~0x00000020);
        wepKey_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        wepKeyBits_ = mrtech.smarthome.rpc.Models.CameraWlanKeyLength.CAMERA_WLAN_KEY_LENGTH_64BIT;
        bitField0_ = (bitField0_ & ~0x00000080);
        wpaPsk_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraWlan.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraWlan getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraWlan build() {
        mrtech.smarthome.rpc.Models.CameraWlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraWlan buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraWlan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraWlan buildPartial() {
        mrtech.smarthome.rpc.Models.CameraWlan result = new mrtech.smarthome.rpc.Models.CameraWlan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.encryptionType_ = encryptionType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.authenticationType_ = authenticationType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.wepKeyFormat_ = wepKeyFormat_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.wepKey_ = wepKey_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wepKeyBits_ = wepKeyBits_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.wpaPsk_ = wpaPsk_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraWlan) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraWlan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraWlan other) {
        if (other == mrtech.smarthome.rpc.Models.CameraWlan.getDefaultInstance()) return this;
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasSsid()) {
          setSsid(other.getSsid());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasEncryptionType()) {
          setEncryptionType(other.getEncryptionType());
        }
        if (other.hasAuthenticationType()) {
          setAuthenticationType(other.getAuthenticationType());
        }
        if (other.hasWepKeyFormat()) {
          setWepKeyFormat(other.getWepKeyFormat());
        }
        if (other.hasWepKey()) {
          setWepKey(other.getWepKey());
        }
        if (other.hasWepKeyBits()) {
          setWepKeyBits(other.getWepKeyBits());
        }
        if (other.hasWpaPsk()) {
          setWpaPsk(other.getWpaPsk());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enabled_ = input.readBool();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ssid_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanMode value = mrtech.smarthome.rpc.Models.CameraWlanMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                mode_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanEncrypt value = mrtech.smarthome.rpc.Models.CameraWlanEncrypt.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                encryptionType_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanAuthtype value = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                authenticationType_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanKeyFormat value = mrtech.smarthome.rpc.Models.CameraWlanKeyFormat.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                wepKeyFormat_ = value;
              }
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              wepKey_ = input.readBytes();
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanKeyLength value = mrtech.smarthome.rpc.Models.CameraWlanKeyLength.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                wepKeyBits_ = value;
              }
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              wpaPsk_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool enabled = 1;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // optional string ssid = 2;
      private java.lang.Object ssid_ = "";
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      void setSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        ssid_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 3;
      private mrtech.smarthome.rpc.Models.CameraWlanMode mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.CameraWlanMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanEncrypt encryption_type = 4;
      private mrtech.smarthome.rpc.Models.CameraWlanEncrypt encryptionType_ = mrtech.smarthome.rpc.Models.CameraWlanEncrypt.CAMERA_WLAN_ENCRYPT_OPEN;
      public boolean hasEncryptionType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanEncrypt getEncryptionType() {
        return encryptionType_;
      }
      public Builder setEncryptionType(mrtech.smarthome.rpc.Models.CameraWlanEncrypt value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        encryptionType_ = value;
        onChanged();
        return this;
      }
      public Builder clearEncryptionType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        encryptionType_ = mrtech.smarthome.rpc.Models.CameraWlanEncrypt.CAMERA_WLAN_ENCRYPT_OPEN;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanAuthtype authentication_type = 5;
      private mrtech.smarthome.rpc.Models.CameraWlanAuthtype authenticationType_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
      public boolean hasAuthenticationType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanAuthtype getAuthenticationType() {
        return authenticationType_;
      }
      public Builder setAuthenticationType(mrtech.smarthome.rpc.Models.CameraWlanAuthtype value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        authenticationType_ = value;
        onChanged();
        return this;
      }
      public Builder clearAuthenticationType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        authenticationType_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanKeyFormat wep_key_format = 6;
      private mrtech.smarthome.rpc.Models.CameraWlanKeyFormat wepKeyFormat_ = mrtech.smarthome.rpc.Models.CameraWlanKeyFormat.CAMERA_WLAN_KEY_FORMAT_HEX;
      public boolean hasWepKeyFormat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanKeyFormat getWepKeyFormat() {
        return wepKeyFormat_;
      }
      public Builder setWepKeyFormat(mrtech.smarthome.rpc.Models.CameraWlanKeyFormat value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        wepKeyFormat_ = value;
        onChanged();
        return this;
      }
      public Builder clearWepKeyFormat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        wepKeyFormat_ = mrtech.smarthome.rpc.Models.CameraWlanKeyFormat.CAMERA_WLAN_KEY_FORMAT_HEX;
        onChanged();
        return this;
      }
      
      // optional string wep_key = 7;
      private java.lang.Object wepKey_ = "";
      public boolean hasWepKey() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getWepKey() {
        java.lang.Object ref = wepKey_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wepKey_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWepKey(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        wepKey_ = value;
        onChanged();
        return this;
      }
      public Builder clearWepKey() {
        bitField0_ = (bitField0_ & ~0x00000040);
        wepKey_ = getDefaultInstance().getWepKey();
        onChanged();
        return this;
      }
      void setWepKey(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        wepKey_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanKeyLength wep_key_bits = 8;
      private mrtech.smarthome.rpc.Models.CameraWlanKeyLength wepKeyBits_ = mrtech.smarthome.rpc.Models.CameraWlanKeyLength.CAMERA_WLAN_KEY_LENGTH_64BIT;
      public boolean hasWepKeyBits() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanKeyLength getWepKeyBits() {
        return wepKeyBits_;
      }
      public Builder setWepKeyBits(mrtech.smarthome.rpc.Models.CameraWlanKeyLength value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        wepKeyBits_ = value;
        onChanged();
        return this;
      }
      public Builder clearWepKeyBits() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wepKeyBits_ = mrtech.smarthome.rpc.Models.CameraWlanKeyLength.CAMERA_WLAN_KEY_LENGTH_64BIT;
        onChanged();
        return this;
      }
      
      // optional string wpa_psk = 9;
      private java.lang.Object wpaPsk_ = "";
      public boolean hasWpaPsk() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getWpaPsk() {
        java.lang.Object ref = wpaPsk_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wpaPsk_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWpaPsk(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        wpaPsk_ = value;
        onChanged();
        return this;
      }
      public Builder clearWpaPsk() {
        bitField0_ = (bitField0_ & ~0x00000100);
        wpaPsk_ = getDefaultInstance().getWpaPsk();
        onChanged();
        return this;
      }
      void setWpaPsk(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        wpaPsk_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraWlan)
    }
    
    static {
      defaultInstance = new CameraWlan(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraWlan)
  }
  
  public interface CameraWifiApOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string ssid = 1;
    boolean hasSsid();
    String getSsid();
    
    // optional string mac = 2;
    boolean hasMac();
    String getMac();
    
    // optional .mrtech.smarthome.rpc.CameraWlanAuthtype security = 3;
    boolean hasSecurity();
    mrtech.smarthome.rpc.Models.CameraWlanAuthtype getSecurity();
    
    // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 4;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.CameraWlanMode getMode();
    
    // optional float link_quality = 5;
    boolean hasLinkQuality();
    float getLinkQuality();
  }
  public static final class CameraWifiAp extends
      com.google.protobuf.GeneratedMessage
      implements CameraWifiApOrBuilder {
    // Use CameraWifiAp.newBuilder() to construct.
    private CameraWifiAp(Builder builder) {
      super(builder);
    }
    private CameraWifiAp(boolean noInit) {}
    
    private static final CameraWifiAp defaultInstance;
    public static CameraWifiAp getDefaultInstance() {
      return defaultInstance;
    }
    
    public CameraWifiAp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWifiAp_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWifiAp_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ssid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string mac = 2;
    public static final int MAC_FIELD_NUMBER = 2;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanAuthtype security = 3;
    public static final int SECURITY_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.CameraWlanAuthtype security_;
    public boolean hasSecurity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanAuthtype getSecurity() {
      return security_;
    }
    
    // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 4;
    public static final int MODE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.CameraWlanMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.CameraWlanMode getMode() {
      return mode_;
    }
    
    // optional float link_quality = 5;
    public static final int LINK_QUALITY_FIELD_NUMBER = 5;
    private float linkQuality_;
    public boolean hasLinkQuality() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getLinkQuality() {
      return linkQuality_;
    }
    
    private void initFields() {
      ssid_ = "";
      mac_ = "";
      security_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
      mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
      linkQuality_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, security_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, linkQuality_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, security_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, linkQuality_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CameraWifiAp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CameraWifiAp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CameraWifiApOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWifiAp_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CameraWifiAp_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CameraWifiAp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        security_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
        bitField0_ = (bitField0_ & ~0x00000004);
        mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
        bitField0_ = (bitField0_ & ~0x00000008);
        linkQuality_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CameraWifiAp.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CameraWifiAp getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CameraWifiAp.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CameraWifiAp build() {
        mrtech.smarthome.rpc.Models.CameraWifiAp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CameraWifiAp buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CameraWifiAp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CameraWifiAp buildPartial() {
        mrtech.smarthome.rpc.Models.CameraWifiAp result = new mrtech.smarthome.rpc.Models.CameraWifiAp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.security_ = security_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.linkQuality_ = linkQuality_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CameraWifiAp) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CameraWifiAp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CameraWifiAp other) {
        if (other == mrtech.smarthome.rpc.Models.CameraWifiAp.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          setSsid(other.getSsid());
        }
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasSecurity()) {
          setSecurity(other.getSecurity());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasLinkQuality()) {
          setLinkQuality(other.getLinkQuality());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              mac_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanAuthtype value = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                security_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CameraWlanMode value = mrtech.smarthome.rpc.Models.CameraWlanMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                mode_ = value;
              }
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              linkQuality_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string ssid = 1;
      private java.lang.Object ssid_ = "";
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      void setSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
      }
      
      // optional string mac = 2;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        mac_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanAuthtype security = 3;
      private mrtech.smarthome.rpc.Models.CameraWlanAuthtype security_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanAuthtype getSecurity() {
        return security_;
      }
      public Builder setSecurity(mrtech.smarthome.rpc.Models.CameraWlanAuthtype value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        security_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecurity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        security_ = mrtech.smarthome.rpc.Models.CameraWlanAuthtype.CAMERA_WLAN_AUTHTYPE_NONE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.CameraWlanMode mode = 4;
      private mrtech.smarthome.rpc.Models.CameraWlanMode mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.CameraWlanMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.CameraWlanMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        mode_ = mrtech.smarthome.rpc.Models.CameraWlanMode.CAMERA_WLAN_MODE_INFRA;
        onChanged();
        return this;
      }
      
      // optional float link_quality = 5;
      private float linkQuality_ ;
      public boolean hasLinkQuality() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getLinkQuality() {
        return linkQuality_;
      }
      public Builder setLinkQuality(float value) {
        bitField0_ |= 0x00000010;
        linkQuality_ = value;
        onChanged();
        return this;
      }
      public Builder clearLinkQuality() {
        bitField0_ = (bitField0_ & ~0x00000010);
        linkQuality_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CameraWifiAp)
    }
    
    static {
      defaultInstance = new CameraWifiAp(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CameraWifiAp)
  }
  
  public interface TimelineQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 since = 1;
    boolean hasSince();
    long getSince();
    
    // optional int64 until = 2;
    boolean hasUntil();
    long getUntil();
    
    // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
    boolean hasLevel();
    mrtech.smarthome.rpc.Models.TimelineLevel getLevel();
    
    // optional .mrtech.smarthome.rpc.TimelineType type = 4;
    boolean hasType();
    mrtech.smarthome.rpc.Models.TimelineType getType();
    
    // optional bool fixed_paging = 5;
    boolean hasFixedPaging();
    boolean getFixedPaging();
    
    // optional int32 page = 6;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 7;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class TimelineQuery extends
      com.google.protobuf.GeneratedMessage
      implements TimelineQueryOrBuilder {
    // Use TimelineQuery.newBuilder() to construct.
    private TimelineQuery(Builder builder) {
      super(builder);
    }
    private TimelineQuery(boolean noInit) {}
    
    private static final TimelineQuery defaultInstance;
    public static TimelineQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public TimelineQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TimelineQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TimelineQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 since = 1;
    public static final int SINCE_FIELD_NUMBER = 1;
    private long since_;
    public boolean hasSince() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSince() {
      return since_;
    }
    
    // optional int64 until = 2;
    public static final int UNTIL_FIELD_NUMBER = 2;
    private long until_;
    public boolean hasUntil() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUntil() {
      return until_;
    }
    
    // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
    public static final int LEVEL_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.TimelineLevel level_;
    public boolean hasLevel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.TimelineLevel getLevel() {
      return level_;
    }
    
    // optional .mrtech.smarthome.rpc.TimelineType type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.TimelineType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.TimelineType getType() {
      return type_;
    }
    
    // optional bool fixed_paging = 5;
    public static final int FIXED_PAGING_FIELD_NUMBER = 5;
    private boolean fixedPaging_;
    public boolean hasFixedPaging() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getFixedPaging() {
      return fixedPaging_;
    }
    
    // optional int32 page = 6;
    public static final int PAGE_FIELD_NUMBER = 6;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 7;
    public static final int PAGE_SIZE_FIELD_NUMBER = 7;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      since_ = 0L;
      until_ = 0L;
      level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
      fixedPaging_ = false;
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, since_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, until_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, level_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, fixedPaging_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, page_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, since_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, until_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, level_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, fixedPaging_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, page_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.TimelineQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.TimelineQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.TimelineQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TimelineQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_TimelineQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.TimelineQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        since_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        until_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
        bitField0_ = (bitField0_ & ~0x00000008);
        fixedPaging_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.TimelineQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.TimelineQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.TimelineQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.TimelineQuery build() {
        mrtech.smarthome.rpc.Models.TimelineQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.TimelineQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.TimelineQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.TimelineQuery buildPartial() {
        mrtech.smarthome.rpc.Models.TimelineQuery result = new mrtech.smarthome.rpc.Models.TimelineQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.since_ = since_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.until_ = until_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.level_ = level_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fixedPaging_ = fixedPaging_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.TimelineQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.TimelineQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.TimelineQuery other) {
        if (other == mrtech.smarthome.rpc.Models.TimelineQuery.getDefaultInstance()) return this;
        if (other.hasSince()) {
          setSince(other.getSince());
        }
        if (other.hasUntil()) {
          setUntil(other.getUntil());
        }
        if (other.hasLevel()) {
          setLevel(other.getLevel());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasFixedPaging()) {
          setFixedPaging(other.getFixedPaging());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              since_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              until_ = input.readInt64();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.TimelineLevel value = mrtech.smarthome.rpc.Models.TimelineLevel.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                level_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.TimelineType value = mrtech.smarthome.rpc.Models.TimelineType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              fixedPaging_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              page_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 since = 1;
      private long since_ ;
      public boolean hasSince() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSince() {
        return since_;
      }
      public Builder setSince(long value) {
        bitField0_ |= 0x00000001;
        since_ = value;
        onChanged();
        return this;
      }
      public Builder clearSince() {
        bitField0_ = (bitField0_ & ~0x00000001);
        since_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 until = 2;
      private long until_ ;
      public boolean hasUntil() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUntil() {
        return until_;
      }
      public Builder setUntil(long value) {
        bitField0_ |= 0x00000002;
        until_ = value;
        onChanged();
        return this;
      }
      public Builder clearUntil() {
        bitField0_ = (bitField0_ & ~0x00000002);
        until_ = 0L;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.TimelineLevel level = 3;
      private mrtech.smarthome.rpc.Models.TimelineLevel level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
      public boolean hasLevel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.TimelineLevel getLevel() {
        return level_;
      }
      public Builder setLevel(mrtech.smarthome.rpc.Models.TimelineLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        level_ = value;
        onChanged();
        return this;
      }
      public Builder clearLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        level_ = mrtech.smarthome.rpc.Models.TimelineLevel.TIMELINE_LEVEL_INFO;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.TimelineType type = 4;
      private mrtech.smarthome.rpc.Models.TimelineType type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.TimelineType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.TimelineType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = mrtech.smarthome.rpc.Models.TimelineType.TIMELINE_TYPE_SYSTEM_STARTUP;
        onChanged();
        return this;
      }
      
      // optional bool fixed_paging = 5;
      private boolean fixedPaging_ ;
      public boolean hasFixedPaging() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getFixedPaging() {
        return fixedPaging_;
      }
      public Builder setFixedPaging(boolean value) {
        bitField0_ |= 0x00000010;
        fixedPaging_ = value;
        onChanged();
        return this;
      }
      public Builder clearFixedPaging() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fixedPaging_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 page = 6;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000020;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000020);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 7;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000040;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.TimelineQuery)
    }
    
    static {
      defaultInstance = new TimelineQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.TimelineQuery)
  }
  
  public interface ProductInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string hw_version = 1;
    boolean hasHwVersion();
    String getHwVersion();
    
    // optional string sw_version = 2;
    boolean hasSwVersion();
    String getSwVersion();
    
    // optional float db_schema_version = 3;
    boolean hasDbSchemaVersion();
    float getDbSchemaVersion();
    
    // optional string sku = 4;
    boolean hasSku();
    String getSku();
    
    // optional string imei = 5;
    boolean hasImei();
    String getImei();
    
    // optional string cloud_id = 6;
    boolean hasCloudId();
    String getCloudId();
    
    // optional string lan_mac = 7;
    boolean hasLanMac();
    String getLanMac();
    
    // optional string wlan_mac = 8;
    boolean hasWlanMac();
    String getWlanMac();
    
    // optional string wlan_5g_mac = 9;
    boolean hasWlan5GMac();
    String getWlan5GMac();
    
    // optional string zigbee_mac = 10;
    boolean hasZigbeeMac();
    String getZigbeeMac();
    
    // optional string product_id = 11;
    boolean hasProductId();
    String getProductId();
    
    // optional string manufacture_date = 12;
    boolean hasManufactureDate();
    String getManufactureDate();
    
    // optional string runtime_version = 13;
    boolean hasRuntimeVersion();
    String getRuntimeVersion();
    
    // optional string web_version = 14;
    boolean hasWebVersion();
    String getWebVersion();
    
    // optional string os_version = 15;
    boolean hasOsVersion();
    String getOsVersion();
    
    // optional string wan_mac = 16;
    boolean hasWanMac();
    String getWanMac();
  }
  public static final class ProductInfo extends
      com.google.protobuf.GeneratedMessage
      implements ProductInfoOrBuilder {
    // Use ProductInfo.newBuilder() to construct.
    private ProductInfo(Builder builder) {
      super(builder);
    }
    private ProductInfo(boolean noInit) {}
    
    private static final ProductInfo defaultInstance;
    public static ProductInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public ProductInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ProductInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ProductInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string hw_version = 1;
    public static final int HW_VERSION_FIELD_NUMBER = 1;
    private java.lang.Object hwVersion_;
    public boolean hasHwVersion() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getHwVersion() {
      java.lang.Object ref = hwVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          hwVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getHwVersionBytes() {
      java.lang.Object ref = hwVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        hwVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string sw_version = 2;
    public static final int SW_VERSION_FIELD_NUMBER = 2;
    private java.lang.Object swVersion_;
    public boolean hasSwVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getSwVersion() {
      java.lang.Object ref = swVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          swVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSwVersionBytes() {
      java.lang.Object ref = swVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        swVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional float db_schema_version = 3;
    public static final int DB_SCHEMA_VERSION_FIELD_NUMBER = 3;
    private float dbSchemaVersion_;
    public boolean hasDbSchemaVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getDbSchemaVersion() {
      return dbSchemaVersion_;
    }
    
    // optional string sku = 4;
    public static final int SKU_FIELD_NUMBER = 4;
    private java.lang.Object sku_;
    public boolean hasSku() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getSku() {
      java.lang.Object ref = sku_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          sku_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSkuBytes() {
      java.lang.Object ref = sku_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        sku_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string imei = 5;
    public static final int IMEI_FIELD_NUMBER = 5;
    private java.lang.Object imei_;
    public boolean hasImei() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getImei() {
      java.lang.Object ref = imei_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          imei_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getImeiBytes() {
      java.lang.Object ref = imei_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        imei_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string cloud_id = 6;
    public static final int CLOUD_ID_FIELD_NUMBER = 6;
    private java.lang.Object cloudId_;
    public boolean hasCloudId() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getCloudId() {
      java.lang.Object ref = cloudId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cloudId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCloudIdBytes() {
      java.lang.Object ref = cloudId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cloudId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string lan_mac = 7;
    public static final int LAN_MAC_FIELD_NUMBER = 7;
    private java.lang.Object lanMac_;
    public boolean hasLanMac() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getLanMac() {
      java.lang.Object ref = lanMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          lanMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanMacBytes() {
      java.lang.Object ref = lanMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        lanMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wlan_mac = 8;
    public static final int WLAN_MAC_FIELD_NUMBER = 8;
    private java.lang.Object wlanMac_;
    public boolean hasWlanMac() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getWlanMac() {
      java.lang.Object ref = wlanMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wlanMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWlanMacBytes() {
      java.lang.Object ref = wlanMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wlanMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wlan_5g_mac = 9;
    public static final int WLAN_5G_MAC_FIELD_NUMBER = 9;
    private java.lang.Object wlan5GMac_;
    public boolean hasWlan5GMac() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getWlan5GMac() {
      java.lang.Object ref = wlan5GMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wlan5GMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWlan5GMacBytes() {
      java.lang.Object ref = wlan5GMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wlan5GMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string zigbee_mac = 10;
    public static final int ZIGBEE_MAC_FIELD_NUMBER = 10;
    private java.lang.Object zigbeeMac_;
    public boolean hasZigbeeMac() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getZigbeeMac() {
      java.lang.Object ref = zigbeeMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          zigbeeMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getZigbeeMacBytes() {
      java.lang.Object ref = zigbeeMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        zigbeeMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string product_id = 11;
    public static final int PRODUCT_ID_FIELD_NUMBER = 11;
    private java.lang.Object productId_;
    public boolean hasProductId() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getProductId() {
      java.lang.Object ref = productId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          productId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getProductIdBytes() {
      java.lang.Object ref = productId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        productId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string manufacture_date = 12;
    public static final int MANUFACTURE_DATE_FIELD_NUMBER = 12;
    private java.lang.Object manufactureDate_;
    public boolean hasManufactureDate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getManufactureDate() {
      java.lang.Object ref = manufactureDate_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          manufactureDate_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getManufactureDateBytes() {
      java.lang.Object ref = manufactureDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        manufactureDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string runtime_version = 13;
    public static final int RUNTIME_VERSION_FIELD_NUMBER = 13;
    private java.lang.Object runtimeVersion_;
    public boolean hasRuntimeVersion() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getRuntimeVersion() {
      java.lang.Object ref = runtimeVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          runtimeVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRuntimeVersionBytes() {
      java.lang.Object ref = runtimeVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        runtimeVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string web_version = 14;
    public static final int WEB_VERSION_FIELD_NUMBER = 14;
    private java.lang.Object webVersion_;
    public boolean hasWebVersion() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getWebVersion() {
      java.lang.Object ref = webVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          webVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWebVersionBytes() {
      java.lang.Object ref = webVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        webVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string os_version = 15;
    public static final int OS_VERSION_FIELD_NUMBER = 15;
    private java.lang.Object osVersion_;
    public boolean hasOsVersion() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getOsVersion() {
      java.lang.Object ref = osVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          osVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getOsVersionBytes() {
      java.lang.Object ref = osVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        osVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wan_mac = 16;
    public static final int WAN_MAC_FIELD_NUMBER = 16;
    private java.lang.Object wanMac_;
    public boolean hasWanMac() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public String getWanMac() {
      java.lang.Object ref = wanMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanMacBytes() {
      java.lang.Object ref = wanMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      hwVersion_ = "";
      swVersion_ = "";
      dbSchemaVersion_ = 0F;
      sku_ = "";
      imei_ = "";
      cloudId_ = "";
      lanMac_ = "";
      wlanMac_ = "";
      wlan5GMac_ = "";
      zigbeeMac_ = "";
      productId_ = "";
      manufactureDate_ = "";
      runtimeVersion_ = "";
      webVersion_ = "";
      osVersion_ = "";
      wanMac_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getHwVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getSwVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, dbSchemaVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getSkuBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getImeiBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCloudIdBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getLanMacBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getWlanMacBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getWlan5GMacBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getZigbeeMacBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getProductIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getManufactureDateBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getRuntimeVersionBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getWebVersionBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(15, getOsVersionBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBytes(16, getWanMacBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getHwVersionBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getSwVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, dbSchemaVersion_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getSkuBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getImeiBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCloudIdBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getLanMacBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getWlanMacBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getWlan5GMacBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getZigbeeMacBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getProductIdBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getManufactureDateBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getRuntimeVersionBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getWebVersionBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getOsVersionBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getWanMacBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.ProductInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.ProductInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.ProductInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ProductInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_ProductInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.ProductInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        hwVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        swVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        dbSchemaVersion_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        sku_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        imei_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        cloudId_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        lanMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        wlanMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        wlan5GMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        zigbeeMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        productId_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        manufactureDate_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        runtimeVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        webVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        osVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        wanMac_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.ProductInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.ProductInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.ProductInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.ProductInfo build() {
        mrtech.smarthome.rpc.Models.ProductInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.ProductInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.ProductInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.ProductInfo buildPartial() {
        mrtech.smarthome.rpc.Models.ProductInfo result = new mrtech.smarthome.rpc.Models.ProductInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.hwVersion_ = hwVersion_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.swVersion_ = swVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dbSchemaVersion_ = dbSchemaVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sku_ = sku_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.imei_ = imei_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.cloudId_ = cloudId_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.lanMac_ = lanMac_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wlanMac_ = wlanMac_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.wlan5GMac_ = wlan5GMac_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.zigbeeMac_ = zigbeeMac_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.productId_ = productId_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.manufactureDate_ = manufactureDate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.runtimeVersion_ = runtimeVersion_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.webVersion_ = webVersion_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.osVersion_ = osVersion_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.wanMac_ = wanMac_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.ProductInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.ProductInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.ProductInfo other) {
        if (other == mrtech.smarthome.rpc.Models.ProductInfo.getDefaultInstance()) return this;
        if (other.hasHwVersion()) {
          setHwVersion(other.getHwVersion());
        }
        if (other.hasSwVersion()) {
          setSwVersion(other.getSwVersion());
        }
        if (other.hasDbSchemaVersion()) {
          setDbSchemaVersion(other.getDbSchemaVersion());
        }
        if (other.hasSku()) {
          setSku(other.getSku());
        }
        if (other.hasImei()) {
          setImei(other.getImei());
        }
        if (other.hasCloudId()) {
          setCloudId(other.getCloudId());
        }
        if (other.hasLanMac()) {
          setLanMac(other.getLanMac());
        }
        if (other.hasWlanMac()) {
          setWlanMac(other.getWlanMac());
        }
        if (other.hasWlan5GMac()) {
          setWlan5GMac(other.getWlan5GMac());
        }
        if (other.hasZigbeeMac()) {
          setZigbeeMac(other.getZigbeeMac());
        }
        if (other.hasProductId()) {
          setProductId(other.getProductId());
        }
        if (other.hasManufactureDate()) {
          setManufactureDate(other.getManufactureDate());
        }
        if (other.hasRuntimeVersion()) {
          setRuntimeVersion(other.getRuntimeVersion());
        }
        if (other.hasWebVersion()) {
          setWebVersion(other.getWebVersion());
        }
        if (other.hasOsVersion()) {
          setOsVersion(other.getOsVersion());
        }
        if (other.hasWanMac()) {
          setWanMac(other.getWanMac());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              hwVersion_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              swVersion_ = input.readBytes();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              dbSchemaVersion_ = input.readFloat();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              sku_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              imei_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              cloudId_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              lanMac_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              wlanMac_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              wlan5GMac_ = input.readBytes();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              zigbeeMac_ = input.readBytes();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              productId_ = input.readBytes();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              manufactureDate_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              runtimeVersion_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              webVersion_ = input.readBytes();
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              osVersion_ = input.readBytes();
              break;
            }
            case 130: {
              bitField0_ |= 0x00008000;
              wanMac_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string hw_version = 1;
      private java.lang.Object hwVersion_ = "";
      public boolean hasHwVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getHwVersion() {
        java.lang.Object ref = hwVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          hwVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setHwVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        hwVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearHwVersion() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hwVersion_ = getDefaultInstance().getHwVersion();
        onChanged();
        return this;
      }
      void setHwVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        hwVersion_ = value;
        onChanged();
      }
      
      // optional string sw_version = 2;
      private java.lang.Object swVersion_ = "";
      public boolean hasSwVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getSwVersion() {
        java.lang.Object ref = swVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          swVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSwVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        swVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearSwVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        swVersion_ = getDefaultInstance().getSwVersion();
        onChanged();
        return this;
      }
      void setSwVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        swVersion_ = value;
        onChanged();
      }
      
      // optional float db_schema_version = 3;
      private float dbSchemaVersion_ ;
      public boolean hasDbSchemaVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getDbSchemaVersion() {
        return dbSchemaVersion_;
      }
      public Builder setDbSchemaVersion(float value) {
        bitField0_ |= 0x00000004;
        dbSchemaVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearDbSchemaVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dbSchemaVersion_ = 0F;
        onChanged();
        return this;
      }
      
      // optional string sku = 4;
      private java.lang.Object sku_ = "";
      public boolean hasSku() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getSku() {
        java.lang.Object ref = sku_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          sku_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSku(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        sku_ = value;
        onChanged();
        return this;
      }
      public Builder clearSku() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sku_ = getDefaultInstance().getSku();
        onChanged();
        return this;
      }
      void setSku(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        sku_ = value;
        onChanged();
      }
      
      // optional string imei = 5;
      private java.lang.Object imei_ = "";
      public boolean hasImei() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getImei() {
        java.lang.Object ref = imei_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          imei_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setImei(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        imei_ = value;
        onChanged();
        return this;
      }
      public Builder clearImei() {
        bitField0_ = (bitField0_ & ~0x00000010);
        imei_ = getDefaultInstance().getImei();
        onChanged();
        return this;
      }
      void setImei(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        imei_ = value;
        onChanged();
      }
      
      // optional string cloud_id = 6;
      private java.lang.Object cloudId_ = "";
      public boolean hasCloudId() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getCloudId() {
        java.lang.Object ref = cloudId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cloudId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCloudId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        cloudId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCloudId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cloudId_ = getDefaultInstance().getCloudId();
        onChanged();
        return this;
      }
      void setCloudId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        cloudId_ = value;
        onChanged();
      }
      
      // optional string lan_mac = 7;
      private java.lang.Object lanMac_ = "";
      public boolean hasLanMac() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getLanMac() {
        java.lang.Object ref = lanMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          lanMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        lanMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanMac() {
        bitField0_ = (bitField0_ & ~0x00000040);
        lanMac_ = getDefaultInstance().getLanMac();
        onChanged();
        return this;
      }
      void setLanMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        lanMac_ = value;
        onChanged();
      }
      
      // optional string wlan_mac = 8;
      private java.lang.Object wlanMac_ = "";
      public boolean hasWlanMac() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getWlanMac() {
        java.lang.Object ref = wlanMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wlanMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWlanMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wlanMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearWlanMac() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wlanMac_ = getDefaultInstance().getWlanMac();
        onChanged();
        return this;
      }
      void setWlanMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        wlanMac_ = value;
        onChanged();
      }
      
      // optional string wlan_5g_mac = 9;
      private java.lang.Object wlan5GMac_ = "";
      public boolean hasWlan5GMac() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getWlan5GMac() {
        java.lang.Object ref = wlan5GMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wlan5GMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWlan5GMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        wlan5GMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearWlan5GMac() {
        bitField0_ = (bitField0_ & ~0x00000100);
        wlan5GMac_ = getDefaultInstance().getWlan5GMac();
        onChanged();
        return this;
      }
      void setWlan5GMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        wlan5GMac_ = value;
        onChanged();
      }
      
      // optional string zigbee_mac = 10;
      private java.lang.Object zigbeeMac_ = "";
      public boolean hasZigbeeMac() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getZigbeeMac() {
        java.lang.Object ref = zigbeeMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          zigbeeMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setZigbeeMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        zigbeeMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearZigbeeMac() {
        bitField0_ = (bitField0_ & ~0x00000200);
        zigbeeMac_ = getDefaultInstance().getZigbeeMac();
        onChanged();
        return this;
      }
      void setZigbeeMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        zigbeeMac_ = value;
        onChanged();
      }
      
      // optional string product_id = 11;
      private java.lang.Object productId_ = "";
      public boolean hasProductId() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getProductId() {
        java.lang.Object ref = productId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          productId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setProductId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        productId_ = value;
        onChanged();
        return this;
      }
      public Builder clearProductId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        productId_ = getDefaultInstance().getProductId();
        onChanged();
        return this;
      }
      void setProductId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        productId_ = value;
        onChanged();
      }
      
      // optional string manufacture_date = 12;
      private java.lang.Object manufactureDate_ = "";
      public boolean hasManufactureDate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getManufactureDate() {
        java.lang.Object ref = manufactureDate_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          manufactureDate_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setManufactureDate(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        manufactureDate_ = value;
        onChanged();
        return this;
      }
      public Builder clearManufactureDate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        manufactureDate_ = getDefaultInstance().getManufactureDate();
        onChanged();
        return this;
      }
      void setManufactureDate(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        manufactureDate_ = value;
        onChanged();
      }
      
      // optional string runtime_version = 13;
      private java.lang.Object runtimeVersion_ = "";
      public boolean hasRuntimeVersion() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getRuntimeVersion() {
        java.lang.Object ref = runtimeVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          runtimeVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRuntimeVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        runtimeVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearRuntimeVersion() {
        bitField0_ = (bitField0_ & ~0x00001000);
        runtimeVersion_ = getDefaultInstance().getRuntimeVersion();
        onChanged();
        return this;
      }
      void setRuntimeVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        runtimeVersion_ = value;
        onChanged();
      }
      
      // optional string web_version = 14;
      private java.lang.Object webVersion_ = "";
      public boolean hasWebVersion() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getWebVersion() {
        java.lang.Object ref = webVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          webVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWebVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        webVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearWebVersion() {
        bitField0_ = (bitField0_ & ~0x00002000);
        webVersion_ = getDefaultInstance().getWebVersion();
        onChanged();
        return this;
      }
      void setWebVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        webVersion_ = value;
        onChanged();
      }
      
      // optional string os_version = 15;
      private java.lang.Object osVersion_ = "";
      public boolean hasOsVersion() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getOsVersion() {
        java.lang.Object ref = osVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          osVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setOsVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        osVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearOsVersion() {
        bitField0_ = (bitField0_ & ~0x00004000);
        osVersion_ = getDefaultInstance().getOsVersion();
        onChanged();
        return this;
      }
      void setOsVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        osVersion_ = value;
        onChanged();
      }
      
      // optional string wan_mac = 16;
      private java.lang.Object wanMac_ = "";
      public boolean hasWanMac() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public String getWanMac() {
        java.lang.Object ref = wanMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        wanMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanMac() {
        bitField0_ = (bitField0_ & ~0x00008000);
        wanMac_ = getDefaultInstance().getWanMac();
        onChanged();
        return this;
      }
      void setWanMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00008000;
        wanMac_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.ProductInfo)
    }
    
    static {
      defaultInstance = new ProductInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.ProductInfo)
  }
  
  public interface ComponentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional string current_version = 2;
    boolean hasCurrentVersion();
    String getCurrentVersion();
    
    // optional string latest_version = 3;
    boolean hasLatestVersion();
    String getLatestVersion();
    
    // optional int32 time_published = 4;
    boolean hasTimePublished();
    int getTimePublished();
    
    // optional string file_checksum = 5;
    boolean hasFileChecksum();
    String getFileChecksum();
  }
  public static final class Component extends
      com.google.protobuf.GeneratedMessage
      implements ComponentOrBuilder {
    // Use Component.newBuilder() to construct.
    private Component(Builder builder) {
      super(builder);
    }
    private Component(boolean noInit) {}
    
    private static final Component defaultInstance;
    public static Component getDefaultInstance() {
      return defaultInstance;
    }
    
    public Component getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Component_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Component_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string current_version = 2;
    public static final int CURRENT_VERSION_FIELD_NUMBER = 2;
    private java.lang.Object currentVersion_;
    public boolean hasCurrentVersion() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getCurrentVersion() {
      java.lang.Object ref = currentVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          currentVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCurrentVersionBytes() {
      java.lang.Object ref = currentVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        currentVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string latest_version = 3;
    public static final int LATEST_VERSION_FIELD_NUMBER = 3;
    private java.lang.Object latestVersion_;
    public boolean hasLatestVersion() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getLatestVersion() {
      java.lang.Object ref = latestVersion_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          latestVersion_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLatestVersionBytes() {
      java.lang.Object ref = latestVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        latestVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 time_published = 4;
    public static final int TIME_PUBLISHED_FIELD_NUMBER = 4;
    private int timePublished_;
    public boolean hasTimePublished() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getTimePublished() {
      return timePublished_;
    }
    
    // optional string file_checksum = 5;
    public static final int FILE_CHECKSUM_FIELD_NUMBER = 5;
    private java.lang.Object fileChecksum_;
    public boolean hasFileChecksum() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getFileChecksum() {
      java.lang.Object ref = fileChecksum_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          fileChecksum_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getFileChecksumBytes() {
      java.lang.Object ref = fileChecksum_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        fileChecksum_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      name_ = "";
      currentVersion_ = "";
      latestVersion_ = "";
      timePublished_ = 0;
      fileChecksum_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getCurrentVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLatestVersionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, timePublished_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getFileChecksumBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getCurrentVersionBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLatestVersionBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, timePublished_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getFileChecksumBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Component parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Component parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Component prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.ComponentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Component_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Component_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Component.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        currentVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        latestVersion_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        timePublished_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        fileChecksum_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Component.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Component getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Component.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Component build() {
        mrtech.smarthome.rpc.Models.Component result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Component buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Component result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Component buildPartial() {
        mrtech.smarthome.rpc.Models.Component result = new mrtech.smarthome.rpc.Models.Component(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.currentVersion_ = currentVersion_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.latestVersion_ = latestVersion_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.timePublished_ = timePublished_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.fileChecksum_ = fileChecksum_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Component) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Component)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Component other) {
        if (other == mrtech.smarthome.rpc.Models.Component.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCurrentVersion()) {
          setCurrentVersion(other.getCurrentVersion());
        }
        if (other.hasLatestVersion()) {
          setLatestVersion(other.getLatestVersion());
        }
        if (other.hasTimePublished()) {
          setTimePublished(other.getTimePublished());
        }
        if (other.hasFileChecksum()) {
          setFileChecksum(other.getFileChecksum());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              currentVersion_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              latestVersion_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              timePublished_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              fileChecksum_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional string current_version = 2;
      private java.lang.Object currentVersion_ = "";
      public boolean hasCurrentVersion() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getCurrentVersion() {
        java.lang.Object ref = currentVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          currentVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCurrentVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        currentVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearCurrentVersion() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentVersion_ = getDefaultInstance().getCurrentVersion();
        onChanged();
        return this;
      }
      void setCurrentVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        currentVersion_ = value;
        onChanged();
      }
      
      // optional string latest_version = 3;
      private java.lang.Object latestVersion_ = "";
      public boolean hasLatestVersion() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getLatestVersion() {
        java.lang.Object ref = latestVersion_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          latestVersion_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLatestVersion(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        latestVersion_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatestVersion() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latestVersion_ = getDefaultInstance().getLatestVersion();
        onChanged();
        return this;
      }
      void setLatestVersion(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        latestVersion_ = value;
        onChanged();
      }
      
      // optional int32 time_published = 4;
      private int timePublished_ ;
      public boolean hasTimePublished() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getTimePublished() {
        return timePublished_;
      }
      public Builder setTimePublished(int value) {
        bitField0_ |= 0x00000008;
        timePublished_ = value;
        onChanged();
        return this;
      }
      public Builder clearTimePublished() {
        bitField0_ = (bitField0_ & ~0x00000008);
        timePublished_ = 0;
        onChanged();
        return this;
      }
      
      // optional string file_checksum = 5;
      private java.lang.Object fileChecksum_ = "";
      public boolean hasFileChecksum() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getFileChecksum() {
        java.lang.Object ref = fileChecksum_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          fileChecksum_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setFileChecksum(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        fileChecksum_ = value;
        onChanged();
        return this;
      }
      public Builder clearFileChecksum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        fileChecksum_ = getDefaultInstance().getFileChecksum();
        onChanged();
        return this;
      }
      void setFileChecksum(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        fileChecksum_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Component)
    }
    
    static {
      defaultInstance = new Component(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Component)
  }
  
  public interface OtaStatusOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .mrtech.smarthome.rpc.Component component = 1;
    java.util.List<mrtech.smarthome.rpc.Models.Component> 
        getComponentList();
    mrtech.smarthome.rpc.Models.Component getComponent(int index);
    int getComponentCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.ComponentOrBuilder> 
        getComponentOrBuilderList();
    mrtech.smarthome.rpc.Models.ComponentOrBuilder getComponentOrBuilder(
        int index);
    
    // optional .mrtech.smarthome.rpc.OtaStatus.OtaAgentStatus status = 2;
    boolean hasStatus();
    mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus getStatus();
    
    // optional int32 last_check_time = 3;
    boolean hasLastCheckTime();
    int getLastCheckTime();
  }
  public static final class OtaStatus extends
      com.google.protobuf.GeneratedMessage
      implements OtaStatusOrBuilder {
    // Use OtaStatus.newBuilder() to construct.
    private OtaStatus(Builder builder) {
      super(builder);
    }
    private OtaStatus(boolean noInit) {}
    
    private static final OtaStatus defaultInstance;
    public static OtaStatus getDefaultInstance() {
      return defaultInstance;
    }
    
    public OtaStatus getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OtaStatus_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OtaStatus_fieldAccessorTable;
    }
    
    public enum OtaAgentStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      IDLE(0, 0),
      DOWNLOADING(1, 1),
      READY_TO_INSTALL(2, 2),
      FAILED(3, 3),
      ;
      
      public static final int IDLE_VALUE = 0;
      public static final int DOWNLOADING_VALUE = 1;
      public static final int READY_TO_INSTALL_VALUE = 2;
      public static final int FAILED_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static OtaAgentStatus valueOf(int value) {
        switch (value) {
          case 0: return IDLE;
          case 1: return DOWNLOADING;
          case 2: return READY_TO_INSTALL;
          case 3: return FAILED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<OtaAgentStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<OtaAgentStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<OtaAgentStatus>() {
              public OtaAgentStatus findValueByNumber(int number) {
                return OtaAgentStatus.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.OtaStatus.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final OtaAgentStatus[] VALUES = {
        IDLE, DOWNLOADING, READY_TO_INSTALL, FAILED, 
      };
      
      public static OtaAgentStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private OtaAgentStatus(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:mrtech.smarthome.rpc.OtaStatus.OtaAgentStatus)
    }
    
    private int bitField0_;
    // repeated .mrtech.smarthome.rpc.Component component = 1;
    public static final int COMPONENT_FIELD_NUMBER = 1;
    private java.util.List<mrtech.smarthome.rpc.Models.Component> component_;
    public java.util.List<mrtech.smarthome.rpc.Models.Component> getComponentList() {
      return component_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.ComponentOrBuilder> 
        getComponentOrBuilderList() {
      return component_;
    }
    public int getComponentCount() {
      return component_.size();
    }
    public mrtech.smarthome.rpc.Models.Component getComponent(int index) {
      return component_.get(index);
    }
    public mrtech.smarthome.rpc.Models.ComponentOrBuilder getComponentOrBuilder(
        int index) {
      return component_.get(index);
    }
    
    // optional .mrtech.smarthome.rpc.OtaStatus.OtaAgentStatus status = 2;
    public static final int STATUS_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus getStatus() {
      return status_;
    }
    
    // optional int32 last_check_time = 3;
    public static final int LAST_CHECK_TIME_FIELD_NUMBER = 3;
    private int lastCheckTime_;
    public boolean hasLastCheckTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLastCheckTime() {
      return lastCheckTime_;
    }
    
    private void initFields() {
      component_ = java.util.Collections.emptyList();
      status_ = mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus.IDLE;
      lastCheckTime_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < component_.size(); i++) {
        output.writeMessage(1, component_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, lastCheckTime_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < component_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, component_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastCheckTime_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.OtaStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.OtaStatus prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.OtaStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OtaStatus_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_OtaStatus_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.OtaStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getComponentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          componentBuilder_.clear();
        }
        status_ = mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus.IDLE;
        bitField0_ = (bitField0_ & ~0x00000002);
        lastCheckTime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.OtaStatus.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.OtaStatus getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.OtaStatus.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.OtaStatus build() {
        mrtech.smarthome.rpc.Models.OtaStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.OtaStatus buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.OtaStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.OtaStatus buildPartial() {
        mrtech.smarthome.rpc.Models.OtaStatus result = new mrtech.smarthome.rpc.Models.OtaStatus(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (componentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            component_ = java.util.Collections.unmodifiableList(component_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.component_ = component_;
        } else {
          result.component_ = componentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastCheckTime_ = lastCheckTime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.OtaStatus) {
          return mergeFrom((mrtech.smarthome.rpc.Models.OtaStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.OtaStatus other) {
        if (other == mrtech.smarthome.rpc.Models.OtaStatus.getDefaultInstance()) return this;
        if (componentBuilder_ == null) {
          if (!other.component_.isEmpty()) {
            if (component_.isEmpty()) {
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComponentIsMutable();
              component_.addAll(other.component_);
            }
            onChanged();
          }
        } else {
          if (!other.component_.isEmpty()) {
            if (componentBuilder_.isEmpty()) {
              componentBuilder_.dispose();
              componentBuilder_ = null;
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
              componentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComponentFieldBuilder() : null;
            } else {
              componentBuilder_.addAllMessages(other.component_);
            }
          }
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasLastCheckTime()) {
          setLastCheckTime(other.getLastCheckTime());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              mrtech.smarthome.rpc.Models.Component.Builder subBuilder = mrtech.smarthome.rpc.Models.Component.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addComponent(subBuilder.buildPartial());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus value = mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                status_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastCheckTime_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .mrtech.smarthome.rpc.Component component = 1;
      private java.util.List<mrtech.smarthome.rpc.Models.Component> component_ =
        java.util.Collections.emptyList();
      private void ensureComponentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          component_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.Component>(component_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Component, mrtech.smarthome.rpc.Models.Component.Builder, mrtech.smarthome.rpc.Models.ComponentOrBuilder> componentBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.Component> getComponentList() {
        if (componentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(component_);
        } else {
          return componentBuilder_.getMessageList();
        }
      }
      public int getComponentCount() {
        if (componentBuilder_ == null) {
          return component_.size();
        } else {
          return componentBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.Component getComponent(int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);
        } else {
          return componentBuilder_.getMessage(index);
        }
      }
      public Builder setComponent(
          int index, mrtech.smarthome.rpc.Models.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.set(index, value);
          onChanged();
        } else {
          componentBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setComponent(
          int index, mrtech.smarthome.rpc.Models.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addComponent(mrtech.smarthome.rpc.Models.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(value);
          onChanged();
        } else {
          componentBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addComponent(
          int index, mrtech.smarthome.rpc.Models.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(index, value);
          onChanged();
        } else {
          componentBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addComponent(
          mrtech.smarthome.rpc.Models.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addComponent(
          int index, mrtech.smarthome.rpc.Models.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllComponent(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.Component> values) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          super.addAll(values, component_);
          onChanged();
        } else {
          componentBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearComponent() {
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          componentBuilder_.clear();
        }
        return this;
      }
      public Builder removeComponent(int index) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.remove(index);
          onChanged();
        } else {
          componentBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.Component.Builder getComponentBuilder(
          int index) {
        return getComponentFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.ComponentOrBuilder getComponentOrBuilder(
          int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);  } else {
          return componentBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.ComponentOrBuilder> 
           getComponentOrBuilderList() {
        if (componentBuilder_ != null) {
          return componentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(component_);
        }
      }
      public mrtech.smarthome.rpc.Models.Component.Builder addComponentBuilder() {
        return getComponentFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.Component.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.Component.Builder addComponentBuilder(
          int index) {
        return getComponentFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.Component.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.Component.Builder> 
           getComponentBuilderList() {
        return getComponentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Component, mrtech.smarthome.rpc.Models.Component.Builder, mrtech.smarthome.rpc.Models.ComponentOrBuilder> 
          getComponentFieldBuilder() {
        if (componentBuilder_ == null) {
          componentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.Component, mrtech.smarthome.rpc.Models.Component.Builder, mrtech.smarthome.rpc.Models.ComponentOrBuilder>(
                  component_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          component_ = null;
        }
        return componentBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.OtaStatus.OtaAgentStatus status = 2;
      private mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus status_ = mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus.IDLE;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus getStatus() {
        return status_;
      }
      public Builder setStatus(mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000002);
        status_ = mrtech.smarthome.rpc.Models.OtaStatus.OtaAgentStatus.IDLE;
        onChanged();
        return this;
      }
      
      // optional int32 last_check_time = 3;
      private int lastCheckTime_ ;
      public boolean hasLastCheckTime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLastCheckTime() {
        return lastCheckTime_;
      }
      public Builder setLastCheckTime(int value) {
        bitField0_ |= 0x00000004;
        lastCheckTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastCheckTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastCheckTime_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.OtaStatus)
    }
    
    static {
      defaultInstance = new OtaStatus(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.OtaStatus)
  }
  
  public interface GroupOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
  }
  public static final class Group extends
      com.google.protobuf.GeneratedMessage
      implements GroupOrBuilder {
    // Use Group.newBuilder() to construct.
    private Group(Builder builder) {
      super(builder);
    }
    private Group(boolean noInit) {}
    
    private static final Group defaultInstance;
    public static Group getDefaultInstance() {
      return defaultInstance;
    }
    
    public Group getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Group_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Group_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0;
      name_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Group parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Group parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Group prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.GroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Group_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Group_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Group.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Group.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Group getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Group build() {
        mrtech.smarthome.rpc.Models.Group result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Group buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Group result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Group buildPartial() {
        mrtech.smarthome.rpc.Models.Group result = new mrtech.smarthome.rpc.Models.Group(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Group) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Group)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Group other) {
        if (other == mrtech.smarthome.rpc.Models.Group.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Group)
    }
    
    static {
      defaultInstance = new Group(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Group)
  }
  
  public interface GroupQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional int32 page = 2;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 3;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class GroupQuery extends
      com.google.protobuf.GeneratedMessage
      implements GroupQueryOrBuilder {
    // Use GroupQuery.newBuilder() to construct.
    private GroupQuery(Builder builder) {
      super(builder);
    }
    private GroupQuery(boolean noInit) {}
    
    private static final GroupQuery defaultInstance;
    public static GroupQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public GroupQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 page = 2;
    public static final int PAGE_FIELD_NUMBER = 2;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 3;
    public static final int PAGE_SIZE_FIELD_NUMBER = 3;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      name_ = "";
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.GroupQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.GroupQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.GroupQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.GroupQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.GroupQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.GroupQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.GroupQuery build() {
        mrtech.smarthome.rpc.Models.GroupQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.GroupQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.GroupQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.GroupQuery buildPartial() {
        mrtech.smarthome.rpc.Models.GroupQuery result = new mrtech.smarthome.rpc.Models.GroupQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.GroupQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.GroupQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.GroupQuery other) {
        if (other == mrtech.smarthome.rpc.Models.GroupQuery.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              page_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional int32 page = 2;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000002;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 3;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000004;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.GroupQuery)
    }
    
    static {
      defaultInstance = new GroupQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.GroupQuery)
  }
  
  public interface SceneOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
    
    // repeated .mrtech.smarthome.rpc.Action actions = 3;
    java.util.List<mrtech.smarthome.rpc.Models.Action> 
        getActionsList();
    mrtech.smarthome.rpc.Models.Action getActions(int index);
    int getActionsCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
        getActionsOrBuilderList();
    mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
        int index);
  }
  public static final class Scene extends
      com.google.protobuf.GeneratedMessage
      implements SceneOrBuilder {
    // Use Scene.newBuilder() to construct.
    private Scene(Builder builder) {
      super(builder);
    }
    private Scene(boolean noInit) {}
    
    private static final Scene defaultInstance;
    public static Scene getDefaultInstance() {
      return defaultInstance;
    }
    
    public Scene getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Scene_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Scene_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.Action actions = 3;
    public static final int ACTIONS_FIELD_NUMBER = 3;
    private java.util.List<mrtech.smarthome.rpc.Models.Action> actions_;
    public java.util.List<mrtech.smarthome.rpc.Models.Action> getActionsList() {
      return actions_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    public int getActionsCount() {
      return actions_.size();
    }
    public mrtech.smarthome.rpc.Models.Action getActions(int index) {
      return actions_.get(index);
    }
    public mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      name_ = "";
      actions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(3, actions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, actions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Scene parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Scene parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Scene prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SceneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Scene_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Scene_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Scene.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Scene.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Scene getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Scene.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Scene build() {
        mrtech.smarthome.rpc.Models.Scene result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Scene buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Scene result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Scene buildPartial() {
        mrtech.smarthome.rpc.Models.Scene result = new mrtech.smarthome.rpc.Models.Scene(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Scene) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Scene)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Scene other) {
        if (other == mrtech.smarthome.rpc.Models.Scene.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000004);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.Action.Builder subBuilder = mrtech.smarthome.rpc.Models.Action.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addActions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.Action actions = 3;
      private java.util.List<mrtech.smarthome.rpc.Models.Action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          actions_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.Action>(actions_);
          bitField0_ |= 0x00000004;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder> actionsBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.Action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.Action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      public Builder setActions(
          int index, mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setActions(
          int index, mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addActions(mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addActions(
          int index, mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addActions(
          mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addActions(
          int index, mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllActions(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.Action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          super.addAll(values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.Action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      public mrtech.smarthome.rpc.Models.Action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.Action.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.Action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.Action.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.Action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Scene)
    }
    
    static {
      defaultInstance = new Scene(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Scene)
  }
  
  public interface ActionOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional int32 scene_id = 2;
    boolean hasSceneId();
    int getSceneId();
    
    // optional int32 plan_id = 3;
    boolean hasPlanId();
    int getPlanId();
    
    // optional .mrtech.smarthome.rpc.ActionType action = 4;
    boolean hasAction();
    mrtech.smarthome.rpc.Models.ActionType getAction();
    
    // optional string parameters = 5;
    boolean hasParameters();
    String getParameters();
    
    // optional int32 execution_order = 6;
    boolean hasExecutionOrder();
    int getExecutionOrder();
  }
  public static final class Action extends
      com.google.protobuf.GeneratedMessage
      implements ActionOrBuilder {
    // Use Action.newBuilder() to construct.
    private Action(Builder builder) {
      super(builder);
    }
    private Action(boolean noInit) {}
    
    private static final Action defaultInstance;
    public static Action getDefaultInstance() {
      return defaultInstance;
    }
    
    public Action getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Action_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Action_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional int32 scene_id = 2;
    public static final int SCENE_ID_FIELD_NUMBER = 2;
    private int sceneId_;
    public boolean hasSceneId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getSceneId() {
      return sceneId_;
    }
    
    // optional int32 plan_id = 3;
    public static final int PLAN_ID_FIELD_NUMBER = 3;
    private int planId_;
    public boolean hasPlanId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPlanId() {
      return planId_;
    }
    
    // optional .mrtech.smarthome.rpc.ActionType action = 4;
    public static final int ACTION_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.ActionType action_;
    public boolean hasAction() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.ActionType getAction() {
      return action_;
    }
    
    // optional string parameters = 5;
    public static final int PARAMETERS_FIELD_NUMBER = 5;
    private java.lang.Object parameters_;
    public boolean hasParameters() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getParameters() {
      java.lang.Object ref = parameters_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          parameters_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getParametersBytes() {
      java.lang.Object ref = parameters_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        parameters_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 execution_order = 6;
    public static final int EXECUTION_ORDER_FIELD_NUMBER = 6;
    private int executionOrder_;
    public boolean hasExecutionOrder() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public int getExecutionOrder() {
      return executionOrder_;
    }
    
    private void initFields() {
      id_ = 0;
      sceneId_ = 0;
      planId_ = 0;
      action_ = mrtech.smarthome.rpc.Models.ActionType.ACTION_TYPE_ARM;
      parameters_ = "";
      executionOrder_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sceneId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, planId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, action_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getParametersBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, executionOrder_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sceneId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, planId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, action_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getParametersBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, executionOrder_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Action parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Action parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Action prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.ActionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Action_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Action_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Action.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        sceneId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        planId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = mrtech.smarthome.rpc.Models.ActionType.ACTION_TYPE_ARM;
        bitField0_ = (bitField0_ & ~0x00000008);
        parameters_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        executionOrder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Action.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Action getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Action.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Action build() {
        mrtech.smarthome.rpc.Models.Action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Action buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Action result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Action buildPartial() {
        mrtech.smarthome.rpc.Models.Action result = new mrtech.smarthome.rpc.Models.Action(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sceneId_ = sceneId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.planId_ = planId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.parameters_ = parameters_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.executionOrder_ = executionOrder_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Action) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Action)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Action other) {
        if (other == mrtech.smarthome.rpc.Models.Action.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasSceneId()) {
          setSceneId(other.getSceneId());
        }
        if (other.hasPlanId()) {
          setPlanId(other.getPlanId());
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasParameters()) {
          setParameters(other.getParameters());
        }
        if (other.hasExecutionOrder()) {
          setExecutionOrder(other.getExecutionOrder());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sceneId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              planId_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.ActionType value = mrtech.smarthome.rpc.Models.ActionType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                action_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              parameters_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              executionOrder_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 scene_id = 2;
      private int sceneId_ ;
      public boolean hasSceneId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getSceneId() {
        return sceneId_;
      }
      public Builder setSceneId(int value) {
        bitField0_ |= 0x00000002;
        sceneId_ = value;
        onChanged();
        return this;
      }
      public Builder clearSceneId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sceneId_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 plan_id = 3;
      private int planId_ ;
      public boolean hasPlanId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPlanId() {
        return planId_;
      }
      public Builder setPlanId(int value) {
        bitField0_ |= 0x00000004;
        planId_ = value;
        onChanged();
        return this;
      }
      public Builder clearPlanId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        planId_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.ActionType action = 4;
      private mrtech.smarthome.rpc.Models.ActionType action_ = mrtech.smarthome.rpc.Models.ActionType.ACTION_TYPE_ARM;
      public boolean hasAction() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.ActionType getAction() {
        return action_;
      }
      public Builder setAction(mrtech.smarthome.rpc.Models.ActionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        action_ = value;
        onChanged();
        return this;
      }
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000008);
        action_ = mrtech.smarthome.rpc.Models.ActionType.ACTION_TYPE_ARM;
        onChanged();
        return this;
      }
      
      // optional string parameters = 5;
      private java.lang.Object parameters_ = "";
      public boolean hasParameters() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getParameters() {
        java.lang.Object ref = parameters_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          parameters_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setParameters(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        parameters_ = value;
        onChanged();
        return this;
      }
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000010);
        parameters_ = getDefaultInstance().getParameters();
        onChanged();
        return this;
      }
      void setParameters(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        parameters_ = value;
        onChanged();
      }
      
      // optional int32 execution_order = 6;
      private int executionOrder_ ;
      public boolean hasExecutionOrder() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getExecutionOrder() {
        return executionOrder_;
      }
      public Builder setExecutionOrder(int value) {
        bitField0_ |= 0x00000020;
        executionOrder_ = value;
        onChanged();
        return this;
      }
      public Builder clearExecutionOrder() {
        bitField0_ = (bitField0_ & ~0x00000020);
        executionOrder_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Action)
    }
    
    static {
      defaultInstance = new Action(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Action)
  }
  
  public interface SceneQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional int32 page = 2;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 3;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class SceneQuery extends
      com.google.protobuf.GeneratedMessage
      implements SceneQueryOrBuilder {
    // Use SceneQuery.newBuilder() to construct.
    private SceneQuery(Builder builder) {
      super(builder);
    }
    private SceneQuery(boolean noInit) {}
    
    private static final SceneQuery defaultInstance;
    public static SceneQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public SceneQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SceneQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SceneQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 page = 2;
    public static final int PAGE_FIELD_NUMBER = 2;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 3;
    public static final int PAGE_SIZE_FIELD_NUMBER = 3;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      name_ = "";
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SceneQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SceneQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SceneQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SceneQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SceneQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SceneQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SceneQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SceneQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SceneQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SceneQuery build() {
        mrtech.smarthome.rpc.Models.SceneQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SceneQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SceneQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SceneQuery buildPartial() {
        mrtech.smarthome.rpc.Models.SceneQuery result = new mrtech.smarthome.rpc.Models.SceneQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SceneQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SceneQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SceneQuery other) {
        if (other == mrtech.smarthome.rpc.Models.SceneQuery.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              page_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional int32 page = 2;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000002;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 3;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000004;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SceneQuery)
    }
    
    static {
      defaultInstance = new SceneQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SceneQuery)
  }
  
  public interface PlanQueryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string name = 1;
    boolean hasName();
    String getName();
    
    // optional int32 page = 2;
    boolean hasPage();
    int getPage();
    
    // optional int32 page_size = 3;
    boolean hasPageSize();
    int getPageSize();
  }
  public static final class PlanQuery extends
      com.google.protobuf.GeneratedMessage
      implements PlanQueryOrBuilder {
    // Use PlanQuery.newBuilder() to construct.
    private PlanQuery(Builder builder) {
      super(builder);
    }
    private PlanQuery(boolean noInit) {}
    
    private static final PlanQuery defaultInstance;
    public static PlanQuery getDefaultInstance() {
      return defaultInstance;
    }
    
    public PlanQuery getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PlanQuery_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PlanQuery_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 page = 2;
    public static final int PAGE_FIELD_NUMBER = 2;
    private int page_;
    public boolean hasPage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getPage() {
      return page_;
    }
    
    // optional int32 page_size = 3;
    public static final int PAGE_SIZE_FIELD_NUMBER = 3;
    private int pageSize_;
    public boolean hasPageSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getPageSize() {
      return pageSize_;
    }
    
    private void initFields() {
      name_ = "";
      page_ = 0;
      pageSize_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pageSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, page_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pageSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PlanQuery parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.PlanQuery prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PlanQueryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PlanQuery_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PlanQuery_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.PlanQuery.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        page_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pageSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.PlanQuery.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.PlanQuery getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.PlanQuery.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.PlanQuery build() {
        mrtech.smarthome.rpc.Models.PlanQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.PlanQuery buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.PlanQuery result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.PlanQuery buildPartial() {
        mrtech.smarthome.rpc.Models.PlanQuery result = new mrtech.smarthome.rpc.Models.PlanQuery(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.page_ = page_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pageSize_ = pageSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.PlanQuery) {
          return mergeFrom((mrtech.smarthome.rpc.Models.PlanQuery)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.PlanQuery other) {
        if (other == mrtech.smarthome.rpc.Models.PlanQuery.getDefaultInstance()) return this;
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPage()) {
          setPage(other.getPage());
        }
        if (other.hasPageSize()) {
          setPageSize(other.getPageSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              page_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pageSize_ = input.readInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string name = 1;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
      }
      
      // optional int32 page = 2;
      private int page_ ;
      public boolean hasPage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getPage() {
        return page_;
      }
      public Builder setPage(int value) {
        bitField0_ |= 0x00000002;
        page_ = value;
        onChanged();
        return this;
      }
      public Builder clearPage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        page_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 page_size = 3;
      private int pageSize_ ;
      public boolean hasPageSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getPageSize() {
        return pageSize_;
      }
      public Builder setPageSize(int value) {
        bitField0_ |= 0x00000004;
        pageSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearPageSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pageSize_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.PlanQuery)
    }
    
    static {
      defaultInstance = new PlanQuery(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.PlanQuery)
  }
  
  public interface PlanOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int32 id = 1;
    boolean hasId();
    int getId();
    
    // optional string name = 2;
    boolean hasName();
    String getName();
    
    // optional int32 last_activity = 3;
    boolean hasLastActivity();
    int getLastActivity();
    
    // optional bool enabled = 4;
    boolean hasEnabled();
    boolean getEnabled();
    
    // optional .mrtech.smarthome.rpc.PlanType type = 5;
    boolean hasType();
    mrtech.smarthome.rpc.Models.PlanType getType();
    
    // optional string parameters = 6;
    boolean hasParameters();
    String getParameters();
    
    // repeated .mrtech.smarthome.rpc.Action actions = 7;
    java.util.List<mrtech.smarthome.rpc.Models.Action> 
        getActionsList();
    mrtech.smarthome.rpc.Models.Action getActions(int index);
    int getActionsCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
        getActionsOrBuilderList();
    mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
        int index);
  }
  public static final class Plan extends
      com.google.protobuf.GeneratedMessage
      implements PlanOrBuilder {
    // Use Plan.newBuilder() to construct.
    private Plan(Builder builder) {
      super(builder);
    }
    private Plan(boolean noInit) {}
    
    private static final Plan defaultInstance;
    public static Plan getDefaultInstance() {
      return defaultInstance;
    }
    
    public Plan getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Plan_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Plan_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getId() {
      return id_;
    }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 last_activity = 3;
    public static final int LAST_ACTIVITY_FIELD_NUMBER = 3;
    private int lastActivity_;
    public boolean hasLastActivity() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getLastActivity() {
      return lastActivity_;
    }
    
    // optional bool enabled = 4;
    public static final int ENABLED_FIELD_NUMBER = 4;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    // optional .mrtech.smarthome.rpc.PlanType type = 5;
    public static final int TYPE_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.PlanType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.PlanType getType() {
      return type_;
    }
    
    // optional string parameters = 6;
    public static final int PARAMETERS_FIELD_NUMBER = 6;
    private java.lang.Object parameters_;
    public boolean hasParameters() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getParameters() {
      java.lang.Object ref = parameters_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          parameters_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getParametersBytes() {
      java.lang.Object ref = parameters_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        parameters_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.Action actions = 7;
    public static final int ACTIONS_FIELD_NUMBER = 7;
    private java.util.List<mrtech.smarthome.rpc.Models.Action> actions_;
    public java.util.List<mrtech.smarthome.rpc.Models.Action> getActionsList() {
      return actions_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
        getActionsOrBuilderList() {
      return actions_;
    }
    public int getActionsCount() {
      return actions_.size();
    }
    public mrtech.smarthome.rpc.Models.Action getActions(int index) {
      return actions_.get(index);
    }
    public mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
        int index) {
      return actions_.get(index);
    }
    
    private void initFields() {
      id_ = 0;
      name_ = "";
      lastActivity_ = 0;
      enabled_ = false;
      type_ = mrtech.smarthome.rpc.Models.PlanType.PLAN_TYPE_TIMER;
      parameters_ = "";
      actions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, lastActivity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, type_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getParametersBytes());
      }
      for (int i = 0; i < actions_.size(); i++) {
        output.writeMessage(7, actions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, lastActivity_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enabled_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, type_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getParametersBytes());
      }
      for (int i = 0; i < actions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, actions_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Plan parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.Plan parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.Plan prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PlanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Plan_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_Plan_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.Plan.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getActionsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        lastActivity_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = mrtech.smarthome.rpc.Models.PlanType.PLAN_TYPE_TIMER;
        bitField0_ = (bitField0_ & ~0x00000010);
        parameters_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.Plan.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.Plan getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.Plan.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.Plan build() {
        mrtech.smarthome.rpc.Models.Plan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.Plan buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.Plan result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.Plan buildPartial() {
        mrtech.smarthome.rpc.Models.Plan result = new mrtech.smarthome.rpc.Models.Plan(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lastActivity_ = lastActivity_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.parameters_ = parameters_;
        if (actionsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            actions_ = java.util.Collections.unmodifiableList(actions_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.actions_ = actions_;
        } else {
          result.actions_ = actionsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.Plan) {
          return mergeFrom((mrtech.smarthome.rpc.Models.Plan)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.Plan other) {
        if (other == mrtech.smarthome.rpc.Models.Plan.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasLastActivity()) {
          setLastActivity(other.getLastActivity());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasParameters()) {
          setParameters(other.getParameters());
        }
        if (actionsBuilder_ == null) {
          if (!other.actions_.isEmpty()) {
            if (actions_.isEmpty()) {
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureActionsIsMutable();
              actions_.addAll(other.actions_);
            }
            onChanged();
          }
        } else {
          if (!other.actions_.isEmpty()) {
            if (actionsBuilder_.isEmpty()) {
              actionsBuilder_.dispose();
              actionsBuilder_ = null;
              actions_ = other.actions_;
              bitField0_ = (bitField0_ & ~0x00000040);
              actionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getActionsFieldBuilder() : null;
            } else {
              actionsBuilder_.addAllMessages(other.actions_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              lastActivity_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enabled_ = input.readBool();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.PlanType value = mrtech.smarthome.rpc.Models.PlanType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                type_ = value;
              }
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              parameters_ = input.readBytes();
              break;
            }
            case 58: {
              mrtech.smarthome.rpc.Models.Action.Builder subBuilder = mrtech.smarthome.rpc.Models.Action.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addActions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 id = 1;
      private int id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getId() {
        return id_;
      }
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }
      
      // optional string name = 2;
      private java.lang.Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
      }
      
      // optional int32 last_activity = 3;
      private int lastActivity_ ;
      public boolean hasLastActivity() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getLastActivity() {
        return lastActivity_;
      }
      public Builder setLastActivity(int value) {
        bitField0_ |= 0x00000004;
        lastActivity_ = value;
        onChanged();
        return this;
      }
      public Builder clearLastActivity() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lastActivity_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool enabled = 4;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000008;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.PlanType type = 5;
      private mrtech.smarthome.rpc.Models.PlanType type_ = mrtech.smarthome.rpc.Models.PlanType.PLAN_TYPE_TIMER;
      public boolean hasType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.PlanType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.PlanType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        type_ = mrtech.smarthome.rpc.Models.PlanType.PLAN_TYPE_TIMER;
        onChanged();
        return this;
      }
      
      // optional string parameters = 6;
      private java.lang.Object parameters_ = "";
      public boolean hasParameters() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getParameters() {
        java.lang.Object ref = parameters_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          parameters_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setParameters(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        parameters_ = value;
        onChanged();
        return this;
      }
      public Builder clearParameters() {
        bitField0_ = (bitField0_ & ~0x00000020);
        parameters_ = getDefaultInstance().getParameters();
        onChanged();
        return this;
      }
      void setParameters(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        parameters_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.Action actions = 7;
      private java.util.List<mrtech.smarthome.rpc.Models.Action> actions_ =
        java.util.Collections.emptyList();
      private void ensureActionsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          actions_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.Action>(actions_);
          bitField0_ |= 0x00000040;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder> actionsBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.Action> getActionsList() {
        if (actionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(actions_);
        } else {
          return actionsBuilder_.getMessageList();
        }
      }
      public int getActionsCount() {
        if (actionsBuilder_ == null) {
          return actions_.size();
        } else {
          return actionsBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.Action getActions(int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);
        } else {
          return actionsBuilder_.getMessage(index);
        }
      }
      public Builder setActions(
          int index, mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.set(index, value);
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setActions(
          int index, mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.set(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addActions(mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addActions(
          int index, mrtech.smarthome.rpc.Models.Action value) {
        if (actionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureActionsIsMutable();
          actions_.add(index, value);
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addActions(
          mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addActions(
          int index, mrtech.smarthome.rpc.Models.Action.Builder builderForValue) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.add(index, builderForValue.build());
          onChanged();
        } else {
          actionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllActions(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.Action> values) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          super.addAll(values, actions_);
          onChanged();
        } else {
          actionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearActions() {
        if (actionsBuilder_ == null) {
          actions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          actionsBuilder_.clear();
        }
        return this;
      }
      public Builder removeActions(int index) {
        if (actionsBuilder_ == null) {
          ensureActionsIsMutable();
          actions_.remove(index);
          onChanged();
        } else {
          actionsBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.Action.Builder getActionsBuilder(
          int index) {
        return getActionsFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.ActionOrBuilder getActionsOrBuilder(
          int index) {
        if (actionsBuilder_ == null) {
          return actions_.get(index);  } else {
          return actionsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.ActionOrBuilder> 
           getActionsOrBuilderList() {
        if (actionsBuilder_ != null) {
          return actionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(actions_);
        }
      }
      public mrtech.smarthome.rpc.Models.Action.Builder addActionsBuilder() {
        return getActionsFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.Action.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.Action.Builder addActionsBuilder(
          int index) {
        return getActionsFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.Action.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.Action.Builder> 
           getActionsBuilderList() {
        return getActionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder> 
          getActionsFieldBuilder() {
        if (actionsBuilder_ == null) {
          actionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.Action, mrtech.smarthome.rpc.Models.Action.Builder, mrtech.smarthome.rpc.Models.ActionOrBuilder>(
                  actions_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          actions_ = null;
        }
        return actionsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.Plan)
    }
    
    static {
      defaultInstance = new Plan(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.Plan)
  }
  
  public interface WanConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.WanMode wan_mode = 1;
    boolean hasWanMode();
    mrtech.smarthome.rpc.Models.WanMode getWanMode();
    
    // optional string account = 2;
    boolean hasAccount();
    String getAccount();
    
    // optional string password = 3;
    boolean hasPassword();
    String getPassword();
    
    // optional string ip_address = 4;
    boolean hasIpAddress();
    String getIpAddress();
    
    // optional string subnet_mask = 5;
    boolean hasSubnetMask();
    String getSubnetMask();
    
    // optional string gateway = 6;
    boolean hasGateway();
    String getGateway();
    
    // optional bool static_dns = 7;
    boolean hasStaticDns();
    boolean getStaticDns();
    
    // optional string primary_dns = 8;
    boolean hasPrimaryDns();
    String getPrimaryDns();
    
    // optional string secondary_dns = 9;
    boolean hasSecondaryDns();
    String getSecondaryDns();
    
    // optional .mrtech.smarthome.rpc.WanType type = 10;
    boolean hasType();
    mrtech.smarthome.rpc.Models.WanType getType();
    
    // optional .mrtech.smarthome.rpc.WanMacClone clone_mode = 11;
    boolean hasCloneMode();
    mrtech.smarthome.rpc.Models.WanMacClone getCloneMode();
    
    // optional string clone_mac = 12;
    boolean hasCloneMac();
    String getCloneMac();
    
    // optional string domain = 13;
    boolean hasDomain();
    String getDomain();
    
    // optional string service_name = 14;
    boolean hasServiceName();
    String getServiceName();
    
    // optional bool enable_dos_protection = 15;
    boolean hasEnableDosProtection();
    boolean getEnableDosProtection();
    
    // optional bool enable_dmz = 16;
    boolean hasEnableDmz();
    boolean getEnableDmz();
    
    // optional string dmz_host = 17;
    boolean hasDmzHost();
    String getDmzHost();
    
    // optional bool enable_igmp_proxy = 18;
    boolean hasEnableIgmpProxy();
    boolean getEnableIgmpProxy();
    
    // optional int32 mtu = 19;
    boolean hasMtu();
    int getMtu();
    
    // optional int32 mru = 20;
    boolean hasMru();
    int getMru();
    
    // optional bool allow_ping = 21;
    boolean hasAllowPing();
    boolean getAllowPing();
  }
  public static final class WanConfig extends
      com.google.protobuf.GeneratedMessage
      implements WanConfigOrBuilder {
    // Use WanConfig.newBuilder() to construct.
    private WanConfig(Builder builder) {
      super(builder);
    }
    private WanConfig(boolean noInit) {}
    
    private static final WanConfig defaultInstance;
    public static WanConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public WanConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WanConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WanConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.WanMode wan_mode = 1;
    public static final int WAN_MODE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.WanMode wanMode_;
    public boolean hasWanMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.WanMode getWanMode() {
      return wanMode_;
    }
    
    // optional string account = 2;
    public static final int ACCOUNT_FIELD_NUMBER = 2;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private java.lang.Object password_;
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          password_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string ip_address = 4;
    public static final int IP_ADDRESS_FIELD_NUMBER = 4;
    private java.lang.Object ipAddress_;
    public boolean hasIpAddress() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getIpAddress() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpAddressBytes() {
      java.lang.Object ref = ipAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string subnet_mask = 5;
    public static final int SUBNET_MASK_FIELD_NUMBER = 5;
    private java.lang.Object subnetMask_;
    public boolean hasSubnetMask() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getSubnetMask() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          subnetMask_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSubnetMaskBytes() {
      java.lang.Object ref = subnetMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        subnetMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string gateway = 6;
    public static final int GATEWAY_FIELD_NUMBER = 6;
    private java.lang.Object gateway_;
    public boolean hasGateway() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getGateway() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          gateway_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGatewayBytes() {
      java.lang.Object ref = gateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        gateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool static_dns = 7;
    public static final int STATIC_DNS_FIELD_NUMBER = 7;
    private boolean staticDns_;
    public boolean hasStaticDns() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getStaticDns() {
      return staticDns_;
    }
    
    // optional string primary_dns = 8;
    public static final int PRIMARY_DNS_FIELD_NUMBER = 8;
    private java.lang.Object primaryDns_;
    public boolean hasPrimaryDns() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getPrimaryDns() {
      java.lang.Object ref = primaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          primaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPrimaryDnsBytes() {
      java.lang.Object ref = primaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        primaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string secondary_dns = 9;
    public static final int SECONDARY_DNS_FIELD_NUMBER = 9;
    private java.lang.Object secondaryDns_;
    public boolean hasSecondaryDns() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getSecondaryDns() {
      java.lang.Object ref = secondaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          secondaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSecondaryDnsBytes() {
      java.lang.Object ref = secondaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        secondaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.WanType type = 10;
    public static final int TYPE_FIELD_NUMBER = 10;
    private mrtech.smarthome.rpc.Models.WanType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public mrtech.smarthome.rpc.Models.WanType getType() {
      return type_;
    }
    
    // optional .mrtech.smarthome.rpc.WanMacClone clone_mode = 11;
    public static final int CLONE_MODE_FIELD_NUMBER = 11;
    private mrtech.smarthome.rpc.Models.WanMacClone cloneMode_;
    public boolean hasCloneMode() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public mrtech.smarthome.rpc.Models.WanMacClone getCloneMode() {
      return cloneMode_;
    }
    
    // optional string clone_mac = 12;
    public static final int CLONE_MAC_FIELD_NUMBER = 12;
    private java.lang.Object cloneMac_;
    public boolean hasCloneMac() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public String getCloneMac() {
      java.lang.Object ref = cloneMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          cloneMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCloneMacBytes() {
      java.lang.Object ref = cloneMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        cloneMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string domain = 13;
    public static final int DOMAIN_FIELD_NUMBER = 13;
    private java.lang.Object domain_;
    public boolean hasDomain() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          domain_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string service_name = 14;
    public static final int SERVICE_NAME_FIELD_NUMBER = 14;
    private java.lang.Object serviceName_;
    public boolean hasServiceName() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getServiceName() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serviceName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getServiceNameBytes() {
      java.lang.Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool enable_dos_protection = 15;
    public static final int ENABLE_DOS_PROTECTION_FIELD_NUMBER = 15;
    private boolean enableDosProtection_;
    public boolean hasEnableDosProtection() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public boolean getEnableDosProtection() {
      return enableDosProtection_;
    }
    
    // optional bool enable_dmz = 16;
    public static final int ENABLE_DMZ_FIELD_NUMBER = 16;
    private boolean enableDmz_;
    public boolean hasEnableDmz() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public boolean getEnableDmz() {
      return enableDmz_;
    }
    
    // optional string dmz_host = 17;
    public static final int DMZ_HOST_FIELD_NUMBER = 17;
    private java.lang.Object dmzHost_;
    public boolean hasDmzHost() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public String getDmzHost() {
      java.lang.Object ref = dmzHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          dmzHost_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getDmzHostBytes() {
      java.lang.Object ref = dmzHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        dmzHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool enable_igmp_proxy = 18;
    public static final int ENABLE_IGMP_PROXY_FIELD_NUMBER = 18;
    private boolean enableIgmpProxy_;
    public boolean hasEnableIgmpProxy() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public boolean getEnableIgmpProxy() {
      return enableIgmpProxy_;
    }
    
    // optional int32 mtu = 19;
    public static final int MTU_FIELD_NUMBER = 19;
    private int mtu_;
    public boolean hasMtu() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public int getMtu() {
      return mtu_;
    }
    
    // optional int32 mru = 20;
    public static final int MRU_FIELD_NUMBER = 20;
    private int mru_;
    public boolean hasMru() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public int getMru() {
      return mru_;
    }
    
    // optional bool allow_ping = 21;
    public static final int ALLOW_PING_FIELD_NUMBER = 21;
    private boolean allowPing_;
    public boolean hasAllowPing() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public boolean getAllowPing() {
      return allowPing_;
    }
    
    private void initFields() {
      wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
      account_ = "";
      password_ = "";
      ipAddress_ = "";
      subnetMask_ = "";
      gateway_ = "";
      staticDns_ = false;
      primaryDns_ = "";
      secondaryDns_ = "";
      type_ = mrtech.smarthome.rpc.Models.WanType.WAN_TYPE_INTERNET;
      cloneMode_ = mrtech.smarthome.rpc.Models.WanMacClone.WAN_MAC_CLONE_NONE;
      cloneMac_ = "";
      domain_ = "";
      serviceName_ = "";
      enableDosProtection_ = false;
      enableDmz_ = false;
      dmzHost_ = "";
      enableIgmpProxy_ = false;
      mtu_ = 0;
      mru_ = 0;
      allowPing_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, wanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAccountBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(7, staticDns_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getSecondaryDnsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeEnum(10, type_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeEnum(11, cloneMode_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getCloneMacBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getDomainBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getServiceNameBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, enableDosProtection_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, enableDmz_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getDmzHostBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(18, enableIgmpProxy_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(19, mtu_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(20, mru_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(21, allowPing_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, wanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAccountBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPasswordBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getIpAddressBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getGatewayBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, staticDns_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getSecondaryDnsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, type_.getNumber());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(11, cloneMode_.getNumber());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getCloneMacBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getDomainBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getServiceNameBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, enableDosProtection_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, enableDmz_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getDmzHostBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, enableIgmpProxy_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, mtu_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, mru_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, allowPing_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WanConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.WanConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.WanConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WanConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WanConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.WanConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ipAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        subnetMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        gateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        staticDns_ = false;
        bitField0_ = (bitField0_ & ~0x00000040);
        primaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        secondaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = mrtech.smarthome.rpc.Models.WanType.WAN_TYPE_INTERNET;
        bitField0_ = (bitField0_ & ~0x00000200);
        cloneMode_ = mrtech.smarthome.rpc.Models.WanMacClone.WAN_MAC_CLONE_NONE;
        bitField0_ = (bitField0_ & ~0x00000400);
        cloneMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        domain_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        serviceName_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        enableDosProtection_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        enableDmz_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        dmzHost_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        enableIgmpProxy_ = false;
        bitField0_ = (bitField0_ & ~0x00020000);
        mtu_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        mru_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        allowPing_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.WanConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.WanConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.WanConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.WanConfig build() {
        mrtech.smarthome.rpc.Models.WanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.WanConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.WanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.WanConfig buildPartial() {
        mrtech.smarthome.rpc.Models.WanConfig result = new mrtech.smarthome.rpc.Models.WanConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.wanMode_ = wanMode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ipAddress_ = ipAddress_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.subnetMask_ = subnetMask_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.gateway_ = gateway_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.staticDns_ = staticDns_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.primaryDns_ = primaryDns_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.secondaryDns_ = secondaryDns_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.cloneMode_ = cloneMode_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.cloneMac_ = cloneMac_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.domain_ = domain_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.serviceName_ = serviceName_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.enableDosProtection_ = enableDosProtection_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.enableDmz_ = enableDmz_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.dmzHost_ = dmzHost_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.enableIgmpProxy_ = enableIgmpProxy_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.mtu_ = mtu_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.mru_ = mru_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.allowPing_ = allowPing_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.WanConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.WanConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.WanConfig other) {
        if (other == mrtech.smarthome.rpc.Models.WanConfig.getDefaultInstance()) return this;
        if (other.hasWanMode()) {
          setWanMode(other.getWanMode());
        }
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasIpAddress()) {
          setIpAddress(other.getIpAddress());
        }
        if (other.hasSubnetMask()) {
          setSubnetMask(other.getSubnetMask());
        }
        if (other.hasGateway()) {
          setGateway(other.getGateway());
        }
        if (other.hasStaticDns()) {
          setStaticDns(other.getStaticDns());
        }
        if (other.hasPrimaryDns()) {
          setPrimaryDns(other.getPrimaryDns());
        }
        if (other.hasSecondaryDns()) {
          setSecondaryDns(other.getSecondaryDns());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasCloneMode()) {
          setCloneMode(other.getCloneMode());
        }
        if (other.hasCloneMac()) {
          setCloneMac(other.getCloneMac());
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasServiceName()) {
          setServiceName(other.getServiceName());
        }
        if (other.hasEnableDosProtection()) {
          setEnableDosProtection(other.getEnableDosProtection());
        }
        if (other.hasEnableDmz()) {
          setEnableDmz(other.getEnableDmz());
        }
        if (other.hasDmzHost()) {
          setDmzHost(other.getDmzHost());
        }
        if (other.hasEnableIgmpProxy()) {
          setEnableIgmpProxy(other.getEnableIgmpProxy());
        }
        if (other.hasMtu()) {
          setMtu(other.getMtu());
        }
        if (other.hasMru()) {
          setMru(other.getMru());
        }
        if (other.hasAllowPing()) {
          setAllowPing(other.getAllowPing());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WanMode value = mrtech.smarthome.rpc.Models.WanMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                wanMode_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              account_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              password_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              ipAddress_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              subnetMask_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              gateway_ = input.readBytes();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              staticDns_ = input.readBool();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              primaryDns_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              secondaryDns_ = input.readBytes();
              break;
            }
            case 80: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WanType value = mrtech.smarthome.rpc.Models.WanType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(10, rawValue);
              } else {
                bitField0_ |= 0x00000200;
                type_ = value;
              }
              break;
            }
            case 88: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WanMacClone value = mrtech.smarthome.rpc.Models.WanMacClone.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(11, rawValue);
              } else {
                bitField0_ |= 0x00000400;
                cloneMode_ = value;
              }
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              cloneMac_ = input.readBytes();
              break;
            }
            case 106: {
              bitField0_ |= 0x00001000;
              domain_ = input.readBytes();
              break;
            }
            case 114: {
              bitField0_ |= 0x00002000;
              serviceName_ = input.readBytes();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              enableDosProtection_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              enableDmz_ = input.readBool();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              dmzHost_ = input.readBytes();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              enableIgmpProxy_ = input.readBool();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              mtu_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00080000;
              mru_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              allowPing_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.WanMode wan_mode = 1;
      private mrtech.smarthome.rpc.Models.WanMode wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
      public boolean hasWanMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.WanMode getWanMode() {
        return wanMode_;
      }
      public Builder setWanMode(mrtech.smarthome.rpc.Models.WanMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        wanMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
        onChanged();
        return this;
      }
      
      // optional string account = 2;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        account_ = value;
        onChanged();
      }
      
      // optional string password = 3;
      private java.lang.Object password_ = "";
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      void setPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
      }
      
      // optional string ip_address = 4;
      private java.lang.Object ipAddress_ = "";
      public boolean hasIpAddress() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getIpAddress() {
        java.lang.Object ref = ipAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ipAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ipAddress_ = getDefaultInstance().getIpAddress();
        onChanged();
        return this;
      }
      void setIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        ipAddress_ = value;
        onChanged();
      }
      
      // optional string subnet_mask = 5;
      private java.lang.Object subnetMask_ = "";
      public boolean hasSubnetMask() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getSubnetMask() {
        java.lang.Object ref = subnetMask_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          subnetMask_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSubnetMask(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        subnetMask_ = value;
        onChanged();
        return this;
      }
      public Builder clearSubnetMask() {
        bitField0_ = (bitField0_ & ~0x00000010);
        subnetMask_ = getDefaultInstance().getSubnetMask();
        onChanged();
        return this;
      }
      void setSubnetMask(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        subnetMask_ = value;
        onChanged();
      }
      
      // optional string gateway = 6;
      private java.lang.Object gateway_ = "";
      public boolean hasGateway() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getGateway() {
        java.lang.Object ref = gateway_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          gateway_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGateway(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        gateway_ = value;
        onChanged();
        return this;
      }
      public Builder clearGateway() {
        bitField0_ = (bitField0_ & ~0x00000020);
        gateway_ = getDefaultInstance().getGateway();
        onChanged();
        return this;
      }
      void setGateway(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        gateway_ = value;
        onChanged();
      }
      
      // optional bool static_dns = 7;
      private boolean staticDns_ ;
      public boolean hasStaticDns() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public boolean getStaticDns() {
        return staticDns_;
      }
      public Builder setStaticDns(boolean value) {
        bitField0_ |= 0x00000040;
        staticDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearStaticDns() {
        bitField0_ = (bitField0_ & ~0x00000040);
        staticDns_ = false;
        onChanged();
        return this;
      }
      
      // optional string primary_dns = 8;
      private java.lang.Object primaryDns_ = "";
      public boolean hasPrimaryDns() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getPrimaryDns() {
        java.lang.Object ref = primaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          primaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPrimaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        primaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearPrimaryDns() {
        bitField0_ = (bitField0_ & ~0x00000080);
        primaryDns_ = getDefaultInstance().getPrimaryDns();
        onChanged();
        return this;
      }
      void setPrimaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        primaryDns_ = value;
        onChanged();
      }
      
      // optional string secondary_dns = 9;
      private java.lang.Object secondaryDns_ = "";
      public boolean hasSecondaryDns() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getSecondaryDns() {
        java.lang.Object ref = secondaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          secondaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSecondaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        secondaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearSecondaryDns() {
        bitField0_ = (bitField0_ & ~0x00000100);
        secondaryDns_ = getDefaultInstance().getSecondaryDns();
        onChanged();
        return this;
      }
      void setSecondaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        secondaryDns_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.WanType type = 10;
      private mrtech.smarthome.rpc.Models.WanType type_ = mrtech.smarthome.rpc.Models.WanType.WAN_TYPE_INTERNET;
      public boolean hasType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public mrtech.smarthome.rpc.Models.WanType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.WanType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = mrtech.smarthome.rpc.Models.WanType.WAN_TYPE_INTERNET;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.WanMacClone clone_mode = 11;
      private mrtech.smarthome.rpc.Models.WanMacClone cloneMode_ = mrtech.smarthome.rpc.Models.WanMacClone.WAN_MAC_CLONE_NONE;
      public boolean hasCloneMode() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public mrtech.smarthome.rpc.Models.WanMacClone getCloneMode() {
        return cloneMode_;
      }
      public Builder setCloneMode(mrtech.smarthome.rpc.Models.WanMacClone value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000400;
        cloneMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearCloneMode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        cloneMode_ = mrtech.smarthome.rpc.Models.WanMacClone.WAN_MAC_CLONE_NONE;
        onChanged();
        return this;
      }
      
      // optional string clone_mac = 12;
      private java.lang.Object cloneMac_ = "";
      public boolean hasCloneMac() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public String getCloneMac() {
        java.lang.Object ref = cloneMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          cloneMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCloneMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        cloneMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearCloneMac() {
        bitField0_ = (bitField0_ & ~0x00000800);
        cloneMac_ = getDefaultInstance().getCloneMac();
        onChanged();
        return this;
      }
      void setCloneMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000800;
        cloneMac_ = value;
        onChanged();
      }
      
      // optional string domain = 13;
      private java.lang.Object domain_ = "";
      public boolean hasDomain() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDomain(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        domain_ = value;
        onChanged();
        return this;
      }
      public Builder clearDomain() {
        bitField0_ = (bitField0_ & ~0x00001000);
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      void setDomain(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        domain_ = value;
        onChanged();
      }
      
      // optional string service_name = 14;
      private java.lang.Object serviceName_ = "";
      public boolean hasServiceName() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public String getServiceName() {
        java.lang.Object ref = serviceName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setServiceName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        serviceName_ = value;
        onChanged();
        return this;
      }
      public Builder clearServiceName() {
        bitField0_ = (bitField0_ & ~0x00002000);
        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }
      void setServiceName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00002000;
        serviceName_ = value;
        onChanged();
      }
      
      // optional bool enable_dos_protection = 15;
      private boolean enableDosProtection_ ;
      public boolean hasEnableDosProtection() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public boolean getEnableDosProtection() {
        return enableDosProtection_;
      }
      public Builder setEnableDosProtection(boolean value) {
        bitField0_ |= 0x00004000;
        enableDosProtection_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableDosProtection() {
        bitField0_ = (bitField0_ & ~0x00004000);
        enableDosProtection_ = false;
        onChanged();
        return this;
      }
      
      // optional bool enable_dmz = 16;
      private boolean enableDmz_ ;
      public boolean hasEnableDmz() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public boolean getEnableDmz() {
        return enableDmz_;
      }
      public Builder setEnableDmz(boolean value) {
        bitField0_ |= 0x00008000;
        enableDmz_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableDmz() {
        bitField0_ = (bitField0_ & ~0x00008000);
        enableDmz_ = false;
        onChanged();
        return this;
      }
      
      // optional string dmz_host = 17;
      private java.lang.Object dmzHost_ = "";
      public boolean hasDmzHost() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public String getDmzHost() {
        java.lang.Object ref = dmzHost_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          dmzHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setDmzHost(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        dmzHost_ = value;
        onChanged();
        return this;
      }
      public Builder clearDmzHost() {
        bitField0_ = (bitField0_ & ~0x00010000);
        dmzHost_ = getDefaultInstance().getDmzHost();
        onChanged();
        return this;
      }
      void setDmzHost(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00010000;
        dmzHost_ = value;
        onChanged();
      }
      
      // optional bool enable_igmp_proxy = 18;
      private boolean enableIgmpProxy_ ;
      public boolean hasEnableIgmpProxy() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public boolean getEnableIgmpProxy() {
        return enableIgmpProxy_;
      }
      public Builder setEnableIgmpProxy(boolean value) {
        bitField0_ |= 0x00020000;
        enableIgmpProxy_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableIgmpProxy() {
        bitField0_ = (bitField0_ & ~0x00020000);
        enableIgmpProxy_ = false;
        onChanged();
        return this;
      }
      
      // optional int32 mtu = 19;
      private int mtu_ ;
      public boolean hasMtu() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getMtu() {
        return mtu_;
      }
      public Builder setMtu(int value) {
        bitField0_ |= 0x00040000;
        mtu_ = value;
        onChanged();
        return this;
      }
      public Builder clearMtu() {
        bitField0_ = (bitField0_ & ~0x00040000);
        mtu_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 mru = 20;
      private int mru_ ;
      public boolean hasMru() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public int getMru() {
        return mru_;
      }
      public Builder setMru(int value) {
        bitField0_ |= 0x00080000;
        mru_ = value;
        onChanged();
        return this;
      }
      public Builder clearMru() {
        bitField0_ = (bitField0_ & ~0x00080000);
        mru_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool allow_ping = 21;
      private boolean allowPing_ ;
      public boolean hasAllowPing() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public boolean getAllowPing() {
        return allowPing_;
      }
      public Builder setAllowPing(boolean value) {
        bitField0_ |= 0x00100000;
        allowPing_ = value;
        onChanged();
        return this;
      }
      public Builder clearAllowPing() {
        bitField0_ = (bitField0_ & ~0x00100000);
        allowPing_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.WanConfig)
    }
    
    static {
      defaultInstance = new WanConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.WanConfig)
  }
  
  public interface WlanConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string ssid = 1;
    boolean hasSsid();
    String getSsid();
    
    // optional bool ssid_broadcast = 2;
    boolean hasSsidBroadcast();
    boolean getSsidBroadcast();
    
    // optional .mrtech.smarthome.rpc.WirelessMode operation_mode = 3;
    boolean hasOperationMode();
    mrtech.smarthome.rpc.Models.WirelessMode getOperationMode();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode security = 4;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index);
    int getSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
        int index);
    
    // optional string passphrase = 5;
    boolean hasPassphrase();
    String getPassphrase();
    
    // optional int32 channel = 6;
    boolean hasChannel();
    int getChannel();
    
    // optional .mrtech.smarthome.rpc.AccessRuleMode access_rule = 7;
    boolean hasAccessRule();
    mrtech.smarthome.rpc.Models.AccessRuleMode getAccessRule();
    
    // optional bool enabled = 8;
    boolean hasEnabled();
    boolean getEnabled();
    
    // optional .mrtech.smarthome.rpc.BandWidth band_width = 9;
    boolean hasBandWidth();
    mrtech.smarthome.rpc.Models.BandWidth getBandWidth();
  }
  public static final class WlanConfig extends
      com.google.protobuf.GeneratedMessage
      implements WlanConfigOrBuilder {
    // Use WlanConfig.newBuilder() to construct.
    private WlanConfig(Builder builder) {
      super(builder);
    }
    private WlanConfig(boolean noInit) {}
    
    private static final WlanConfig defaultInstance;
    public static WlanConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public WlanConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string ssid = 1;
    public static final int SSID_FIELD_NUMBER = 1;
    private java.lang.Object ssid_;
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ssid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool ssid_broadcast = 2;
    public static final int SSID_BROADCAST_FIELD_NUMBER = 2;
    private boolean ssidBroadcast_;
    public boolean hasSsidBroadcast() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getSsidBroadcast() {
      return ssidBroadcast_;
    }
    
    // optional .mrtech.smarthome.rpc.WirelessMode operation_mode = 3;
    public static final int OPERATION_MODE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.WirelessMode operationMode_;
    public boolean hasOperationMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.WirelessMode getOperationMode() {
      return operationMode_;
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode security = 4;
    public static final int SECURITY_FIELD_NUMBER = 4;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> security_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getSecurityList() {
      return security_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getSecurityOrBuilderList() {
      return security_;
    }
    public int getSecurityCount() {
      return security_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index) {
      return security_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
        int index) {
      return security_.get(index);
    }
    
    // optional string passphrase = 5;
    public static final int PASSPHRASE_FIELD_NUMBER = 5;
    private java.lang.Object passphrase_;
    public boolean hasPassphrase() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getPassphrase() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passphrase_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPassphraseBytes() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passphrase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 channel = 6;
    public static final int CHANNEL_FIELD_NUMBER = 6;
    private int channel_;
    public boolean hasChannel() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getChannel() {
      return channel_;
    }
    
    // optional .mrtech.smarthome.rpc.AccessRuleMode access_rule = 7;
    public static final int ACCESS_RULE_FIELD_NUMBER = 7;
    private mrtech.smarthome.rpc.Models.AccessRuleMode accessRule_;
    public boolean hasAccessRule() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public mrtech.smarthome.rpc.Models.AccessRuleMode getAccessRule() {
      return accessRule_;
    }
    
    // optional bool enabled = 8;
    public static final int ENABLED_FIELD_NUMBER = 8;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    // optional .mrtech.smarthome.rpc.BandWidth band_width = 9;
    public static final int BAND_WIDTH_FIELD_NUMBER = 9;
    private mrtech.smarthome.rpc.Models.BandWidth bandWidth_;
    public boolean hasBandWidth() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public mrtech.smarthome.rpc.Models.BandWidth getBandWidth() {
      return bandWidth_;
    }
    
    private void initFields() {
      ssid_ = "";
      ssidBroadcast_ = false;
      operationMode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
      security_ = java.util.Collections.emptyList();
      passphrase_ = "";
      channel_ = 0;
      accessRule_ = mrtech.smarthome.rpc.Models.AccessRuleMode.ACCESS_RULE_DISABLE;
      enabled_ = false;
      bandWidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, ssidBroadcast_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, operationMode_.getNumber());
      }
      for (int i = 0; i < security_.size(); i++) {
        output.writeMessage(4, security_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, channel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(7, accessRule_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(8, enabled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(9, bandWidth_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSsidBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, ssidBroadcast_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, operationMode_.getNumber());
      }
      for (int i = 0; i < security_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, security_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, channel_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, accessRule_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, enabled_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, bandWidth_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.WlanConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.WlanConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.WlanConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_WlanConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.WlanConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecurityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ssidBroadcast_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        operationMode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (securityBuilder_ == null) {
          security_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          securityBuilder_.clear();
        }
        passphrase_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        channel_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        accessRule_ = mrtech.smarthome.rpc.Models.AccessRuleMode.ACCESS_RULE_DISABLE;
        bitField0_ = (bitField0_ & ~0x00000040);
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        bandWidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.WlanConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.WlanConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.WlanConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.WlanConfig build() {
        mrtech.smarthome.rpc.Models.WlanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.WlanConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.WlanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.WlanConfig buildPartial() {
        mrtech.smarthome.rpc.Models.WlanConfig result = new mrtech.smarthome.rpc.Models.WlanConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ssidBroadcast_ = ssidBroadcast_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operationMode_ = operationMode_;
        if (securityBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            security_ = java.util.Collections.unmodifiableList(security_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.security_ = security_;
        } else {
          result.security_ = securityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.passphrase_ = passphrase_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.channel_ = channel_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.accessRule_ = accessRule_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.bandWidth_ = bandWidth_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.WlanConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.WlanConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.WlanConfig other) {
        if (other == mrtech.smarthome.rpc.Models.WlanConfig.getDefaultInstance()) return this;
        if (other.hasSsid()) {
          setSsid(other.getSsid());
        }
        if (other.hasSsidBroadcast()) {
          setSsidBroadcast(other.getSsidBroadcast());
        }
        if (other.hasOperationMode()) {
          setOperationMode(other.getOperationMode());
        }
        if (securityBuilder_ == null) {
          if (!other.security_.isEmpty()) {
            if (security_.isEmpty()) {
              security_ = other.security_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSecurityIsMutable();
              security_.addAll(other.security_);
            }
            onChanged();
          }
        } else {
          if (!other.security_.isEmpty()) {
            if (securityBuilder_.isEmpty()) {
              securityBuilder_.dispose();
              securityBuilder_ = null;
              security_ = other.security_;
              bitField0_ = (bitField0_ & ~0x00000008);
              securityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSecurityFieldBuilder() : null;
            } else {
              securityBuilder_.addAllMessages(other.security_);
            }
          }
        }
        if (other.hasPassphrase()) {
          setPassphrase(other.getPassphrase());
        }
        if (other.hasChannel()) {
          setChannel(other.getChannel());
        }
        if (other.hasAccessRule()) {
          setAccessRule(other.getAccessRule());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasBandWidth()) {
          setBandWidth(other.getBandWidth());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              ssid_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              ssidBroadcast_ = input.readBool();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WirelessMode value = mrtech.smarthome.rpc.Models.WirelessMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                operationMode_ = value;
              }
              break;
            }
            case 34: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSecurity(subBuilder.buildPartial());
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              passphrase_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              channel_ = input.readInt32();
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.AccessRuleMode value = mrtech.smarthome.rpc.Models.AccessRuleMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                accessRule_ = value;
              }
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              enabled_ = input.readBool();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.BandWidth value = mrtech.smarthome.rpc.Models.BandWidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                bandWidth_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string ssid = 1;
      private java.lang.Object ssid_ = "";
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      void setSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        ssid_ = value;
        onChanged();
      }
      
      // optional bool ssid_broadcast = 2;
      private boolean ssidBroadcast_ ;
      public boolean hasSsidBroadcast() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getSsidBroadcast() {
        return ssidBroadcast_;
      }
      public Builder setSsidBroadcast(boolean value) {
        bitField0_ |= 0x00000002;
        ssidBroadcast_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsidBroadcast() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ssidBroadcast_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.WirelessMode operation_mode = 3;
      private mrtech.smarthome.rpc.Models.WirelessMode operationMode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
      public boolean hasOperationMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.WirelessMode getOperationMode() {
        return operationMode_;
      }
      public Builder setOperationMode(mrtech.smarthome.rpc.Models.WirelessMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        operationMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearOperationMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operationMode_ = mrtech.smarthome.rpc.Models.WirelessMode.WIRELESS_MODE_B;
        onChanged();
        return this;
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode security = 4;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> security_ =
        java.util.Collections.emptyList();
      private void ensureSecurityIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          security_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(security_);
          bitField0_ |= 0x00000008;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> securityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getSecurityList() {
        if (securityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(security_);
        } else {
          return securityBuilder_.getMessageList();
        }
      }
      public int getSecurityCount() {
        if (securityBuilder_ == null) {
          return security_.size();
        } else {
          return securityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index) {
        if (securityBuilder_ == null) {
          return security_.get(index);
        } else {
          return securityBuilder_.getMessage(index);
        }
      }
      public Builder setSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.set(index, value);
          onChanged();
        } else {
          securityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.set(index, builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.add(value);
          onChanged();
        } else {
          securityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.add(index, value);
          onChanged();
        } else {
          securityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.add(builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.add(index, builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          super.addAll(values, security_);
          onChanged();
        } else {
          securityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSecurity() {
        if (securityBuilder_ == null) {
          security_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          securityBuilder_.clear();
        }
        return this;
      }
      public Builder removeSecurity(int index) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.remove(index);
          onChanged();
        } else {
          securityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getSecurityBuilder(
          int index) {
        return getSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
          int index) {
        if (securityBuilder_ == null) {
          return security_.get(index);  } else {
          return securityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getSecurityOrBuilderList() {
        if (securityBuilder_ != null) {
          return securityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(security_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addSecurityBuilder() {
        return getSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addSecurityBuilder(
          int index) {
        return getSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getSecurityBuilderList() {
        return getSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getSecurityFieldBuilder() {
        if (securityBuilder_ == null) {
          securityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  security_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        return securityBuilder_;
      }
      
      // optional string passphrase = 5;
      private java.lang.Object passphrase_ = "";
      public boolean hasPassphrase() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getPassphrase() {
        java.lang.Object ref = passphrase_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passphrase_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassphrase(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        passphrase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphrase() {
        bitField0_ = (bitField0_ & ~0x00000010);
        passphrase_ = getDefaultInstance().getPassphrase();
        onChanged();
        return this;
      }
      void setPassphrase(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        passphrase_ = value;
        onChanged();
      }
      
      // optional int32 channel = 6;
      private int channel_ ;
      public boolean hasChannel() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public int getChannel() {
        return channel_;
      }
      public Builder setChannel(int value) {
        bitField0_ |= 0x00000020;
        channel_ = value;
        onChanged();
        return this;
      }
      public Builder clearChannel() {
        bitField0_ = (bitField0_ & ~0x00000020);
        channel_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.AccessRuleMode access_rule = 7;
      private mrtech.smarthome.rpc.Models.AccessRuleMode accessRule_ = mrtech.smarthome.rpc.Models.AccessRuleMode.ACCESS_RULE_DISABLE;
      public boolean hasAccessRule() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public mrtech.smarthome.rpc.Models.AccessRuleMode getAccessRule() {
        return accessRule_;
      }
      public Builder setAccessRule(mrtech.smarthome.rpc.Models.AccessRuleMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        accessRule_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccessRule() {
        bitField0_ = (bitField0_ & ~0x00000040);
        accessRule_ = mrtech.smarthome.rpc.Models.AccessRuleMode.ACCESS_RULE_DISABLE;
        onChanged();
        return this;
      }
      
      // optional bool enabled = 8;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000080;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000080);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.BandWidth band_width = 9;
      private mrtech.smarthome.rpc.Models.BandWidth bandWidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
      public boolean hasBandWidth() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public mrtech.smarthome.rpc.Models.BandWidth getBandWidth() {
        return bandWidth_;
      }
      public Builder setBandWidth(mrtech.smarthome.rpc.Models.BandWidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        bandWidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearBandWidth() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bandWidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.WlanConfig)
    }
    
    static {
      defaultInstance = new WlanConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.WlanConfig)
  }
  
  public interface GuestWlanConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool enabled = 1;
    boolean hasEnabled();
    boolean getEnabled();
    
    // optional bool local_access = 2;
    boolean hasLocalAccess();
    boolean getLocalAccess();
    
    // optional string ssid = 3;
    boolean hasSsid();
    String getSsid();
    
    // optional bool ssid_broadcast = 4;
    boolean hasSsidBroadcast();
    boolean getSsidBroadcast();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode security = 5;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index);
    int getSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
        int index);
    
    // optional string passphrase = 6;
    boolean hasPassphrase();
    String getPassphrase();
  }
  public static final class GuestWlanConfig extends
      com.google.protobuf.GeneratedMessage
      implements GuestWlanConfigOrBuilder {
    // Use GuestWlanConfig.newBuilder() to construct.
    private GuestWlanConfig(Builder builder) {
      super(builder);
    }
    private GuestWlanConfig(boolean noInit) {}
    
    private static final GuestWlanConfig defaultInstance;
    public static GuestWlanConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public GuestWlanConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GuestWlanConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GuestWlanConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool enabled = 1;
    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    // optional bool local_access = 2;
    public static final int LOCAL_ACCESS_FIELD_NUMBER = 2;
    private boolean localAccess_;
    public boolean hasLocalAccess() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public boolean getLocalAccess() {
      return localAccess_;
    }
    
    // optional string ssid = 3;
    public static final int SSID_FIELD_NUMBER = 3;
    private java.lang.Object ssid_;
    public boolean hasSsid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getSsid() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ssid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getSsidBytes() {
      java.lang.Object ref = ssid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ssid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool ssid_broadcast = 4;
    public static final int SSID_BROADCAST_FIELD_NUMBER = 4;
    private boolean ssidBroadcast_;
    public boolean hasSsidBroadcast() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getSsidBroadcast() {
      return ssidBroadcast_;
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode security = 5;
    public static final int SECURITY_FIELD_NUMBER = 5;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> security_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getSecurityList() {
      return security_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getSecurityOrBuilderList() {
      return security_;
    }
    public int getSecurityCount() {
      return security_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index) {
      return security_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
        int index) {
      return security_.get(index);
    }
    
    // optional string passphrase = 6;
    public static final int PASSPHRASE_FIELD_NUMBER = 6;
    private java.lang.Object passphrase_;
    public boolean hasPassphrase() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getPassphrase() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passphrase_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPassphraseBytes() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passphrase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      enabled_ = false;
      localAccess_ = false;
      ssid_ = "";
      ssidBroadcast_ = false;
      security_ = java.util.Collections.emptyList();
      passphrase_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, localAccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSsidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, ssidBroadcast_);
      }
      for (int i = 0; i < security_.size(); i++) {
        output.writeMessage(5, security_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getPassphraseBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, localAccess_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSsidBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, ssidBroadcast_);
      }
      for (int i = 0; i < security_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, security_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPassphraseBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GuestWlanConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.GuestWlanConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.GuestWlanConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GuestWlanConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GuestWlanConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.GuestWlanConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSecurityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        localAccess_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        ssid_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        ssidBroadcast_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (securityBuilder_ == null) {
          security_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          securityBuilder_.clear();
        }
        passphrase_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.GuestWlanConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.GuestWlanConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.GuestWlanConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.GuestWlanConfig build() {
        mrtech.smarthome.rpc.Models.GuestWlanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.GuestWlanConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.GuestWlanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.GuestWlanConfig buildPartial() {
        mrtech.smarthome.rpc.Models.GuestWlanConfig result = new mrtech.smarthome.rpc.Models.GuestWlanConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.localAccess_ = localAccess_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ssid_ = ssid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ssidBroadcast_ = ssidBroadcast_;
        if (securityBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            security_ = java.util.Collections.unmodifiableList(security_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.security_ = security_;
        } else {
          result.security_ = securityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.passphrase_ = passphrase_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.GuestWlanConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.GuestWlanConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.GuestWlanConfig other) {
        if (other == mrtech.smarthome.rpc.Models.GuestWlanConfig.getDefaultInstance()) return this;
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasLocalAccess()) {
          setLocalAccess(other.getLocalAccess());
        }
        if (other.hasSsid()) {
          setSsid(other.getSsid());
        }
        if (other.hasSsidBroadcast()) {
          setSsidBroadcast(other.getSsidBroadcast());
        }
        if (securityBuilder_ == null) {
          if (!other.security_.isEmpty()) {
            if (security_.isEmpty()) {
              security_ = other.security_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSecurityIsMutable();
              security_.addAll(other.security_);
            }
            onChanged();
          }
        } else {
          if (!other.security_.isEmpty()) {
            if (securityBuilder_.isEmpty()) {
              securityBuilder_.dispose();
              securityBuilder_ = null;
              security_ = other.security_;
              bitField0_ = (bitField0_ & ~0x00000010);
              securityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSecurityFieldBuilder() : null;
            } else {
              securityBuilder_.addAllMessages(other.security_);
            }
          }
        }
        if (other.hasPassphrase()) {
          setPassphrase(other.getPassphrase());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enabled_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              localAccess_ = input.readBool();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              ssid_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              ssidBroadcast_ = input.readBool();
              break;
            }
            case 42: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addSecurity(subBuilder.buildPartial());
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              passphrase_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool enabled = 1;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool local_access = 2;
      private boolean localAccess_ ;
      public boolean hasLocalAccess() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public boolean getLocalAccess() {
        return localAccess_;
      }
      public Builder setLocalAccess(boolean value) {
        bitField0_ |= 0x00000002;
        localAccess_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalAccess() {
        bitField0_ = (bitField0_ & ~0x00000002);
        localAccess_ = false;
        onChanged();
        return this;
      }
      
      // optional string ssid = 3;
      private java.lang.Object ssid_ = "";
      public boolean hasSsid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getSsid() {
        java.lang.Object ref = ssid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ssid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        ssid_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ssid_ = getDefaultInstance().getSsid();
        onChanged();
        return this;
      }
      void setSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        ssid_ = value;
        onChanged();
      }
      
      // optional bool ssid_broadcast = 4;
      private boolean ssidBroadcast_ ;
      public boolean hasSsidBroadcast() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getSsidBroadcast() {
        return ssidBroadcast_;
      }
      public Builder setSsidBroadcast(boolean value) {
        bitField0_ |= 0x00000008;
        ssidBroadcast_ = value;
        onChanged();
        return this;
      }
      public Builder clearSsidBroadcast() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ssidBroadcast_ = false;
        onChanged();
        return this;
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode security = 5;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> security_ =
        java.util.Collections.emptyList();
      private void ensureSecurityIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          security_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(security_);
          bitField0_ |= 0x00000010;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> securityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getSecurityList() {
        if (securityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(security_);
        } else {
          return securityBuilder_.getMessageList();
        }
      }
      public int getSecurityCount() {
        if (securityBuilder_ == null) {
          return security_.size();
        } else {
          return securityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getSecurity(int index) {
        if (securityBuilder_ == null) {
          return security_.get(index);
        } else {
          return securityBuilder_.getMessage(index);
        }
      }
      public Builder setSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.set(index, value);
          onChanged();
        } else {
          securityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.set(index, builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.add(value);
          onChanged();
        } else {
          securityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (securityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSecurityIsMutable();
          security_.add(index, value);
          onChanged();
        } else {
          securityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.add(builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.add(index, builderForValue.build());
          onChanged();
        } else {
          securityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          super.addAll(values, security_);
          onChanged();
        } else {
          securityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearSecurity() {
        if (securityBuilder_ == null) {
          security_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          securityBuilder_.clear();
        }
        return this;
      }
      public Builder removeSecurity(int index) {
        if (securityBuilder_ == null) {
          ensureSecurityIsMutable();
          security_.remove(index);
          onChanged();
        } else {
          securityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getSecurityBuilder(
          int index) {
        return getSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getSecurityOrBuilder(
          int index) {
        if (securityBuilder_ == null) {
          return security_.get(index);  } else {
          return securityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getSecurityOrBuilderList() {
        if (securityBuilder_ != null) {
          return securityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(security_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addSecurityBuilder() {
        return getSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addSecurityBuilder(
          int index) {
        return getSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getSecurityBuilderList() {
        return getSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getSecurityFieldBuilder() {
        if (securityBuilder_ == null) {
          securityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  security_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          security_ = null;
        }
        return securityBuilder_;
      }
      
      // optional string passphrase = 6;
      private java.lang.Object passphrase_ = "";
      public boolean hasPassphrase() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getPassphrase() {
        java.lang.Object ref = passphrase_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passphrase_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassphrase(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        passphrase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphrase() {
        bitField0_ = (bitField0_ & ~0x00000020);
        passphrase_ = getDefaultInstance().getPassphrase();
        onChanged();
        return this;
      }
      void setPassphrase(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        passphrase_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.GuestWlanConfig)
    }
    
    static {
      defaultInstance = new GuestWlanConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.GuestWlanConfig)
  }
  
  public interface SambaConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.SambaMode mode = 1;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.SambaMode getMode();
    
    // optional string user = 2;
    boolean hasUser();
    String getUser();
    
    // optional string password = 3;
    boolean hasPassword();
    String getPassword();
  }
  public static final class SambaConfig extends
      com.google.protobuf.GeneratedMessage
      implements SambaConfigOrBuilder {
    // Use SambaConfig.newBuilder() to construct.
    private SambaConfig(Builder builder) {
      super(builder);
    }
    private SambaConfig(boolean noInit) {}
    
    private static final SambaConfig defaultInstance;
    public static SambaConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public SambaConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SambaConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SambaConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.SambaMode mode = 1;
    public static final int MODE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.SambaMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.SambaMode getMode() {
      return mode_;
    }
    
    // optional string user = 2;
    public static final int USER_FIELD_NUMBER = 2;
    private java.lang.Object user_;
    public boolean hasUser() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getUser() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          user_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUserBytes() {
      java.lang.Object ref = user_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        user_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private java.lang.Object password_;
    public boolean hasPassword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getPassword() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          password_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPasswordBytes() {
      java.lang.Object ref = password_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        password_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      mode_ = mrtech.smarthome.rpc.Models.SambaMode.SAMBA_MODE_DISABLED;
      user_ = "";
      password_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getUserBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getPasswordBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getUserBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getPasswordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SambaConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SambaConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SambaConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SambaConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SambaConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SambaConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mode_ = mrtech.smarthome.rpc.Models.SambaMode.SAMBA_MODE_DISABLED;
        bitField0_ = (bitField0_ & ~0x00000001);
        user_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        password_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SambaConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SambaConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SambaConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SambaConfig build() {
        mrtech.smarthome.rpc.Models.SambaConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SambaConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SambaConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SambaConfig buildPartial() {
        mrtech.smarthome.rpc.Models.SambaConfig result = new mrtech.smarthome.rpc.Models.SambaConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.user_ = user_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.password_ = password_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SambaConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SambaConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SambaConfig other) {
        if (other == mrtech.smarthome.rpc.Models.SambaConfig.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasUser()) {
          setUser(other.getUser());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.SambaMode value = mrtech.smarthome.rpc.Models.SambaMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                mode_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              user_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              password_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.SambaMode mode = 1;
      private mrtech.smarthome.rpc.Models.SambaMode mode_ = mrtech.smarthome.rpc.Models.SambaMode.SAMBA_MODE_DISABLED;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.SambaMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.SambaMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = mrtech.smarthome.rpc.Models.SambaMode.SAMBA_MODE_DISABLED;
        onChanged();
        return this;
      }
      
      // optional string user = 2;
      private java.lang.Object user_ = "";
      public boolean hasUser() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getUser() {
        java.lang.Object ref = user_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          user_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUser(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        user_ = value;
        onChanged();
        return this;
      }
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000002);
        user_ = getDefaultInstance().getUser();
        onChanged();
        return this;
      }
      void setUser(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        user_ = value;
        onChanged();
      }
      
      // optional string password = 3;
      private java.lang.Object password_ = "";
      public boolean hasPassword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getPassword() {
        java.lang.Object ref = password_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          password_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        password_ = getDefaultInstance().getPassword();
        onChanged();
        return this;
      }
      void setPassword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        password_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SambaConfig)
    }
    
    static {
      defaultInstance = new SambaConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SambaConfig)
  }
  
  public interface NetworkDeviceOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string mac = 1;
    boolean hasMac();
    String getMac();
    
    // optional string ip = 2;
    boolean hasIp();
    String getIp();
    
    // optional string netbios = 3;
    boolean hasNetbios();
    String getNetbios();
    
    // optional .mrtech.smarthome.rpc.AccessType type = 4;
    boolean hasType();
    mrtech.smarthome.rpc.Models.AccessType getType();
    
    // optional .mrtech.smarthome.rpc.WlanPort port = 5;
    boolean hasPort();
    mrtech.smarthome.rpc.Models.WlanPort getPort();
    
    // optional uint64 upload_rate = 6;
    boolean hasUploadRate();
    long getUploadRate();
    
    // optional uint64 download_rate = 7;
    boolean hasDownloadRate();
    long getDownloadRate();
  }
  public static final class NetworkDevice extends
      com.google.protobuf.GeneratedMessage
      implements NetworkDeviceOrBuilder {
    // Use NetworkDevice.newBuilder() to construct.
    private NetworkDevice(Builder builder) {
      super(builder);
    }
    private NetworkDevice(boolean noInit) {}
    
    private static final NetworkDevice defaultInstance;
    public static NetworkDevice getDefaultInstance() {
      return defaultInstance;
    }
    
    public NetworkDevice getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkDevice_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkDevice_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string mac = 1;
    public static final int MAC_FIELD_NUMBER = 1;
    private java.lang.Object mac_;
    public boolean hasMac() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getMac() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          mac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacBytes() {
      java.lang.Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string ip = 2;
    public static final int IP_FIELD_NUMBER = 2;
    private java.lang.Object ip_;
    public boolean hasIp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ip_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string netbios = 3;
    public static final int NETBIOS_FIELD_NUMBER = 3;
    private java.lang.Object netbios_;
    public boolean hasNetbios() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getNetbios() {
      java.lang.Object ref = netbios_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          netbios_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNetbiosBytes() {
      java.lang.Object ref = netbios_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        netbios_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.AccessType type = 4;
    public static final int TYPE_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.AccessType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.AccessType getType() {
      return type_;
    }
    
    // optional .mrtech.smarthome.rpc.WlanPort port = 5;
    public static final int PORT_FIELD_NUMBER = 5;
    private mrtech.smarthome.rpc.Models.WlanPort port_;
    public boolean hasPort() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public mrtech.smarthome.rpc.Models.WlanPort getPort() {
      return port_;
    }
    
    // optional uint64 upload_rate = 6;
    public static final int UPLOAD_RATE_FIELD_NUMBER = 6;
    private long uploadRate_;
    public boolean hasUploadRate() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getUploadRate() {
      return uploadRate_;
    }
    
    // optional uint64 download_rate = 7;
    public static final int DOWNLOAD_RATE_FIELD_NUMBER = 7;
    private long downloadRate_;
    public boolean hasDownloadRate() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public long getDownloadRate() {
      return downloadRate_;
    }
    
    private void initFields() {
      mac_ = "";
      ip_ = "";
      netbios_ = "";
      type_ = mrtech.smarthome.rpc.Models.AccessType.ACCESS_TYPE_WIRED;
      port_ = mrtech.smarthome.rpc.Models.WlanPort.WLAN_PORT_1;
      uploadRate_ = 0L;
      downloadRate_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getMacBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNetbiosBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, port_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt64(6, uploadRate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt64(7, downloadRate_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getMacBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIpBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNetbiosBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, type_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, port_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, uploadRate_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, downloadRate_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.NetworkDevice prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.NetworkDeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkDevice_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkDevice_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.NetworkDevice.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        mac_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        netbios_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = mrtech.smarthome.rpc.Models.AccessType.ACCESS_TYPE_WIRED;
        bitField0_ = (bitField0_ & ~0x00000008);
        port_ = mrtech.smarthome.rpc.Models.WlanPort.WLAN_PORT_1;
        bitField0_ = (bitField0_ & ~0x00000010);
        uploadRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        downloadRate_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.NetworkDevice.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.NetworkDevice getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.NetworkDevice.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.NetworkDevice build() {
        mrtech.smarthome.rpc.Models.NetworkDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.NetworkDevice buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.NetworkDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.NetworkDevice buildPartial() {
        mrtech.smarthome.rpc.Models.NetworkDevice result = new mrtech.smarthome.rpc.Models.NetworkDevice(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mac_ = mac_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ip_ = ip_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.netbios_ = netbios_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.port_ = port_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.uploadRate_ = uploadRate_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.downloadRate_ = downloadRate_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.NetworkDevice) {
          return mergeFrom((mrtech.smarthome.rpc.Models.NetworkDevice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.NetworkDevice other) {
        if (other == mrtech.smarthome.rpc.Models.NetworkDevice.getDefaultInstance()) return this;
        if (other.hasMac()) {
          setMac(other.getMac());
        }
        if (other.hasIp()) {
          setIp(other.getIp());
        }
        if (other.hasNetbios()) {
          setNetbios(other.getNetbios());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPort()) {
          setPort(other.getPort());
        }
        if (other.hasUploadRate()) {
          setUploadRate(other.getUploadRate());
        }
        if (other.hasDownloadRate()) {
          setDownloadRate(other.getDownloadRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              mac_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              ip_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              netbios_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.AccessType value = mrtech.smarthome.rpc.Models.AccessType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                type_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WlanPort value = mrtech.smarthome.rpc.Models.WlanPort.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                port_ = value;
              }
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              uploadRate_ = input.readUInt64();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              downloadRate_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string mac = 1;
      private java.lang.Object mac_ = "";
      public boolean hasMac() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getMac() {
        java.lang.Object ref = mac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        mac_ = value;
        onChanged();
        return this;
      }
      public Builder clearMac() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mac_ = getDefaultInstance().getMac();
        onChanged();
        return this;
      }
      void setMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        mac_ = value;
        onChanged();
      }
      
      // optional string ip = 2;
      private java.lang.Object ip_ = "";
      public boolean hasIp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIp(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
        return this;
      }
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      void setIp(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        ip_ = value;
        onChanged();
      }
      
      // optional string netbios = 3;
      private java.lang.Object netbios_ = "";
      public boolean hasNetbios() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getNetbios() {
        java.lang.Object ref = netbios_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          netbios_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setNetbios(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        netbios_ = value;
        onChanged();
        return this;
      }
      public Builder clearNetbios() {
        bitField0_ = (bitField0_ & ~0x00000004);
        netbios_ = getDefaultInstance().getNetbios();
        onChanged();
        return this;
      }
      void setNetbios(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        netbios_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.AccessType type = 4;
      private mrtech.smarthome.rpc.Models.AccessType type_ = mrtech.smarthome.rpc.Models.AccessType.ACCESS_TYPE_WIRED;
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.AccessType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.AccessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = mrtech.smarthome.rpc.Models.AccessType.ACCESS_TYPE_WIRED;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.WlanPort port = 5;
      private mrtech.smarthome.rpc.Models.WlanPort port_ = mrtech.smarthome.rpc.Models.WlanPort.WLAN_PORT_1;
      public boolean hasPort() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public mrtech.smarthome.rpc.Models.WlanPort getPort() {
        return port_;
      }
      public Builder setPort(mrtech.smarthome.rpc.Models.WlanPort value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        port_ = value;
        onChanged();
        return this;
      }
      public Builder clearPort() {
        bitField0_ = (bitField0_ & ~0x00000010);
        port_ = mrtech.smarthome.rpc.Models.WlanPort.WLAN_PORT_1;
        onChanged();
        return this;
      }
      
      // optional uint64 upload_rate = 6;
      private long uploadRate_ ;
      public boolean hasUploadRate() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getUploadRate() {
        return uploadRate_;
      }
      public Builder setUploadRate(long value) {
        bitField0_ |= 0x00000020;
        uploadRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearUploadRate() {
        bitField0_ = (bitField0_ & ~0x00000020);
        uploadRate_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 download_rate = 7;
      private long downloadRate_ ;
      public boolean hasDownloadRate() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public long getDownloadRate() {
        return downloadRate_;
      }
      public Builder setDownloadRate(long value) {
        bitField0_ |= 0x00000040;
        downloadRate_ = value;
        onChanged();
        return this;
      }
      public Builder clearDownloadRate() {
        bitField0_ = (bitField0_ & ~0x00000040);
        downloadRate_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.NetworkDevice)
    }
    
    static {
      defaultInstance = new NetworkDevice(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.NetworkDevice)
  }
  
  public interface BandwidthTestResultOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool testing = 1;
    boolean hasTesting();
    boolean getTesting();
    
    // optional uint64 download_bandwidth = 2;
    boolean hasDownloadBandwidth();
    long getDownloadBandwidth();
    
    // optional uint64 upload_bandwidth = 3;
    boolean hasUploadBandwidth();
    long getUploadBandwidth();
    
    // optional int32 delay = 4;
    boolean hasDelay();
    int getDelay();
    
    // optional string carrier = 5;
    boolean hasCarrier();
    String getCarrier();
    
    // optional string location = 6;
    boolean hasLocation();
    String getLocation();
    
    // optional string server_location = 7;
    boolean hasServerLocation();
    String getServerLocation();
  }
  public static final class BandwidthTestResult extends
      com.google.protobuf.GeneratedMessage
      implements BandwidthTestResultOrBuilder {
    // Use BandwidthTestResult.newBuilder() to construct.
    private BandwidthTestResult(Builder builder) {
      super(builder);
    }
    private BandwidthTestResult(boolean noInit) {}
    
    private static final BandwidthTestResult defaultInstance;
    public static BandwidthTestResult getDefaultInstance() {
      return defaultInstance;
    }
    
    public BandwidthTestResult getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BandwidthTestResult_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BandwidthTestResult_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool testing = 1;
    public static final int TESTING_FIELD_NUMBER = 1;
    private boolean testing_;
    public boolean hasTesting() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getTesting() {
      return testing_;
    }
    
    // optional uint64 download_bandwidth = 2;
    public static final int DOWNLOAD_BANDWIDTH_FIELD_NUMBER = 2;
    private long downloadBandwidth_;
    public boolean hasDownloadBandwidth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getDownloadBandwidth() {
      return downloadBandwidth_;
    }
    
    // optional uint64 upload_bandwidth = 3;
    public static final int UPLOAD_BANDWIDTH_FIELD_NUMBER = 3;
    private long uploadBandwidth_;
    public boolean hasUploadBandwidth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getUploadBandwidth() {
      return uploadBandwidth_;
    }
    
    // optional int32 delay = 4;
    public static final int DELAY_FIELD_NUMBER = 4;
    private int delay_;
    public boolean hasDelay() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getDelay() {
      return delay_;
    }
    
    // optional string carrier = 5;
    public static final int CARRIER_FIELD_NUMBER = 5;
    private java.lang.Object carrier_;
    public boolean hasCarrier() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getCarrier() {
      java.lang.Object ref = carrier_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          carrier_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCarrierBytes() {
      java.lang.Object ref = carrier_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        carrier_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string location = 6;
    public static final int LOCATION_FIELD_NUMBER = 6;
    private java.lang.Object location_;
    public boolean hasLocation() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getLocation() {
      java.lang.Object ref = location_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          location_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLocationBytes() {
      java.lang.Object ref = location_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        location_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string server_location = 7;
    public static final int SERVER_LOCATION_FIELD_NUMBER = 7;
    private java.lang.Object serverLocation_;
    public boolean hasServerLocation() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getServerLocation() {
      java.lang.Object ref = serverLocation_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serverLocation_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getServerLocationBytes() {
      java.lang.Object ref = serverLocation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serverLocation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      testing_ = false;
      downloadBandwidth_ = 0L;
      uploadBandwidth_ = 0L;
      delay_ = 0;
      carrier_ = "";
      location_ = "";
      serverLocation_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, testing_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, downloadBandwidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, uploadBandwidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, delay_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCarrierBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getLocationBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getServerLocationBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, testing_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, downloadBandwidth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, uploadBandwidth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, delay_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCarrierBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getLocationBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getServerLocationBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.BandwidthTestResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.BandwidthTestResult prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.BandwidthTestResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BandwidthTestResult_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_BandwidthTestResult_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.BandwidthTestResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        testing_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        downloadBandwidth_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        uploadBandwidth_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        delay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        carrier_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        location_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        serverLocation_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.BandwidthTestResult.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.BandwidthTestResult getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.BandwidthTestResult.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.BandwidthTestResult build() {
        mrtech.smarthome.rpc.Models.BandwidthTestResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.BandwidthTestResult buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.BandwidthTestResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.BandwidthTestResult buildPartial() {
        mrtech.smarthome.rpc.Models.BandwidthTestResult result = new mrtech.smarthome.rpc.Models.BandwidthTestResult(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.testing_ = testing_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.downloadBandwidth_ = downloadBandwidth_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.uploadBandwidth_ = uploadBandwidth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.delay_ = delay_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.carrier_ = carrier_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.location_ = location_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.serverLocation_ = serverLocation_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.BandwidthTestResult) {
          return mergeFrom((mrtech.smarthome.rpc.Models.BandwidthTestResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.BandwidthTestResult other) {
        if (other == mrtech.smarthome.rpc.Models.BandwidthTestResult.getDefaultInstance()) return this;
        if (other.hasTesting()) {
          setTesting(other.getTesting());
        }
        if (other.hasDownloadBandwidth()) {
          setDownloadBandwidth(other.getDownloadBandwidth());
        }
        if (other.hasUploadBandwidth()) {
          setUploadBandwidth(other.getUploadBandwidth());
        }
        if (other.hasDelay()) {
          setDelay(other.getDelay());
        }
        if (other.hasCarrier()) {
          setCarrier(other.getCarrier());
        }
        if (other.hasLocation()) {
          setLocation(other.getLocation());
        }
        if (other.hasServerLocation()) {
          setServerLocation(other.getServerLocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              testing_ = input.readBool();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              downloadBandwidth_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              uploadBandwidth_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              delay_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              carrier_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              location_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              serverLocation_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool testing = 1;
      private boolean testing_ ;
      public boolean hasTesting() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getTesting() {
        return testing_;
      }
      public Builder setTesting(boolean value) {
        bitField0_ |= 0x00000001;
        testing_ = value;
        onChanged();
        return this;
      }
      public Builder clearTesting() {
        bitField0_ = (bitField0_ & ~0x00000001);
        testing_ = false;
        onChanged();
        return this;
      }
      
      // optional uint64 download_bandwidth = 2;
      private long downloadBandwidth_ ;
      public boolean hasDownloadBandwidth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getDownloadBandwidth() {
        return downloadBandwidth_;
      }
      public Builder setDownloadBandwidth(long value) {
        bitField0_ |= 0x00000002;
        downloadBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearDownloadBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000002);
        downloadBandwidth_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 upload_bandwidth = 3;
      private long uploadBandwidth_ ;
      public boolean hasUploadBandwidth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getUploadBandwidth() {
        return uploadBandwidth_;
      }
      public Builder setUploadBandwidth(long value) {
        bitField0_ |= 0x00000004;
        uploadBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearUploadBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        uploadBandwidth_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 delay = 4;
      private int delay_ ;
      public boolean hasDelay() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getDelay() {
        return delay_;
      }
      public Builder setDelay(int value) {
        bitField0_ |= 0x00000008;
        delay_ = value;
        onChanged();
        return this;
      }
      public Builder clearDelay() {
        bitField0_ = (bitField0_ & ~0x00000008);
        delay_ = 0;
        onChanged();
        return this;
      }
      
      // optional string carrier = 5;
      private java.lang.Object carrier_ = "";
      public boolean hasCarrier() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getCarrier() {
        java.lang.Object ref = carrier_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          carrier_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCarrier(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        carrier_ = value;
        onChanged();
        return this;
      }
      public Builder clearCarrier() {
        bitField0_ = (bitField0_ & ~0x00000010);
        carrier_ = getDefaultInstance().getCarrier();
        onChanged();
        return this;
      }
      void setCarrier(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        carrier_ = value;
        onChanged();
      }
      
      // optional string location = 6;
      private java.lang.Object location_ = "";
      public boolean hasLocation() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getLocation() {
        java.lang.Object ref = location_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          location_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLocation(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        location_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocation() {
        bitField0_ = (bitField0_ & ~0x00000020);
        location_ = getDefaultInstance().getLocation();
        onChanged();
        return this;
      }
      void setLocation(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        location_ = value;
        onChanged();
      }
      
      // optional string server_location = 7;
      private java.lang.Object serverLocation_ = "";
      public boolean hasServerLocation() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getServerLocation() {
        java.lang.Object ref = serverLocation_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serverLocation_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setServerLocation(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        serverLocation_ = value;
        onChanged();
        return this;
      }
      public Builder clearServerLocation() {
        bitField0_ = (bitField0_ & ~0x00000040);
        serverLocation_ = getDefaultInstance().getServerLocation();
        onChanged();
        return this;
      }
      void setServerLocation(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        serverLocation_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.BandwidthTestResult)
    }
    
    static {
      defaultInstance = new BandwidthTestResult(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.BandwidthTestResult)
  }
  
  public interface HddInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.HddStatus status = 1;
    boolean hasStatus();
    mrtech.smarthome.rpc.Models.HddStatus getStatus();
    
    // optional uint64 total_space = 2;
    boolean hasTotalSpace();
    long getTotalSpace();
    
    // optional uint64 used_space = 3;
    boolean hasUsedSpace();
    long getUsedSpace();
  }
  public static final class HddInfo extends
      com.google.protobuf.GeneratedMessage
      implements HddInfoOrBuilder {
    // Use HddInfo.newBuilder() to construct.
    private HddInfo(Builder builder) {
      super(builder);
    }
    private HddInfo(boolean noInit) {}
    
    private static final HddInfo defaultInstance;
    public static HddInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public HddInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_HddInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_HddInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.HddStatus status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.HddStatus status_;
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.HddStatus getStatus() {
      return status_;
    }
    
    // optional uint64 total_space = 2;
    public static final int TOTAL_SPACE_FIELD_NUMBER = 2;
    private long totalSpace_;
    public boolean hasTotalSpace() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getTotalSpace() {
      return totalSpace_;
    }
    
    // optional uint64 used_space = 3;
    public static final int USED_SPACE_FIELD_NUMBER = 3;
    private long usedSpace_;
    public boolean hasUsedSpace() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getUsedSpace() {
      return usedSpace_;
    }
    
    private void initFields() {
      status_ = mrtech.smarthome.rpc.Models.HddStatus.HDD_STATUS_NOT_INSTALLED;
      totalSpace_ = 0L;
      usedSpace_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, totalSpace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, usedSpace_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, totalSpace_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, usedSpace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.HddInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.HddInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.HddInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_HddInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_HddInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.HddInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        status_ = mrtech.smarthome.rpc.Models.HddStatus.HDD_STATUS_NOT_INSTALLED;
        bitField0_ = (bitField0_ & ~0x00000001);
        totalSpace_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        usedSpace_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.HddInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.HddInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.HddInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.HddInfo build() {
        mrtech.smarthome.rpc.Models.HddInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.HddInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.HddInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.HddInfo buildPartial() {
        mrtech.smarthome.rpc.Models.HddInfo result = new mrtech.smarthome.rpc.Models.HddInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalSpace_ = totalSpace_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.usedSpace_ = usedSpace_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.HddInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.HddInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.HddInfo other) {
        if (other == mrtech.smarthome.rpc.Models.HddInfo.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasTotalSpace()) {
          setTotalSpace(other.getTotalSpace());
        }
        if (other.hasUsedSpace()) {
          setUsedSpace(other.getUsedSpace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.HddStatus value = mrtech.smarthome.rpc.Models.HddStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                status_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              totalSpace_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              usedSpace_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.HddStatus status = 1;
      private mrtech.smarthome.rpc.Models.HddStatus status_ = mrtech.smarthome.rpc.Models.HddStatus.HDD_STATUS_NOT_INSTALLED;
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.HddStatus getStatus() {
        return status_;
      }
      public Builder setStatus(mrtech.smarthome.rpc.Models.HddStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value;
        onChanged();
        return this;
      }
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = mrtech.smarthome.rpc.Models.HddStatus.HDD_STATUS_NOT_INSTALLED;
        onChanged();
        return this;
      }
      
      // optional uint64 total_space = 2;
      private long totalSpace_ ;
      public boolean hasTotalSpace() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getTotalSpace() {
        return totalSpace_;
      }
      public Builder setTotalSpace(long value) {
        bitField0_ |= 0x00000002;
        totalSpace_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalSpace() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSpace_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 used_space = 3;
      private long usedSpace_ ;
      public boolean hasUsedSpace() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getUsedSpace() {
        return usedSpace_;
      }
      public Builder setUsedSpace(long value) {
        bitField0_ |= 0x00000004;
        usedSpace_ = value;
        onChanged();
        return this;
      }
      public Builder clearUsedSpace() {
        bitField0_ = (bitField0_ & ~0x00000004);
        usedSpace_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.HddInfo)
    }
    
    static {
      defaultInstance = new HddInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.HddInfo)
  }
  
  public interface PortFilterOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 1;
    boolean hasProtocol();
    mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol();
    
    // optional uint32 start_port = 2;
    boolean hasStartPort();
    int getStartPort();
    
    // optional uint32 end_port = 3;
    boolean hasEndPort();
    int getEndPort();
    
    // optional bool enabled = 4;
    boolean hasEnabled();
    boolean getEnabled();
  }
  public static final class PortFilter extends
      com.google.protobuf.GeneratedMessage
      implements PortFilterOrBuilder {
    // Use PortFilter.newBuilder() to construct.
    private PortFilter(Builder builder) {
      super(builder);
    }
    private PortFilter(boolean noInit) {}
    
    private static final PortFilter defaultInstance;
    public static PortFilter getDefaultInstance() {
      return defaultInstance;
    }
    
    public PortFilter getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortFilter_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortFilter_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 1;
    public static final int PROTOCOL_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.NetworkProtocol protocol_;
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol() {
      return protocol_;
    }
    
    // optional uint32 start_port = 2;
    public static final int START_PORT_FIELD_NUMBER = 2;
    private int startPort_;
    public boolean hasStartPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getStartPort() {
      return startPort_;
    }
    
    // optional uint32 end_port = 3;
    public static final int END_PORT_FIELD_NUMBER = 3;
    private int endPort_;
    public boolean hasEndPort() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getEndPort() {
      return endPort_;
    }
    
    // optional bool enabled = 4;
    public static final int ENABLED_FIELD_NUMBER = 4;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    private void initFields() {
      protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
      startPort_ = 0;
      endPort_ = 0;
      enabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, startPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, endPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enabled_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, startPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, endPort_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortFilter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.PortFilter prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PortFilterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortFilter_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortFilter_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.PortFilter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
        bitField0_ = (bitField0_ & ~0x00000001);
        startPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        endPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.PortFilter.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.PortFilter getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.PortFilter.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.PortFilter build() {
        mrtech.smarthome.rpc.Models.PortFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.PortFilter buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.PortFilter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.PortFilter buildPartial() {
        mrtech.smarthome.rpc.Models.PortFilter result = new mrtech.smarthome.rpc.Models.PortFilter(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.startPort_ = startPort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.endPort_ = endPort_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enabled_ = enabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.PortFilter) {
          return mergeFrom((mrtech.smarthome.rpc.Models.PortFilter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.PortFilter other) {
        if (other == mrtech.smarthome.rpc.Models.PortFilter.getDefaultInstance()) return this;
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasStartPort()) {
          setStartPort(other.getStartPort());
        }
        if (other.hasEndPort()) {
          setEndPort(other.getEndPort());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.NetworkProtocol value = mrtech.smarthome.rpc.Models.NetworkProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                protocol_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              startPort_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              endPort_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 1;
      private mrtech.smarthome.rpc.Models.NetworkProtocol protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol() {
        return protocol_;
      }
      public Builder setProtocol(mrtech.smarthome.rpc.Models.NetworkProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        protocol_ = value;
        onChanged();
        return this;
      }
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000001);
        protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
        onChanged();
        return this;
      }
      
      // optional uint32 start_port = 2;
      private int startPort_ ;
      public boolean hasStartPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getStartPort() {
        return startPort_;
      }
      public Builder setStartPort(int value) {
        bitField0_ |= 0x00000002;
        startPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        startPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 end_port = 3;
      private int endPort_ ;
      public boolean hasEndPort() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getEndPort() {
        return endPort_;
      }
      public Builder setEndPort(int value) {
        bitField0_ |= 0x00000004;
        endPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndPort() {
        bitField0_ = (bitField0_ & ~0x00000004);
        endPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional bool enabled = 4;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000008;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.PortFilter)
    }
    
    static {
      defaultInstance = new PortFilter(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.PortFilter)
  }
  
  public interface PortForwardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 wan_port = 1;
    boolean hasWanPort();
    int getWanPort();
    
    // optional uint32 lan_port = 2;
    boolean hasLanPort();
    int getLanPort();
    
    // optional string lan_address = 3;
    boolean hasLanAddress();
    String getLanAddress();
    
    // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 4;
    boolean hasProtocol();
    mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol();
    
    // optional bool enabled = 5;
    boolean hasEnabled();
    boolean getEnabled();
  }
  public static final class PortForward extends
      com.google.protobuf.GeneratedMessage
      implements PortForwardOrBuilder {
    // Use PortForward.newBuilder() to construct.
    private PortForward(Builder builder) {
      super(builder);
    }
    private PortForward(boolean noInit) {}
    
    private static final PortForward defaultInstance;
    public static PortForward getDefaultInstance() {
      return defaultInstance;
    }
    
    public PortForward getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortForward_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortForward_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 wan_port = 1;
    public static final int WAN_PORT_FIELD_NUMBER = 1;
    private int wanPort_;
    public boolean hasWanPort() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getWanPort() {
      return wanPort_;
    }
    
    // optional uint32 lan_port = 2;
    public static final int LAN_PORT_FIELD_NUMBER = 2;
    private int lanPort_;
    public boolean hasLanPort() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getLanPort() {
      return lanPort_;
    }
    
    // optional string lan_address = 3;
    public static final int LAN_ADDRESS_FIELD_NUMBER = 3;
    private java.lang.Object lanAddress_;
    public boolean hasLanAddress() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getLanAddress() {
      java.lang.Object ref = lanAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          lanAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanAddressBytes() {
      java.lang.Object ref = lanAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        lanAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 4;
    public static final int PROTOCOL_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.NetworkProtocol protocol_;
    public boolean hasProtocol() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol() {
      return protocol_;
    }
    
    // optional bool enabled = 5;
    public static final int ENABLED_FIELD_NUMBER = 5;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    private void initFields() {
      wanPort_ = 0;
      lanPort_ = 0;
      lanAddress_ = "";
      protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
      enabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, wanPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, lanPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getLanAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, enabled_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, wanPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, lanPort_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getLanAddressBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, protocol_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, enabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PortForward parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.PortForward prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PortForwardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortForward_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PortForward_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.PortForward.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        wanPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        lanPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        lanAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
        bitField0_ = (bitField0_ & ~0x00000008);
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.PortForward.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.PortForward getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.PortForward.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.PortForward build() {
        mrtech.smarthome.rpc.Models.PortForward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.PortForward buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.PortForward result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.PortForward buildPartial() {
        mrtech.smarthome.rpc.Models.PortForward result = new mrtech.smarthome.rpc.Models.PortForward(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.wanPort_ = wanPort_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lanPort_ = lanPort_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.lanAddress_ = lanAddress_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.protocol_ = protocol_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enabled_ = enabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.PortForward) {
          return mergeFrom((mrtech.smarthome.rpc.Models.PortForward)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.PortForward other) {
        if (other == mrtech.smarthome.rpc.Models.PortForward.getDefaultInstance()) return this;
        if (other.hasWanPort()) {
          setWanPort(other.getWanPort());
        }
        if (other.hasLanPort()) {
          setLanPort(other.getLanPort());
        }
        if (other.hasLanAddress()) {
          setLanAddress(other.getLanAddress());
        }
        if (other.hasProtocol()) {
          setProtocol(other.getProtocol());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              wanPort_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lanPort_ = input.readUInt32();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              lanAddress_ = input.readBytes();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.NetworkProtocol value = mrtech.smarthome.rpc.Models.NetworkProtocol.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                protocol_ = value;
              }
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              enabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 wan_port = 1;
      private int wanPort_ ;
      public boolean hasWanPort() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getWanPort() {
        return wanPort_;
      }
      public Builder setWanPort(int value) {
        bitField0_ |= 0x00000001;
        wanPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        wanPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 lan_port = 2;
      private int lanPort_ ;
      public boolean hasLanPort() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getLanPort() {
        return lanPort_;
      }
      public Builder setLanPort(int value) {
        bitField0_ |= 0x00000002;
        lanPort_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanPort() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lanPort_ = 0;
        onChanged();
        return this;
      }
      
      // optional string lan_address = 3;
      private java.lang.Object lanAddress_ = "";
      public boolean hasLanAddress() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getLanAddress() {
        java.lang.Object ref = lanAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          lanAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        lanAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanAddress() {
        bitField0_ = (bitField0_ & ~0x00000004);
        lanAddress_ = getDefaultInstance().getLanAddress();
        onChanged();
        return this;
      }
      void setLanAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        lanAddress_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.NetworkProtocol protocol = 4;
      private mrtech.smarthome.rpc.Models.NetworkProtocol protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
      public boolean hasProtocol() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.NetworkProtocol getProtocol() {
        return protocol_;
      }
      public Builder setProtocol(mrtech.smarthome.rpc.Models.NetworkProtocol value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        protocol_ = value;
        onChanged();
        return this;
      }
      public Builder clearProtocol() {
        bitField0_ = (bitField0_ & ~0x00000008);
        protocol_ = mrtech.smarthome.rpc.Models.NetworkProtocol.NETWORK_PROTOCOL_TCP;
        onChanged();
        return this;
      }
      
      // optional bool enabled = 5;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000010;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.PortForward)
    }
    
    static {
      defaultInstance = new PortForward(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.PortForward)
  }
  
  public interface NetworkInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string lan_ip_address = 1;
    boolean hasLanIpAddress();
    String getLanIpAddress();
    
    // optional string lan_subnet_mask = 2;
    boolean hasLanSubnetMask();
    String getLanSubnetMask();
    
    // optional .mrtech.smarthome.rpc.WanMode wan_mode = 3;
    boolean hasWanMode();
    mrtech.smarthome.rpc.Models.WanMode getWanMode();
    
    // optional .mrtech.smarthome.rpc.PPPoEState wan_pppoe_status = 4;
    boolean hasWanPppoeStatus();
    mrtech.smarthome.rpc.Models.PPPoEState getWanPppoeStatus();
    
    // optional string wan_ip_address = 5;
    boolean hasWanIpAddress();
    String getWanIpAddress();
    
    // optional string wan_subnet_mask = 6;
    boolean hasWanSubnetMask();
    String getWanSubnetMask();
    
    // optional string wan_gateway = 7;
    boolean hasWanGateway();
    String getWanGateway();
    
    // optional string wan_primary_dns = 8;
    boolean hasWanPrimaryDns();
    String getWanPrimaryDns();
    
    // optional string wan_secondary_dns = 9;
    boolean hasWanSecondaryDns();
    String getWanSecondaryDns();
    
    // optional .mrtech.smarthome.rpc.MobileInfo modem = 10;
    boolean hasModem();
    mrtech.smarthome.rpc.Models.MobileInfo getModem();
    mrtech.smarthome.rpc.Models.MobileInfoOrBuilder getModemOrBuilder();
    
    // optional string wifi_2_4g_ssid = 11;
    boolean hasWifi24GSsid();
    String getWifi24GSsid();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_2_4g_security = 12;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getWifi24GSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getWifi24GSecurity(int index);
    int getWifi24GSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getWifi24GSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi24GSecurityOrBuilder(
        int index);
    
    // optional int32 wifi_2_4g_channel = 13;
    boolean hasWifi24GChannel();
    int getWifi24GChannel();
    
    // optional .mrtech.smarthome.rpc.BandWidth wifi_2_4g_bandwidth = 14;
    boolean hasWifi24GBandwidth();
    mrtech.smarthome.rpc.Models.BandWidth getWifi24GBandwidth();
    
    // optional string guest_wifi_2_4g_ssid = 15;
    boolean hasGuestWifi24GSsid();
    String getGuestWifi24GSsid();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_2_4g_security = 16;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getGuestWifi24GSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi24GSecurity(int index);
    int getGuestWifi24GSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getGuestWifi24GSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi24GSecurityOrBuilder(
        int index);
    
    // optional string wifi_5_8g_ssid = 17;
    boolean hasWifi58GSsid();
    String getWifi58GSsid();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_5_8g_security = 18;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getWifi58GSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getWifi58GSecurity(int index);
    int getWifi58GSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getWifi58GSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi58GSecurityOrBuilder(
        int index);
    
    // optional int32 wifi_5_8g_channel = 19;
    boolean hasWifi58GChannel();
    int getWifi58GChannel();
    
    // optional .mrtech.smarthome.rpc.BandWidth wifi_5_8g_bandwidth = 20;
    boolean hasWifi58GBandwidth();
    mrtech.smarthome.rpc.Models.BandWidth getWifi58GBandwidth();
    
    // optional string guest_wifi_5_8g_ssid = 21;
    boolean hasGuestWifi58GSsid();
    String getGuestWifi58GSsid();
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_5_8g_security = 22;
    java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> 
        getGuestWifi58GSecurityList();
    mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi58GSecurity(int index);
    int getGuestWifi58GSecurityCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getGuestWifi58GSecurityOrBuilderList();
    mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi58GSecurityOrBuilder(
        int index);
    
    // optional bool wifi_2_4g_enabled = 23;
    boolean hasWifi24GEnabled();
    boolean getWifi24GEnabled();
    
    // optional bool guest_wifi_2_4g_enabled = 24;
    boolean hasGuestWifi24GEnabled();
    boolean getGuestWifi24GEnabled();
    
    // optional bool wifi_5_8g_enabled = 25;
    boolean hasWifi58GEnabled();
    boolean getWifi58GEnabled();
    
    // optional bool guest_wifi_5_8g_enabled = 26;
    boolean hasGuestWifi58GEnabled();
    boolean getGuestWifi58GEnabled();
  }
  public static final class NetworkInfo extends
      com.google.protobuf.GeneratedMessage
      implements NetworkInfoOrBuilder {
    // Use NetworkInfo.newBuilder() to construct.
    private NetworkInfo(Builder builder) {
      super(builder);
    }
    private NetworkInfo(boolean noInit) {}
    
    private static final NetworkInfo defaultInstance;
    public static NetworkInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public NetworkInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string lan_ip_address = 1;
    public static final int LAN_IP_ADDRESS_FIELD_NUMBER = 1;
    private java.lang.Object lanIpAddress_;
    public boolean hasLanIpAddress() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getLanIpAddress() {
      java.lang.Object ref = lanIpAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          lanIpAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanIpAddressBytes() {
      java.lang.Object ref = lanIpAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        lanIpAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string lan_subnet_mask = 2;
    public static final int LAN_SUBNET_MASK_FIELD_NUMBER = 2;
    private java.lang.Object lanSubnetMask_;
    public boolean hasLanSubnetMask() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getLanSubnetMask() {
      java.lang.Object ref = lanSubnetMask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          lanSubnetMask_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLanSubnetMaskBytes() {
      java.lang.Object ref = lanSubnetMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        lanSubnetMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.WanMode wan_mode = 3;
    public static final int WAN_MODE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.WanMode wanMode_;
    public boolean hasWanMode() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.WanMode getWanMode() {
      return wanMode_;
    }
    
    // optional .mrtech.smarthome.rpc.PPPoEState wan_pppoe_status = 4;
    public static final int WAN_PPPOE_STATUS_FIELD_NUMBER = 4;
    private mrtech.smarthome.rpc.Models.PPPoEState wanPppoeStatus_;
    public boolean hasWanPppoeStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public mrtech.smarthome.rpc.Models.PPPoEState getWanPppoeStatus() {
      return wanPppoeStatus_;
    }
    
    // optional string wan_ip_address = 5;
    public static final int WAN_IP_ADDRESS_FIELD_NUMBER = 5;
    private java.lang.Object wanIpAddress_;
    public boolean hasWanIpAddress() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getWanIpAddress() {
      java.lang.Object ref = wanIpAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanIpAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanIpAddressBytes() {
      java.lang.Object ref = wanIpAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanIpAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wan_subnet_mask = 6;
    public static final int WAN_SUBNET_MASK_FIELD_NUMBER = 6;
    private java.lang.Object wanSubnetMask_;
    public boolean hasWanSubnetMask() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getWanSubnetMask() {
      java.lang.Object ref = wanSubnetMask_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanSubnetMask_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanSubnetMaskBytes() {
      java.lang.Object ref = wanSubnetMask_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanSubnetMask_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wan_gateway = 7;
    public static final int WAN_GATEWAY_FIELD_NUMBER = 7;
    private java.lang.Object wanGateway_;
    public boolean hasWanGateway() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getWanGateway() {
      java.lang.Object ref = wanGateway_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanGateway_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanGatewayBytes() {
      java.lang.Object ref = wanGateway_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanGateway_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wan_primary_dns = 8;
    public static final int WAN_PRIMARY_DNS_FIELD_NUMBER = 8;
    private java.lang.Object wanPrimaryDns_;
    public boolean hasWanPrimaryDns() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getWanPrimaryDns() {
      java.lang.Object ref = wanPrimaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanPrimaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanPrimaryDnsBytes() {
      java.lang.Object ref = wanPrimaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanPrimaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string wan_secondary_dns = 9;
    public static final int WAN_SECONDARY_DNS_FIELD_NUMBER = 9;
    private java.lang.Object wanSecondaryDns_;
    public boolean hasWanSecondaryDns() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getWanSecondaryDns() {
      java.lang.Object ref = wanSecondaryDns_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wanSecondaryDns_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWanSecondaryDnsBytes() {
      java.lang.Object ref = wanSecondaryDns_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wanSecondaryDns_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional .mrtech.smarthome.rpc.MobileInfo modem = 10;
    public static final int MODEM_FIELD_NUMBER = 10;
    private mrtech.smarthome.rpc.Models.MobileInfo modem_;
    public boolean hasModem() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public mrtech.smarthome.rpc.Models.MobileInfo getModem() {
      return modem_;
    }
    public mrtech.smarthome.rpc.Models.MobileInfoOrBuilder getModemOrBuilder() {
      return modem_;
    }
    
    // optional string wifi_2_4g_ssid = 11;
    public static final int WIFI_2_4G_SSID_FIELD_NUMBER = 11;
    private java.lang.Object wifi24GSsid_;
    public boolean hasWifi24GSsid() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public String getWifi24GSsid() {
      java.lang.Object ref = wifi24GSsid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wifi24GSsid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWifi24GSsidBytes() {
      java.lang.Object ref = wifi24GSsid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wifi24GSsid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_2_4g_security = 12;
    public static final int WIFI_2_4G_SECURITY_FIELD_NUMBER = 12;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> wifi24GSecurity_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getWifi24GSecurityList() {
      return wifi24GSecurity_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getWifi24GSecurityOrBuilderList() {
      return wifi24GSecurity_;
    }
    public int getWifi24GSecurityCount() {
      return wifi24GSecurity_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getWifi24GSecurity(int index) {
      return wifi24GSecurity_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi24GSecurityOrBuilder(
        int index) {
      return wifi24GSecurity_.get(index);
    }
    
    // optional int32 wifi_2_4g_channel = 13;
    public static final int WIFI_2_4G_CHANNEL_FIELD_NUMBER = 13;
    private int wifi24GChannel_;
    public boolean hasWifi24GChannel() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getWifi24GChannel() {
      return wifi24GChannel_;
    }
    
    // optional .mrtech.smarthome.rpc.BandWidth wifi_2_4g_bandwidth = 14;
    public static final int WIFI_2_4G_BANDWIDTH_FIELD_NUMBER = 14;
    private mrtech.smarthome.rpc.Models.BandWidth wifi24GBandwidth_;
    public boolean hasWifi24GBandwidth() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public mrtech.smarthome.rpc.Models.BandWidth getWifi24GBandwidth() {
      return wifi24GBandwidth_;
    }
    
    // optional string guest_wifi_2_4g_ssid = 15;
    public static final int GUEST_WIFI_2_4G_SSID_FIELD_NUMBER = 15;
    private java.lang.Object guestWifi24GSsid_;
    public boolean hasGuestWifi24GSsid() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public String getGuestWifi24GSsid() {
      java.lang.Object ref = guestWifi24GSsid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          guestWifi24GSsid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGuestWifi24GSsidBytes() {
      java.lang.Object ref = guestWifi24GSsid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        guestWifi24GSsid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_2_4g_security = 16;
    public static final int GUEST_WIFI_2_4G_SECURITY_FIELD_NUMBER = 16;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> guestWifi24GSecurity_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getGuestWifi24GSecurityList() {
      return guestWifi24GSecurity_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getGuestWifi24GSecurityOrBuilderList() {
      return guestWifi24GSecurity_;
    }
    public int getGuestWifi24GSecurityCount() {
      return guestWifi24GSecurity_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi24GSecurity(int index) {
      return guestWifi24GSecurity_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi24GSecurityOrBuilder(
        int index) {
      return guestWifi24GSecurity_.get(index);
    }
    
    // optional string wifi_5_8g_ssid = 17;
    public static final int WIFI_5_8G_SSID_FIELD_NUMBER = 17;
    private java.lang.Object wifi58GSsid_;
    public boolean hasWifi58GSsid() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getWifi58GSsid() {
      java.lang.Object ref = wifi58GSsid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          wifi58GSsid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getWifi58GSsidBytes() {
      java.lang.Object ref = wifi58GSsid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        wifi58GSsid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_5_8g_security = 18;
    public static final int WIFI_5_8G_SECURITY_FIELD_NUMBER = 18;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> wifi58GSecurity_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getWifi58GSecurityList() {
      return wifi58GSecurity_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getWifi58GSecurityOrBuilderList() {
      return wifi58GSecurity_;
    }
    public int getWifi58GSecurityCount() {
      return wifi58GSecurity_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getWifi58GSecurity(int index) {
      return wifi58GSecurity_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi58GSecurityOrBuilder(
        int index) {
      return wifi58GSecurity_.get(index);
    }
    
    // optional int32 wifi_5_8g_channel = 19;
    public static final int WIFI_5_8G_CHANNEL_FIELD_NUMBER = 19;
    private int wifi58GChannel_;
    public boolean hasWifi58GChannel() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public int getWifi58GChannel() {
      return wifi58GChannel_;
    }
    
    // optional .mrtech.smarthome.rpc.BandWidth wifi_5_8g_bandwidth = 20;
    public static final int WIFI_5_8G_BANDWIDTH_FIELD_NUMBER = 20;
    private mrtech.smarthome.rpc.Models.BandWidth wifi58GBandwidth_;
    public boolean hasWifi58GBandwidth() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public mrtech.smarthome.rpc.Models.BandWidth getWifi58GBandwidth() {
      return wifi58GBandwidth_;
    }
    
    // optional string guest_wifi_5_8g_ssid = 21;
    public static final int GUEST_WIFI_5_8G_SSID_FIELD_NUMBER = 21;
    private java.lang.Object guestWifi58GSsid_;
    public boolean hasGuestWifi58GSsid() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public String getGuestWifi58GSsid() {
      java.lang.Object ref = guestWifi58GSsid_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          guestWifi58GSsid_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getGuestWifi58GSsidBytes() {
      java.lang.Object ref = guestWifi58GSsid_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        guestWifi58GSsid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_5_8g_security = 22;
    public static final int GUEST_WIFI_5_8G_SECURITY_FIELD_NUMBER = 22;
    private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> guestWifi58GSecurity_;
    public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getGuestWifi58GSecurityList() {
      return guestWifi58GSecurity_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
        getGuestWifi58GSecurityOrBuilderList() {
      return guestWifi58GSecurity_;
    }
    public int getGuestWifi58GSecurityCount() {
      return guestWifi58GSecurity_.size();
    }
    public mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi58GSecurity(int index) {
      return guestWifi58GSecurity_.get(index);
    }
    public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi58GSecurityOrBuilder(
        int index) {
      return guestWifi58GSecurity_.get(index);
    }
    
    // optional bool wifi_2_4g_enabled = 23;
    public static final int WIFI_2_4G_ENABLED_FIELD_NUMBER = 23;
    private boolean wifi24GEnabled_;
    public boolean hasWifi24GEnabled() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public boolean getWifi24GEnabled() {
      return wifi24GEnabled_;
    }
    
    // optional bool guest_wifi_2_4g_enabled = 24;
    public static final int GUEST_WIFI_2_4G_ENABLED_FIELD_NUMBER = 24;
    private boolean guestWifi24GEnabled_;
    public boolean hasGuestWifi24GEnabled() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public boolean getGuestWifi24GEnabled() {
      return guestWifi24GEnabled_;
    }
    
    // optional bool wifi_5_8g_enabled = 25;
    public static final int WIFI_5_8G_ENABLED_FIELD_NUMBER = 25;
    private boolean wifi58GEnabled_;
    public boolean hasWifi58GEnabled() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public boolean getWifi58GEnabled() {
      return wifi58GEnabled_;
    }
    
    // optional bool guest_wifi_5_8g_enabled = 26;
    public static final int GUEST_WIFI_5_8G_ENABLED_FIELD_NUMBER = 26;
    private boolean guestWifi58GEnabled_;
    public boolean hasGuestWifi58GEnabled() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public boolean getGuestWifi58GEnabled() {
      return guestWifi58GEnabled_;
    }
    
    private void initFields() {
      lanIpAddress_ = "";
      lanSubnetMask_ = "";
      wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
      wanPppoeStatus_ = mrtech.smarthome.rpc.Models.PPPoEState.PPPOE_STATE_DISCONNECTED;
      wanIpAddress_ = "";
      wanSubnetMask_ = "";
      wanGateway_ = "";
      wanPrimaryDns_ = "";
      wanSecondaryDns_ = "";
      modem_ = mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance();
      wifi24GSsid_ = "";
      wifi24GSecurity_ = java.util.Collections.emptyList();
      wifi24GChannel_ = 0;
      wifi24GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
      guestWifi24GSsid_ = "";
      guestWifi24GSecurity_ = java.util.Collections.emptyList();
      wifi58GSsid_ = "";
      wifi58GSecurity_ = java.util.Collections.emptyList();
      wifi58GChannel_ = 0;
      wifi58GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
      guestWifi58GSsid_ = "";
      guestWifi58GSecurity_ = java.util.Collections.emptyList();
      wifi24GEnabled_ = false;
      guestWifi24GEnabled_ = false;
      wifi58GEnabled_ = false;
      guestWifi58GEnabled_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getLanIpAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getLanSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, wanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, wanPppoeStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getWanIpAddressBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getWanSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getWanGatewayBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getWanPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getWanSecondaryDnsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, modem_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getWifi24GSsidBytes());
      }
      for (int i = 0; i < wifi24GSecurity_.size(); i++) {
        output.writeMessage(12, wifi24GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, wifi24GChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeEnum(14, wifi24GBandwidth_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(15, getGuestWifi24GSsidBytes());
      }
      for (int i = 0; i < guestWifi24GSecurity_.size(); i++) {
        output.writeMessage(16, guestWifi24GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(17, getWifi58GSsidBytes());
      }
      for (int i = 0; i < wifi58GSecurity_.size(); i++) {
        output.writeMessage(18, wifi58GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, wifi58GChannel_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeEnum(20, wifi58GBandwidth_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(21, getGuestWifi58GSsidBytes());
      }
      for (int i = 0; i < guestWifi58GSecurity_.size(); i++) {
        output.writeMessage(22, guestWifi58GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(23, wifi24GEnabled_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(24, guestWifi24GEnabled_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(25, wifi58GEnabled_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(26, guestWifi58GEnabled_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getLanIpAddressBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getLanSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, wanMode_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, wanPppoeStatus_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getWanIpAddressBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getWanSubnetMaskBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getWanGatewayBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getWanPrimaryDnsBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getWanSecondaryDnsBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, modem_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getWifi24GSsidBytes());
      }
      for (int i = 0; i < wifi24GSecurity_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, wifi24GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, wifi24GChannel_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, wifi24GBandwidth_.getNumber());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getGuestWifi24GSsidBytes());
      }
      for (int i = 0; i < guestWifi24GSecurity_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, guestWifi24GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getWifi58GSsidBytes());
      }
      for (int i = 0; i < wifi58GSecurity_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, wifi58GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, wifi58GChannel_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(20, wifi58GBandwidth_.getNumber());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getGuestWifi58GSsidBytes());
      }
      for (int i = 0; i < guestWifi58GSecurity_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, guestWifi58GSecurity_.get(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, wifi24GEnabled_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, guestWifi24GEnabled_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, wifi58GEnabled_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, guestWifi58GEnabled_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.NetworkInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.NetworkInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.NetworkInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_NetworkInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.NetworkInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getModemFieldBuilder();
          getWifi24GSecurityFieldBuilder();
          getGuestWifi24GSecurityFieldBuilder();
          getWifi58GSecurityFieldBuilder();
          getGuestWifi58GSecurityFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        lanIpAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        lanSubnetMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
        bitField0_ = (bitField0_ & ~0x00000004);
        wanPppoeStatus_ = mrtech.smarthome.rpc.Models.PPPoEState.PPPOE_STATE_DISCONNECTED;
        bitField0_ = (bitField0_ & ~0x00000008);
        wanIpAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        wanSubnetMask_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        wanGateway_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        wanPrimaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        wanSecondaryDns_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        if (modemBuilder_ == null) {
          modem_ = mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance();
        } else {
          modemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        wifi24GSsid_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        if (wifi24GSecurityBuilder_ == null) {
          wifi24GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          wifi24GSecurityBuilder_.clear();
        }
        wifi24GChannel_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        wifi24GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        bitField0_ = (bitField0_ & ~0x00002000);
        guestWifi24GSsid_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        if (guestWifi24GSecurityBuilder_ == null) {
          guestWifi24GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          guestWifi24GSecurityBuilder_.clear();
        }
        wifi58GSsid_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        if (wifi58GSecurityBuilder_ == null) {
          wifi58GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          wifi58GSecurityBuilder_.clear();
        }
        wifi58GChannel_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        wifi58GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        bitField0_ = (bitField0_ & ~0x00080000);
        guestWifi58GSsid_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        if (guestWifi58GSecurityBuilder_ == null) {
          guestWifi58GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          guestWifi58GSecurityBuilder_.clear();
        }
        wifi24GEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        guestWifi24GEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        wifi58GEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x01000000);
        guestWifi58GEnabled_ = false;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.NetworkInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.NetworkInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.NetworkInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.NetworkInfo build() {
        mrtech.smarthome.rpc.Models.NetworkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.NetworkInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.NetworkInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.NetworkInfo buildPartial() {
        mrtech.smarthome.rpc.Models.NetworkInfo result = new mrtech.smarthome.rpc.Models.NetworkInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.lanIpAddress_ = lanIpAddress_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lanSubnetMask_ = lanSubnetMask_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wanMode_ = wanMode_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.wanPppoeStatus_ = wanPppoeStatus_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.wanIpAddress_ = wanIpAddress_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.wanSubnetMask_ = wanSubnetMask_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.wanGateway_ = wanGateway_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.wanPrimaryDns_ = wanPrimaryDns_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.wanSecondaryDns_ = wanSecondaryDns_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (modemBuilder_ == null) {
          result.modem_ = modem_;
        } else {
          result.modem_ = modemBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.wifi24GSsid_ = wifi24GSsid_;
        if (wifi24GSecurityBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            wifi24GSecurity_ = java.util.Collections.unmodifiableList(wifi24GSecurity_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.wifi24GSecurity_ = wifi24GSecurity_;
        } else {
          result.wifi24GSecurity_ = wifi24GSecurityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.wifi24GChannel_ = wifi24GChannel_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.wifi24GBandwidth_ = wifi24GBandwidth_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.guestWifi24GSsid_ = guestWifi24GSsid_;
        if (guestWifi24GSecurityBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            guestWifi24GSecurity_ = java.util.Collections.unmodifiableList(guestWifi24GSecurity_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.guestWifi24GSecurity_ = guestWifi24GSecurity_;
        } else {
          result.guestWifi24GSecurity_ = guestWifi24GSecurityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.wifi58GSsid_ = wifi58GSsid_;
        if (wifi58GSecurityBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            wifi58GSecurity_ = java.util.Collections.unmodifiableList(wifi58GSecurity_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.wifi58GSecurity_ = wifi58GSecurity_;
        } else {
          result.wifi58GSecurity_ = wifi58GSecurityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.wifi58GChannel_ = wifi58GChannel_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.wifi58GBandwidth_ = wifi58GBandwidth_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.guestWifi58GSsid_ = guestWifi58GSsid_;
        if (guestWifi58GSecurityBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            guestWifi58GSecurity_ = java.util.Collections.unmodifiableList(guestWifi58GSecurity_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.guestWifi58GSecurity_ = guestWifi58GSecurity_;
        } else {
          result.guestWifi58GSecurity_ = guestWifi58GSecurityBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.wifi24GEnabled_ = wifi24GEnabled_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.guestWifi24GEnabled_ = guestWifi24GEnabled_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.wifi58GEnabled_ = wifi58GEnabled_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.guestWifi58GEnabled_ = guestWifi58GEnabled_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.NetworkInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.NetworkInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.NetworkInfo other) {
        if (other == mrtech.smarthome.rpc.Models.NetworkInfo.getDefaultInstance()) return this;
        if (other.hasLanIpAddress()) {
          setLanIpAddress(other.getLanIpAddress());
        }
        if (other.hasLanSubnetMask()) {
          setLanSubnetMask(other.getLanSubnetMask());
        }
        if (other.hasWanMode()) {
          setWanMode(other.getWanMode());
        }
        if (other.hasWanPppoeStatus()) {
          setWanPppoeStatus(other.getWanPppoeStatus());
        }
        if (other.hasWanIpAddress()) {
          setWanIpAddress(other.getWanIpAddress());
        }
        if (other.hasWanSubnetMask()) {
          setWanSubnetMask(other.getWanSubnetMask());
        }
        if (other.hasWanGateway()) {
          setWanGateway(other.getWanGateway());
        }
        if (other.hasWanPrimaryDns()) {
          setWanPrimaryDns(other.getWanPrimaryDns());
        }
        if (other.hasWanSecondaryDns()) {
          setWanSecondaryDns(other.getWanSecondaryDns());
        }
        if (other.hasModem()) {
          mergeModem(other.getModem());
        }
        if (other.hasWifi24GSsid()) {
          setWifi24GSsid(other.getWifi24GSsid());
        }
        if (wifi24GSecurityBuilder_ == null) {
          if (!other.wifi24GSecurity_.isEmpty()) {
            if (wifi24GSecurity_.isEmpty()) {
              wifi24GSecurity_ = other.wifi24GSecurity_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureWifi24GSecurityIsMutable();
              wifi24GSecurity_.addAll(other.wifi24GSecurity_);
            }
            onChanged();
          }
        } else {
          if (!other.wifi24GSecurity_.isEmpty()) {
            if (wifi24GSecurityBuilder_.isEmpty()) {
              wifi24GSecurityBuilder_.dispose();
              wifi24GSecurityBuilder_ = null;
              wifi24GSecurity_ = other.wifi24GSecurity_;
              bitField0_ = (bitField0_ & ~0x00000800);
              wifi24GSecurityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWifi24GSecurityFieldBuilder() : null;
            } else {
              wifi24GSecurityBuilder_.addAllMessages(other.wifi24GSecurity_);
            }
          }
        }
        if (other.hasWifi24GChannel()) {
          setWifi24GChannel(other.getWifi24GChannel());
        }
        if (other.hasWifi24GBandwidth()) {
          setWifi24GBandwidth(other.getWifi24GBandwidth());
        }
        if (other.hasGuestWifi24GSsid()) {
          setGuestWifi24GSsid(other.getGuestWifi24GSsid());
        }
        if (guestWifi24GSecurityBuilder_ == null) {
          if (!other.guestWifi24GSecurity_.isEmpty()) {
            if (guestWifi24GSecurity_.isEmpty()) {
              guestWifi24GSecurity_ = other.guestWifi24GSecurity_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureGuestWifi24GSecurityIsMutable();
              guestWifi24GSecurity_.addAll(other.guestWifi24GSecurity_);
            }
            onChanged();
          }
        } else {
          if (!other.guestWifi24GSecurity_.isEmpty()) {
            if (guestWifi24GSecurityBuilder_.isEmpty()) {
              guestWifi24GSecurityBuilder_.dispose();
              guestWifi24GSecurityBuilder_ = null;
              guestWifi24GSecurity_ = other.guestWifi24GSecurity_;
              bitField0_ = (bitField0_ & ~0x00008000);
              guestWifi24GSecurityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGuestWifi24GSecurityFieldBuilder() : null;
            } else {
              guestWifi24GSecurityBuilder_.addAllMessages(other.guestWifi24GSecurity_);
            }
          }
        }
        if (other.hasWifi58GSsid()) {
          setWifi58GSsid(other.getWifi58GSsid());
        }
        if (wifi58GSecurityBuilder_ == null) {
          if (!other.wifi58GSecurity_.isEmpty()) {
            if (wifi58GSecurity_.isEmpty()) {
              wifi58GSecurity_ = other.wifi58GSecurity_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureWifi58GSecurityIsMutable();
              wifi58GSecurity_.addAll(other.wifi58GSecurity_);
            }
            onChanged();
          }
        } else {
          if (!other.wifi58GSecurity_.isEmpty()) {
            if (wifi58GSecurityBuilder_.isEmpty()) {
              wifi58GSecurityBuilder_.dispose();
              wifi58GSecurityBuilder_ = null;
              wifi58GSecurity_ = other.wifi58GSecurity_;
              bitField0_ = (bitField0_ & ~0x00020000);
              wifi58GSecurityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWifi58GSecurityFieldBuilder() : null;
            } else {
              wifi58GSecurityBuilder_.addAllMessages(other.wifi58GSecurity_);
            }
          }
        }
        if (other.hasWifi58GChannel()) {
          setWifi58GChannel(other.getWifi58GChannel());
        }
        if (other.hasWifi58GBandwidth()) {
          setWifi58GBandwidth(other.getWifi58GBandwidth());
        }
        if (other.hasGuestWifi58GSsid()) {
          setGuestWifi58GSsid(other.getGuestWifi58GSsid());
        }
        if (guestWifi58GSecurityBuilder_ == null) {
          if (!other.guestWifi58GSecurity_.isEmpty()) {
            if (guestWifi58GSecurity_.isEmpty()) {
              guestWifi58GSecurity_ = other.guestWifi58GSecurity_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureGuestWifi58GSecurityIsMutable();
              guestWifi58GSecurity_.addAll(other.guestWifi58GSecurity_);
            }
            onChanged();
          }
        } else {
          if (!other.guestWifi58GSecurity_.isEmpty()) {
            if (guestWifi58GSecurityBuilder_.isEmpty()) {
              guestWifi58GSecurityBuilder_.dispose();
              guestWifi58GSecurityBuilder_ = null;
              guestWifi58GSecurity_ = other.guestWifi58GSecurity_;
              bitField0_ = (bitField0_ & ~0x00200000);
              guestWifi58GSecurityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGuestWifi58GSecurityFieldBuilder() : null;
            } else {
              guestWifi58GSecurityBuilder_.addAllMessages(other.guestWifi58GSecurity_);
            }
          }
        }
        if (other.hasWifi24GEnabled()) {
          setWifi24GEnabled(other.getWifi24GEnabled());
        }
        if (other.hasGuestWifi24GEnabled()) {
          setGuestWifi24GEnabled(other.getGuestWifi24GEnabled());
        }
        if (other.hasWifi58GEnabled()) {
          setWifi58GEnabled(other.getWifi58GEnabled());
        }
        if (other.hasGuestWifi58GEnabled()) {
          setGuestWifi58GEnabled(other.getGuestWifi58GEnabled());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              lanIpAddress_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              lanSubnetMask_ = input.readBytes();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.WanMode value = mrtech.smarthome.rpc.Models.WanMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                wanMode_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.PPPoEState value = mrtech.smarthome.rpc.Models.PPPoEState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                wanPppoeStatus_ = value;
              }
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              wanIpAddress_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              wanSubnetMask_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              wanGateway_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              wanPrimaryDns_ = input.readBytes();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              wanSecondaryDns_ = input.readBytes();
              break;
            }
            case 82: {
              mrtech.smarthome.rpc.Models.MobileInfo.Builder subBuilder = mrtech.smarthome.rpc.Models.MobileInfo.newBuilder();
              if (hasModem()) {
                subBuilder.mergeFrom(getModem());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setModem(subBuilder.buildPartial());
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              wifi24GSsid_ = input.readBytes();
              break;
            }
            case 98: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWifi24GSecurity(subBuilder.buildPartial());
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              wifi24GChannel_ = input.readInt32();
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.BandWidth value = mrtech.smarthome.rpc.Models.BandWidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00002000;
                wifi24GBandwidth_ = value;
              }
              break;
            }
            case 122: {
              bitField0_ |= 0x00004000;
              guestWifi24GSsid_ = input.readBytes();
              break;
            }
            case 130: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGuestWifi24GSecurity(subBuilder.buildPartial());
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              wifi58GSsid_ = input.readBytes();
              break;
            }
            case 146: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addWifi58GSecurity(subBuilder.buildPartial());
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              wifi58GChannel_ = input.readInt32();
              break;
            }
            case 160: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.BandWidth value = mrtech.smarthome.rpc.Models.BandWidth.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(20, rawValue);
              } else {
                bitField0_ |= 0x00080000;
                wifi58GBandwidth_ = value;
              }
              break;
            }
            case 170: {
              bitField0_ |= 0x00100000;
              guestWifi58GSsid_ = input.readBytes();
              break;
            }
            case 178: {
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder subBuilder = mrtech.smarthome.rpc.Models.EncryptionMode.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addGuestWifi58GSecurity(subBuilder.buildPartial());
              break;
            }
            case 184: {
              bitField0_ |= 0x00400000;
              wifi24GEnabled_ = input.readBool();
              break;
            }
            case 192: {
              bitField0_ |= 0x00800000;
              guestWifi24GEnabled_ = input.readBool();
              break;
            }
            case 200: {
              bitField0_ |= 0x01000000;
              wifi58GEnabled_ = input.readBool();
              break;
            }
            case 208: {
              bitField0_ |= 0x02000000;
              guestWifi58GEnabled_ = input.readBool();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string lan_ip_address = 1;
      private java.lang.Object lanIpAddress_ = "";
      public boolean hasLanIpAddress() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getLanIpAddress() {
        java.lang.Object ref = lanIpAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          lanIpAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        lanIpAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000001);
        lanIpAddress_ = getDefaultInstance().getLanIpAddress();
        onChanged();
        return this;
      }
      void setLanIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        lanIpAddress_ = value;
        onChanged();
      }
      
      // optional string lan_subnet_mask = 2;
      private java.lang.Object lanSubnetMask_ = "";
      public boolean hasLanSubnetMask() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getLanSubnetMask() {
        java.lang.Object ref = lanSubnetMask_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          lanSubnetMask_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLanSubnetMask(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        lanSubnetMask_ = value;
        onChanged();
        return this;
      }
      public Builder clearLanSubnetMask() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lanSubnetMask_ = getDefaultInstance().getLanSubnetMask();
        onChanged();
        return this;
      }
      void setLanSubnetMask(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        lanSubnetMask_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.WanMode wan_mode = 3;
      private mrtech.smarthome.rpc.Models.WanMode wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
      public boolean hasWanMode() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.WanMode getWanMode() {
        return wanMode_;
      }
      public Builder setWanMode(mrtech.smarthome.rpc.Models.WanMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        wanMode_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanMode() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanMode_ = mrtech.smarthome.rpc.Models.WanMode.WAN_MODE_PPPOE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.PPPoEState wan_pppoe_status = 4;
      private mrtech.smarthome.rpc.Models.PPPoEState wanPppoeStatus_ = mrtech.smarthome.rpc.Models.PPPoEState.PPPOE_STATE_DISCONNECTED;
      public boolean hasWanPppoeStatus() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public mrtech.smarthome.rpc.Models.PPPoEState getWanPppoeStatus() {
        return wanPppoeStatus_;
      }
      public Builder setWanPppoeStatus(mrtech.smarthome.rpc.Models.PPPoEState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        wanPppoeStatus_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanPppoeStatus() {
        bitField0_ = (bitField0_ & ~0x00000008);
        wanPppoeStatus_ = mrtech.smarthome.rpc.Models.PPPoEState.PPPOE_STATE_DISCONNECTED;
        onChanged();
        return this;
      }
      
      // optional string wan_ip_address = 5;
      private java.lang.Object wanIpAddress_ = "";
      public boolean hasWanIpAddress() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getWanIpAddress() {
        java.lang.Object ref = wanIpAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanIpAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanIpAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        wanIpAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanIpAddress() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wanIpAddress_ = getDefaultInstance().getWanIpAddress();
        onChanged();
        return this;
      }
      void setWanIpAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        wanIpAddress_ = value;
        onChanged();
      }
      
      // optional string wan_subnet_mask = 6;
      private java.lang.Object wanSubnetMask_ = "";
      public boolean hasWanSubnetMask() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getWanSubnetMask() {
        java.lang.Object ref = wanSubnetMask_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanSubnetMask_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanSubnetMask(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        wanSubnetMask_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanSubnetMask() {
        bitField0_ = (bitField0_ & ~0x00000020);
        wanSubnetMask_ = getDefaultInstance().getWanSubnetMask();
        onChanged();
        return this;
      }
      void setWanSubnetMask(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        wanSubnetMask_ = value;
        onChanged();
      }
      
      // optional string wan_gateway = 7;
      private java.lang.Object wanGateway_ = "";
      public boolean hasWanGateway() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getWanGateway() {
        java.lang.Object ref = wanGateway_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanGateway_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanGateway(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        wanGateway_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanGateway() {
        bitField0_ = (bitField0_ & ~0x00000040);
        wanGateway_ = getDefaultInstance().getWanGateway();
        onChanged();
        return this;
      }
      void setWanGateway(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        wanGateway_ = value;
        onChanged();
      }
      
      // optional string wan_primary_dns = 8;
      private java.lang.Object wanPrimaryDns_ = "";
      public boolean hasWanPrimaryDns() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getWanPrimaryDns() {
        java.lang.Object ref = wanPrimaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanPrimaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanPrimaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        wanPrimaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanPrimaryDns() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wanPrimaryDns_ = getDefaultInstance().getWanPrimaryDns();
        onChanged();
        return this;
      }
      void setWanPrimaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        wanPrimaryDns_ = value;
        onChanged();
      }
      
      // optional string wan_secondary_dns = 9;
      private java.lang.Object wanSecondaryDns_ = "";
      public boolean hasWanSecondaryDns() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getWanSecondaryDns() {
        java.lang.Object ref = wanSecondaryDns_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wanSecondaryDns_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWanSecondaryDns(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        wanSecondaryDns_ = value;
        onChanged();
        return this;
      }
      public Builder clearWanSecondaryDns() {
        bitField0_ = (bitField0_ & ~0x00000100);
        wanSecondaryDns_ = getDefaultInstance().getWanSecondaryDns();
        onChanged();
        return this;
      }
      void setWanSecondaryDns(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        wanSecondaryDns_ = value;
        onChanged();
      }
      
      // optional .mrtech.smarthome.rpc.MobileInfo modem = 10;
      private mrtech.smarthome.rpc.Models.MobileInfo modem_ = mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.MobileInfo, mrtech.smarthome.rpc.Models.MobileInfo.Builder, mrtech.smarthome.rpc.Models.MobileInfoOrBuilder> modemBuilder_;
      public boolean hasModem() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public mrtech.smarthome.rpc.Models.MobileInfo getModem() {
        if (modemBuilder_ == null) {
          return modem_;
        } else {
          return modemBuilder_.getMessage();
        }
      }
      public Builder setModem(mrtech.smarthome.rpc.Models.MobileInfo value) {
        if (modemBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modem_ = value;
          onChanged();
        } else {
          modemBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder setModem(
          mrtech.smarthome.rpc.Models.MobileInfo.Builder builderForValue) {
        if (modemBuilder_ == null) {
          modem_ = builderForValue.build();
          onChanged();
        } else {
          modemBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder mergeModem(mrtech.smarthome.rpc.Models.MobileInfo value) {
        if (modemBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              modem_ != mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance()) {
            modem_ =
              mrtech.smarthome.rpc.Models.MobileInfo.newBuilder(modem_).mergeFrom(value).buildPartial();
          } else {
            modem_ = value;
          }
          onChanged();
        } else {
          modemBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      public Builder clearModem() {
        if (modemBuilder_ == null) {
          modem_ = mrtech.smarthome.rpc.Models.MobileInfo.getDefaultInstance();
          onChanged();
        } else {
          modemBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      public mrtech.smarthome.rpc.Models.MobileInfo.Builder getModemBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getModemFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.MobileInfoOrBuilder getModemOrBuilder() {
        if (modemBuilder_ != null) {
          return modemBuilder_.getMessageOrBuilder();
        } else {
          return modem_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.MobileInfo, mrtech.smarthome.rpc.Models.MobileInfo.Builder, mrtech.smarthome.rpc.Models.MobileInfoOrBuilder> 
          getModemFieldBuilder() {
        if (modemBuilder_ == null) {
          modemBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.MobileInfo, mrtech.smarthome.rpc.Models.MobileInfo.Builder, mrtech.smarthome.rpc.Models.MobileInfoOrBuilder>(
                  modem_,
                  getParentForChildren(),
                  isClean());
          modem_ = null;
        }
        return modemBuilder_;
      }
      
      // optional string wifi_2_4g_ssid = 11;
      private java.lang.Object wifi24GSsid_ = "";
      public boolean hasWifi24GSsid() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public String getWifi24GSsid() {
        java.lang.Object ref = wifi24GSsid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wifi24GSsid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWifi24GSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        wifi24GSsid_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi24GSsid() {
        bitField0_ = (bitField0_ & ~0x00000400);
        wifi24GSsid_ = getDefaultInstance().getWifi24GSsid();
        onChanged();
        return this;
      }
      void setWifi24GSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000400;
        wifi24GSsid_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_2_4g_security = 12;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> wifi24GSecurity_ =
        java.util.Collections.emptyList();
      private void ensureWifi24GSecurityIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          wifi24GSecurity_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(wifi24GSecurity_);
          bitField0_ |= 0x00000800;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> wifi24GSecurityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getWifi24GSecurityList() {
        if (wifi24GSecurityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wifi24GSecurity_);
        } else {
          return wifi24GSecurityBuilder_.getMessageList();
        }
      }
      public int getWifi24GSecurityCount() {
        if (wifi24GSecurityBuilder_ == null) {
          return wifi24GSecurity_.size();
        } else {
          return wifi24GSecurityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getWifi24GSecurity(int index) {
        if (wifi24GSecurityBuilder_ == null) {
          return wifi24GSecurity_.get(index);
        } else {
          return wifi24GSecurityBuilder_.getMessage(index);
        }
      }
      public Builder setWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.set(index, value);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi24GSecurityBuilder_ == null) {
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.set(index, builderForValue.build());
          onChanged();
        } else {
          wifi24GSecurityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addWifi24GSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.add(value);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.add(index, value);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addWifi24GSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi24GSecurityBuilder_ == null) {
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.add(builderForValue.build());
          onChanged();
        } else {
          wifi24GSecurityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi24GSecurityBuilder_ == null) {
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.add(index, builderForValue.build());
          onChanged();
        } else {
          wifi24GSecurityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWifi24GSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (wifi24GSecurityBuilder_ == null) {
          ensureWifi24GSecurityIsMutable();
          super.addAll(values, wifi24GSecurity_);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearWifi24GSecurity() {
        if (wifi24GSecurityBuilder_ == null) {
          wifi24GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.clear();
        }
        return this;
      }
      public Builder removeWifi24GSecurity(int index) {
        if (wifi24GSecurityBuilder_ == null) {
          ensureWifi24GSecurityIsMutable();
          wifi24GSecurity_.remove(index);
          onChanged();
        } else {
          wifi24GSecurityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getWifi24GSecurityBuilder(
          int index) {
        return getWifi24GSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi24GSecurityOrBuilder(
          int index) {
        if (wifi24GSecurityBuilder_ == null) {
          return wifi24GSecurity_.get(index);  } else {
          return wifi24GSecurityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getWifi24GSecurityOrBuilderList() {
        if (wifi24GSecurityBuilder_ != null) {
          return wifi24GSecurityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wifi24GSecurity_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addWifi24GSecurityBuilder() {
        return getWifi24GSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addWifi24GSecurityBuilder(
          int index) {
        return getWifi24GSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getWifi24GSecurityBuilderList() {
        return getWifi24GSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getWifi24GSecurityFieldBuilder() {
        if (wifi24GSecurityBuilder_ == null) {
          wifi24GSecurityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  wifi24GSecurity_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          wifi24GSecurity_ = null;
        }
        return wifi24GSecurityBuilder_;
      }
      
      // optional int32 wifi_2_4g_channel = 13;
      private int wifi24GChannel_ ;
      public boolean hasWifi24GChannel() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public int getWifi24GChannel() {
        return wifi24GChannel_;
      }
      public Builder setWifi24GChannel(int value) {
        bitField0_ |= 0x00001000;
        wifi24GChannel_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi24GChannel() {
        bitField0_ = (bitField0_ & ~0x00001000);
        wifi24GChannel_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.BandWidth wifi_2_4g_bandwidth = 14;
      private mrtech.smarthome.rpc.Models.BandWidth wifi24GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
      public boolean hasWifi24GBandwidth() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public mrtech.smarthome.rpc.Models.BandWidth getWifi24GBandwidth() {
        return wifi24GBandwidth_;
      }
      public Builder setWifi24GBandwidth(mrtech.smarthome.rpc.Models.BandWidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00002000;
        wifi24GBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi24GBandwidth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        wifi24GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        onChanged();
        return this;
      }
      
      // optional string guest_wifi_2_4g_ssid = 15;
      private java.lang.Object guestWifi24GSsid_ = "";
      public boolean hasGuestWifi24GSsid() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getGuestWifi24GSsid() {
        java.lang.Object ref = guestWifi24GSsid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          guestWifi24GSsid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGuestWifi24GSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        guestWifi24GSsid_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuestWifi24GSsid() {
        bitField0_ = (bitField0_ & ~0x00004000);
        guestWifi24GSsid_ = getDefaultInstance().getGuestWifi24GSsid();
        onChanged();
        return this;
      }
      void setGuestWifi24GSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        guestWifi24GSsid_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_2_4g_security = 16;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> guestWifi24GSecurity_ =
        java.util.Collections.emptyList();
      private void ensureGuestWifi24GSecurityIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          guestWifi24GSecurity_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(guestWifi24GSecurity_);
          bitField0_ |= 0x00008000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> guestWifi24GSecurityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getGuestWifi24GSecurityList() {
        if (guestWifi24GSecurityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(guestWifi24GSecurity_);
        } else {
          return guestWifi24GSecurityBuilder_.getMessageList();
        }
      }
      public int getGuestWifi24GSecurityCount() {
        if (guestWifi24GSecurityBuilder_ == null) {
          return guestWifi24GSecurity_.size();
        } else {
          return guestWifi24GSecurityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi24GSecurity(int index) {
        if (guestWifi24GSecurityBuilder_ == null) {
          return guestWifi24GSecurity_.get(index);
        } else {
          return guestWifi24GSecurityBuilder_.getMessage(index);
        }
      }
      public Builder setGuestWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.set(index, value);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setGuestWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi24GSecurityBuilder_ == null) {
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.set(index, builderForValue.build());
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addGuestWifi24GSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.add(value);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addGuestWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi24GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.add(index, value);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addGuestWifi24GSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi24GSecurityBuilder_ == null) {
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.add(builderForValue.build());
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addGuestWifi24GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi24GSecurityBuilder_ == null) {
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.add(index, builderForValue.build());
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllGuestWifi24GSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (guestWifi24GSecurityBuilder_ == null) {
          ensureGuestWifi24GSecurityIsMutable();
          super.addAll(values, guestWifi24GSecurity_);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearGuestWifi24GSecurity() {
        if (guestWifi24GSecurityBuilder_ == null) {
          guestWifi24GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.clear();
        }
        return this;
      }
      public Builder removeGuestWifi24GSecurity(int index) {
        if (guestWifi24GSecurityBuilder_ == null) {
          ensureGuestWifi24GSecurityIsMutable();
          guestWifi24GSecurity_.remove(index);
          onChanged();
        } else {
          guestWifi24GSecurityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getGuestWifi24GSecurityBuilder(
          int index) {
        return getGuestWifi24GSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi24GSecurityOrBuilder(
          int index) {
        if (guestWifi24GSecurityBuilder_ == null) {
          return guestWifi24GSecurity_.get(index);  } else {
          return guestWifi24GSecurityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getGuestWifi24GSecurityOrBuilderList() {
        if (guestWifi24GSecurityBuilder_ != null) {
          return guestWifi24GSecurityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(guestWifi24GSecurity_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addGuestWifi24GSecurityBuilder() {
        return getGuestWifi24GSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addGuestWifi24GSecurityBuilder(
          int index) {
        return getGuestWifi24GSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getGuestWifi24GSecurityBuilderList() {
        return getGuestWifi24GSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getGuestWifi24GSecurityFieldBuilder() {
        if (guestWifi24GSecurityBuilder_ == null) {
          guestWifi24GSecurityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  guestWifi24GSecurity_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          guestWifi24GSecurity_ = null;
        }
        return guestWifi24GSecurityBuilder_;
      }
      
      // optional string wifi_5_8g_ssid = 17;
      private java.lang.Object wifi58GSsid_ = "";
      public boolean hasWifi58GSsid() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public String getWifi58GSsid() {
        java.lang.Object ref = wifi58GSsid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          wifi58GSsid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setWifi58GSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        wifi58GSsid_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi58GSsid() {
        bitField0_ = (bitField0_ & ~0x00010000);
        wifi58GSsid_ = getDefaultInstance().getWifi58GSsid();
        onChanged();
        return this;
      }
      void setWifi58GSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00010000;
        wifi58GSsid_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode wifi_5_8g_security = 18;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> wifi58GSecurity_ =
        java.util.Collections.emptyList();
      private void ensureWifi58GSecurityIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          wifi58GSecurity_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(wifi58GSecurity_);
          bitField0_ |= 0x00020000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> wifi58GSecurityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getWifi58GSecurityList() {
        if (wifi58GSecurityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wifi58GSecurity_);
        } else {
          return wifi58GSecurityBuilder_.getMessageList();
        }
      }
      public int getWifi58GSecurityCount() {
        if (wifi58GSecurityBuilder_ == null) {
          return wifi58GSecurity_.size();
        } else {
          return wifi58GSecurityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getWifi58GSecurity(int index) {
        if (wifi58GSecurityBuilder_ == null) {
          return wifi58GSecurity_.get(index);
        } else {
          return wifi58GSecurityBuilder_.getMessage(index);
        }
      }
      public Builder setWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.set(index, value);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi58GSecurityBuilder_ == null) {
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.set(index, builderForValue.build());
          onChanged();
        } else {
          wifi58GSecurityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addWifi58GSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.add(value);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (wifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.add(index, value);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addWifi58GSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi58GSecurityBuilder_ == null) {
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.add(builderForValue.build());
          onChanged();
        } else {
          wifi58GSecurityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (wifi58GSecurityBuilder_ == null) {
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.add(index, builderForValue.build());
          onChanged();
        } else {
          wifi58GSecurityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllWifi58GSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (wifi58GSecurityBuilder_ == null) {
          ensureWifi58GSecurityIsMutable();
          super.addAll(values, wifi58GSecurity_);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearWifi58GSecurity() {
        if (wifi58GSecurityBuilder_ == null) {
          wifi58GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.clear();
        }
        return this;
      }
      public Builder removeWifi58GSecurity(int index) {
        if (wifi58GSecurityBuilder_ == null) {
          ensureWifi58GSecurityIsMutable();
          wifi58GSecurity_.remove(index);
          onChanged();
        } else {
          wifi58GSecurityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getWifi58GSecurityBuilder(
          int index) {
        return getWifi58GSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getWifi58GSecurityOrBuilder(
          int index) {
        if (wifi58GSecurityBuilder_ == null) {
          return wifi58GSecurity_.get(index);  } else {
          return wifi58GSecurityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getWifi58GSecurityOrBuilderList() {
        if (wifi58GSecurityBuilder_ != null) {
          return wifi58GSecurityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wifi58GSecurity_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addWifi58GSecurityBuilder() {
        return getWifi58GSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addWifi58GSecurityBuilder(
          int index) {
        return getWifi58GSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getWifi58GSecurityBuilderList() {
        return getWifi58GSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getWifi58GSecurityFieldBuilder() {
        if (wifi58GSecurityBuilder_ == null) {
          wifi58GSecurityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  wifi58GSecurity_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          wifi58GSecurity_ = null;
        }
        return wifi58GSecurityBuilder_;
      }
      
      // optional int32 wifi_5_8g_channel = 19;
      private int wifi58GChannel_ ;
      public boolean hasWifi58GChannel() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public int getWifi58GChannel() {
        return wifi58GChannel_;
      }
      public Builder setWifi58GChannel(int value) {
        bitField0_ |= 0x00040000;
        wifi58GChannel_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi58GChannel() {
        bitField0_ = (bitField0_ & ~0x00040000);
        wifi58GChannel_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.BandWidth wifi_5_8g_bandwidth = 20;
      private mrtech.smarthome.rpc.Models.BandWidth wifi58GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
      public boolean hasWifi58GBandwidth() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public mrtech.smarthome.rpc.Models.BandWidth getWifi58GBandwidth() {
        return wifi58GBandwidth_;
      }
      public Builder setWifi58GBandwidth(mrtech.smarthome.rpc.Models.BandWidth value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00080000;
        wifi58GBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi58GBandwidth() {
        bitField0_ = (bitField0_ & ~0x00080000);
        wifi58GBandwidth_ = mrtech.smarthome.rpc.Models.BandWidth.BAND_WIDTH_20M;
        onChanged();
        return this;
      }
      
      // optional string guest_wifi_5_8g_ssid = 21;
      private java.lang.Object guestWifi58GSsid_ = "";
      public boolean hasGuestWifi58GSsid() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public String getGuestWifi58GSsid() {
        java.lang.Object ref = guestWifi58GSsid_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          guestWifi58GSsid_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setGuestWifi58GSsid(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        guestWifi58GSsid_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuestWifi58GSsid() {
        bitField0_ = (bitField0_ & ~0x00100000);
        guestWifi58GSsid_ = getDefaultInstance().getGuestWifi58GSsid();
        onChanged();
        return this;
      }
      void setGuestWifi58GSsid(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00100000;
        guestWifi58GSsid_ = value;
        onChanged();
      }
      
      // repeated .mrtech.smarthome.rpc.EncryptionMode guest_wifi_5_8g_security = 22;
      private java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> guestWifi58GSecurity_ =
        java.util.Collections.emptyList();
      private void ensureGuestWifi58GSecurityIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          guestWifi58GSecurity_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.EncryptionMode>(guestWifi58GSecurity_);
          bitField0_ |= 0x00200000;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> guestWifi58GSecurityBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode> getGuestWifi58GSecurityList() {
        if (guestWifi58GSecurityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(guestWifi58GSecurity_);
        } else {
          return guestWifi58GSecurityBuilder_.getMessageList();
        }
      }
      public int getGuestWifi58GSecurityCount() {
        if (guestWifi58GSecurityBuilder_ == null) {
          return guestWifi58GSecurity_.size();
        } else {
          return guestWifi58GSecurityBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode getGuestWifi58GSecurity(int index) {
        if (guestWifi58GSecurityBuilder_ == null) {
          return guestWifi58GSecurity_.get(index);
        } else {
          return guestWifi58GSecurityBuilder_.getMessage(index);
        }
      }
      public Builder setGuestWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.set(index, value);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setGuestWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi58GSecurityBuilder_ == null) {
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.set(index, builderForValue.build());
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addGuestWifi58GSecurity(mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.add(value);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addGuestWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode value) {
        if (guestWifi58GSecurityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.add(index, value);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addGuestWifi58GSecurity(
          mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi58GSecurityBuilder_ == null) {
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.add(builderForValue.build());
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addGuestWifi58GSecurity(
          int index, mrtech.smarthome.rpc.Models.EncryptionMode.Builder builderForValue) {
        if (guestWifi58GSecurityBuilder_ == null) {
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.add(index, builderForValue.build());
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllGuestWifi58GSecurity(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.EncryptionMode> values) {
        if (guestWifi58GSecurityBuilder_ == null) {
          ensureGuestWifi58GSecurityIsMutable();
          super.addAll(values, guestWifi58GSecurity_);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearGuestWifi58GSecurity() {
        if (guestWifi58GSecurityBuilder_ == null) {
          guestWifi58GSecurity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.clear();
        }
        return this;
      }
      public Builder removeGuestWifi58GSecurity(int index) {
        if (guestWifi58GSecurityBuilder_ == null) {
          ensureGuestWifi58GSecurityIsMutable();
          guestWifi58GSecurity_.remove(index);
          onChanged();
        } else {
          guestWifi58GSecurityBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder getGuestWifi58GSecurityBuilder(
          int index) {
        return getGuestWifi58GSecurityFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder getGuestWifi58GSecurityOrBuilder(
          int index) {
        if (guestWifi58GSecurityBuilder_ == null) {
          return guestWifi58GSecurity_.get(index);  } else {
          return guestWifi58GSecurityBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
           getGuestWifi58GSecurityOrBuilderList() {
        if (guestWifi58GSecurityBuilder_ != null) {
          return guestWifi58GSecurityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(guestWifi58GSecurity_);
        }
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addGuestWifi58GSecurityBuilder() {
        return getGuestWifi58GSecurityFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.EncryptionMode.Builder addGuestWifi58GSecurityBuilder(
          int index) {
        return getGuestWifi58GSecurityFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.EncryptionMode.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.EncryptionMode.Builder> 
           getGuestWifi58GSecurityBuilderList() {
        return getGuestWifi58GSecurityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder> 
          getGuestWifi58GSecurityFieldBuilder() {
        if (guestWifi58GSecurityBuilder_ == null) {
          guestWifi58GSecurityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.EncryptionMode, mrtech.smarthome.rpc.Models.EncryptionMode.Builder, mrtech.smarthome.rpc.Models.EncryptionModeOrBuilder>(
                  guestWifi58GSecurity_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          guestWifi58GSecurity_ = null;
        }
        return guestWifi58GSecurityBuilder_;
      }
      
      // optional bool wifi_2_4g_enabled = 23;
      private boolean wifi24GEnabled_ ;
      public boolean hasWifi24GEnabled() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      public boolean getWifi24GEnabled() {
        return wifi24GEnabled_;
      }
      public Builder setWifi24GEnabled(boolean value) {
        bitField0_ |= 0x00400000;
        wifi24GEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi24GEnabled() {
        bitField0_ = (bitField0_ & ~0x00400000);
        wifi24GEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool guest_wifi_2_4g_enabled = 24;
      private boolean guestWifi24GEnabled_ ;
      public boolean hasGuestWifi24GEnabled() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      public boolean getGuestWifi24GEnabled() {
        return guestWifi24GEnabled_;
      }
      public Builder setGuestWifi24GEnabled(boolean value) {
        bitField0_ |= 0x00800000;
        guestWifi24GEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuestWifi24GEnabled() {
        bitField0_ = (bitField0_ & ~0x00800000);
        guestWifi24GEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool wifi_5_8g_enabled = 25;
      private boolean wifi58GEnabled_ ;
      public boolean hasWifi58GEnabled() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      public boolean getWifi58GEnabled() {
        return wifi58GEnabled_;
      }
      public Builder setWifi58GEnabled(boolean value) {
        bitField0_ |= 0x01000000;
        wifi58GEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearWifi58GEnabled() {
        bitField0_ = (bitField0_ & ~0x01000000);
        wifi58GEnabled_ = false;
        onChanged();
        return this;
      }
      
      // optional bool guest_wifi_5_8g_enabled = 26;
      private boolean guestWifi58GEnabled_ ;
      public boolean hasGuestWifi58GEnabled() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      public boolean getGuestWifi58GEnabled() {
        return guestWifi58GEnabled_;
      }
      public Builder setGuestWifi58GEnabled(boolean value) {
        bitField0_ |= 0x02000000;
        guestWifi58GEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearGuestWifi58GEnabled() {
        bitField0_ = (bitField0_ & ~0x02000000);
        guestWifi58GEnabled_ = false;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.NetworkInfo)
    }
    
    static {
      defaultInstance = new NetworkInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.NetworkInfo)
  }
  
  public interface QosConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool enabled = 1;
    boolean hasEnabled();
    boolean getEnabled();
    
    // optional .mrtech.smarthome.rpc.QosMode mode = 2;
    boolean hasMode();
    mrtech.smarthome.rpc.Models.QosMode getMode();
    
    // optional string exclusive_mac = 3;
    boolean hasExclusiveMac();
    String getExclusiveMac();
    
    // optional int32 max_inbound_bandwidth = 4;
    boolean hasMaxInboundBandwidth();
    int getMaxInboundBandwidth();
    
    // optional int32 max_outbound_bandwidth = 5;
    boolean hasMaxOutboundBandwidth();
    int getMaxOutboundBandwidth();
    
    // optional .mrtech.smarthome.rpc.QosPriority priority = 6;
    boolean hasPriority();
    mrtech.smarthome.rpc.Models.QosPriority getPriority();
  }
  public static final class QosConfig extends
      com.google.protobuf.GeneratedMessage
      implements QosConfigOrBuilder {
    // Use QosConfig.newBuilder() to construct.
    private QosConfig(Builder builder) {
      super(builder);
    }
    private QosConfig(boolean noInit) {}
    
    private static final QosConfig defaultInstance;
    public static QosConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public QosConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional bool enabled = 1;
    public static final int ENABLED_FIELD_NUMBER = 1;
    private boolean enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getEnabled() {
      return enabled_;
    }
    
    // optional .mrtech.smarthome.rpc.QosMode mode = 2;
    public static final int MODE_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.QosMode mode_;
    public boolean hasMode() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.QosMode getMode() {
      return mode_;
    }
    
    // optional string exclusive_mac = 3;
    public static final int EXCLUSIVE_MAC_FIELD_NUMBER = 3;
    private java.lang.Object exclusiveMac_;
    public boolean hasExclusiveMac() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getExclusiveMac() {
      java.lang.Object ref = exclusiveMac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          exclusiveMac_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getExclusiveMacBytes() {
      java.lang.Object ref = exclusiveMac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        exclusiveMac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 max_inbound_bandwidth = 4;
    public static final int MAX_INBOUND_BANDWIDTH_FIELD_NUMBER = 4;
    private int maxInboundBandwidth_;
    public boolean hasMaxInboundBandwidth() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getMaxInboundBandwidth() {
      return maxInboundBandwidth_;
    }
    
    // optional int32 max_outbound_bandwidth = 5;
    public static final int MAX_OUTBOUND_BANDWIDTH_FIELD_NUMBER = 5;
    private int maxOutboundBandwidth_;
    public boolean hasMaxOutboundBandwidth() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getMaxOutboundBandwidth() {
      return maxOutboundBandwidth_;
    }
    
    // optional .mrtech.smarthome.rpc.QosPriority priority = 6;
    public static final int PRIORITY_FIELD_NUMBER = 6;
    private mrtech.smarthome.rpc.Models.QosPriority priority_;
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public mrtech.smarthome.rpc.Models.QosPriority getPriority() {
      return priority_;
    }
    
    private void initFields() {
      enabled_ = false;
      mode_ = mrtech.smarthome.rpc.Models.QosMode.QOS_MODE_NORMAL;
      exclusiveMac_ = "";
      maxInboundBandwidth_ = 0;
      maxOutboundBandwidth_ = 0;
      priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getExclusiveMacBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, maxInboundBandwidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, maxOutboundBandwidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, priority_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, enabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mode_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getExclusiveMacBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, maxInboundBandwidth_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, maxOutboundBandwidth_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, priority_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.QosConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.QosConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.QosConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        enabled_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = mrtech.smarthome.rpc.Models.QosMode.QOS_MODE_NORMAL;
        bitField0_ = (bitField0_ & ~0x00000002);
        exclusiveMac_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        maxInboundBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxOutboundBandwidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.QosConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.QosConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.QosConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.QosConfig build() {
        mrtech.smarthome.rpc.Models.QosConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.QosConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.QosConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.QosConfig buildPartial() {
        mrtech.smarthome.rpc.Models.QosConfig result = new mrtech.smarthome.rpc.Models.QosConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mode_ = mode_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.exclusiveMac_ = exclusiveMac_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.maxInboundBandwidth_ = maxInboundBandwidth_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.maxOutboundBandwidth_ = maxOutboundBandwidth_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.priority_ = priority_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.QosConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.QosConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.QosConfig other) {
        if (other == mrtech.smarthome.rpc.Models.QosConfig.getDefaultInstance()) return this;
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        if (other.hasExclusiveMac()) {
          setExclusiveMac(other.getExclusiveMac());
        }
        if (other.hasMaxInboundBandwidth()) {
          setMaxInboundBandwidth(other.getMaxInboundBandwidth());
        }
        if (other.hasMaxOutboundBandwidth()) {
          setMaxOutboundBandwidth(other.getMaxOutboundBandwidth());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              enabled_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.QosMode value = mrtech.smarthome.rpc.Models.QosMode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                mode_ = value;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              exclusiveMac_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              maxInboundBandwidth_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              maxOutboundBandwidth_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.QosPriority value = mrtech.smarthome.rpc.Models.QosPriority.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                priority_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool enabled = 1;
      private boolean enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        enabled_ = false;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.QosMode mode = 2;
      private mrtech.smarthome.rpc.Models.QosMode mode_ = mrtech.smarthome.rpc.Models.QosMode.QOS_MODE_NORMAL;
      public boolean hasMode() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.QosMode getMode() {
        return mode_;
      }
      public Builder setMode(mrtech.smarthome.rpc.Models.QosMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        mode_ = value;
        onChanged();
        return this;
      }
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mode_ = mrtech.smarthome.rpc.Models.QosMode.QOS_MODE_NORMAL;
        onChanged();
        return this;
      }
      
      // optional string exclusive_mac = 3;
      private java.lang.Object exclusiveMac_ = "";
      public boolean hasExclusiveMac() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getExclusiveMac() {
        java.lang.Object ref = exclusiveMac_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          exclusiveMac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setExclusiveMac(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        exclusiveMac_ = value;
        onChanged();
        return this;
      }
      public Builder clearExclusiveMac() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exclusiveMac_ = getDefaultInstance().getExclusiveMac();
        onChanged();
        return this;
      }
      void setExclusiveMac(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        exclusiveMac_ = value;
        onChanged();
      }
      
      // optional int32 max_inbound_bandwidth = 4;
      private int maxInboundBandwidth_ ;
      public boolean hasMaxInboundBandwidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getMaxInboundBandwidth() {
        return maxInboundBandwidth_;
      }
      public Builder setMaxInboundBandwidth(int value) {
        bitField0_ |= 0x00000008;
        maxInboundBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxInboundBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        maxInboundBandwidth_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 max_outbound_bandwidth = 5;
      private int maxOutboundBandwidth_ ;
      public boolean hasMaxOutboundBandwidth() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getMaxOutboundBandwidth() {
        return maxOutboundBandwidth_;
      }
      public Builder setMaxOutboundBandwidth(int value) {
        bitField0_ |= 0x00000010;
        maxOutboundBandwidth_ = value;
        onChanged();
        return this;
      }
      public Builder clearMaxOutboundBandwidth() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxOutboundBandwidth_ = 0;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.QosPriority priority = 6;
      private mrtech.smarthome.rpc.Models.QosPriority priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public mrtech.smarthome.rpc.Models.QosPriority getPriority() {
        return priority_;
      }
      public Builder setPriority(mrtech.smarthome.rpc.Models.QosPriority value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        priority_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000020);
        priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.QosConfig)
    }
    
    static {
      defaultInstance = new QosConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.QosConfig)
  }
  
  public interface QosRuleOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.QosPriority priority = 1;
    boolean hasPriority();
    mrtech.smarthome.rpc.Models.QosPriority getPriority();
    
    // optional string mac_address = 2;
    boolean hasMacAddress();
    String getMacAddress();
  }
  public static final class QosRule extends
      com.google.protobuf.GeneratedMessage
      implements QosRuleOrBuilder {
    // Use QosRule.newBuilder() to construct.
    private QosRule(Builder builder) {
      super(builder);
    }
    private QosRule(boolean noInit) {}
    
    private static final QosRule defaultInstance;
    public static QosRule getDefaultInstance() {
      return defaultInstance;
    }
    
    public QosRule getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosRule_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosRule_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.QosPriority priority = 1;
    public static final int PRIORITY_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.QosPriority priority_;
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.QosPriority getPriority() {
      return priority_;
    }
    
    // optional string mac_address = 2;
    public static final int MAC_ADDRESS_FIELD_NUMBER = 2;
    private java.lang.Object macAddress_;
    public boolean hasMacAddress() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getMacAddress() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          macAddress_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getMacAddressBytes() {
      java.lang.Object ref = macAddress_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        macAddress_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
      macAddress_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, priority_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMacAddressBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, priority_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMacAddressBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.QosRule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.QosRule prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.QosRuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosRule_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_QosRule_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.QosRule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
        bitField0_ = (bitField0_ & ~0x00000001);
        macAddress_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.QosRule.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.QosRule getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.QosRule.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.QosRule build() {
        mrtech.smarthome.rpc.Models.QosRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.QosRule buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.QosRule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.QosRule buildPartial() {
        mrtech.smarthome.rpc.Models.QosRule result = new mrtech.smarthome.rpc.Models.QosRule(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.macAddress_ = macAddress_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.QosRule) {
          return mergeFrom((mrtech.smarthome.rpc.Models.QosRule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.QosRule other) {
        if (other == mrtech.smarthome.rpc.Models.QosRule.getDefaultInstance()) return this;
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasMacAddress()) {
          setMacAddress(other.getMacAddress());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.QosPriority value = mrtech.smarthome.rpc.Models.QosPriority.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                priority_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              macAddress_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.QosPriority priority = 1;
      private mrtech.smarthome.rpc.Models.QosPriority priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.QosPriority getPriority() {
        return priority_;
      }
      public Builder setPriority(mrtech.smarthome.rpc.Models.QosPriority value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        priority_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000001);
        priority_ = mrtech.smarthome.rpc.Models.QosPriority.QOS_PRIORITY_HIGHEST;
        onChanged();
        return this;
      }
      
      // optional string mac_address = 2;
      private java.lang.Object macAddress_ = "";
      public boolean hasMacAddress() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getMacAddress() {
        java.lang.Object ref = macAddress_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          macAddress_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setMacAddress(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        macAddress_ = value;
        onChanged();
        return this;
      }
      public Builder clearMacAddress() {
        bitField0_ = (bitField0_ & ~0x00000002);
        macAddress_ = getDefaultInstance().getMacAddress();
        onChanged();
        return this;
      }
      void setMacAddress(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        macAddress_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.QosRule)
    }
    
    static {
      defaultInstance = new QosRule(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.QosRule)
  }
  
  public interface GroupSummaryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.Group group = 1;
    boolean hasGroup();
    mrtech.smarthome.rpc.Models.Group getGroup();
    mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder();
    
    // repeated string device_models = 2;
    java.util.List<String> getDeviceModelsList();
    int getDeviceModelsCount();
    String getDeviceModels(int index);
  }
  public static final class GroupSummary extends
      com.google.protobuf.GeneratedMessage
      implements GroupSummaryOrBuilder {
    // Use GroupSummary.newBuilder() to construct.
    private GroupSummary(Builder builder) {
      super(builder);
    }
    private GroupSummary(boolean noInit) {}
    
    private static final GroupSummary defaultInstance;
    public static GroupSummary getDefaultInstance() {
      return defaultInstance;
    }
    
    public GroupSummary getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupSummary_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupSummary_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.Group group = 1;
    public static final int GROUP_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.Group group_;
    public boolean hasGroup() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.Group getGroup() {
      return group_;
    }
    public mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder() {
      return group_;
    }
    
    // repeated string device_models = 2;
    public static final int DEVICE_MODELS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList deviceModels_;
    public java.util.List<String>
        getDeviceModelsList() {
      return deviceModels_;
    }
    public int getDeviceModelsCount() {
      return deviceModels_.size();
    }
    public String getDeviceModels(int index) {
      return deviceModels_.get(index);
    }
    
    private void initFields() {
      group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
      deviceModels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, group_);
      }
      for (int i = 0; i < deviceModels_.size(); i++) {
        output.writeBytes(2, deviceModels_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, group_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < deviceModels_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(deviceModels_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getDeviceModelsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.GroupSummary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.GroupSummary prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.GroupSummaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupSummary_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_GroupSummary_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.GroupSummary.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGroupFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (groupBuilder_ == null) {
          group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
        } else {
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceModels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.GroupSummary.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.GroupSummary getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.GroupSummary.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.GroupSummary build() {
        mrtech.smarthome.rpc.Models.GroupSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.GroupSummary buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.GroupSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.GroupSummary buildPartial() {
        mrtech.smarthome.rpc.Models.GroupSummary result = new mrtech.smarthome.rpc.Models.GroupSummary(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (groupBuilder_ == null) {
          result.group_ = group_;
        } else {
          result.group_ = groupBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          deviceModels_ = new com.google.protobuf.UnmodifiableLazyStringList(
              deviceModels_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.deviceModels_ = deviceModels_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.GroupSummary) {
          return mergeFrom((mrtech.smarthome.rpc.Models.GroupSummary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.GroupSummary other) {
        if (other == mrtech.smarthome.rpc.Models.GroupSummary.getDefaultInstance()) return this;
        if (other.hasGroup()) {
          mergeGroup(other.getGroup());
        }
        if (!other.deviceModels_.isEmpty()) {
          if (deviceModels_.isEmpty()) {
            deviceModels_ = other.deviceModels_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDeviceModelsIsMutable();
            deviceModels_.addAll(other.deviceModels_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              mrtech.smarthome.rpc.Models.Group.Builder subBuilder = mrtech.smarthome.rpc.Models.Group.newBuilder();
              if (hasGroup()) {
                subBuilder.mergeFrom(getGroup());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setGroup(subBuilder.buildPartial());
              break;
            }
            case 18: {
              ensureDeviceModelsIsMutable();
              deviceModels_.add(input.readBytes());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.Group group = 1;
      private mrtech.smarthome.rpc.Models.Group group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder> groupBuilder_;
      public boolean hasGroup() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.Group getGroup() {
        if (groupBuilder_ == null) {
          return group_;
        } else {
          return groupBuilder_.getMessage();
        }
      }
      public Builder setGroup(mrtech.smarthome.rpc.Models.Group value) {
        if (groupBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          group_ = value;
          onChanged();
        } else {
          groupBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setGroup(
          mrtech.smarthome.rpc.Models.Group.Builder builderForValue) {
        if (groupBuilder_ == null) {
          group_ = builderForValue.build();
          onChanged();
        } else {
          groupBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeGroup(mrtech.smarthome.rpc.Models.Group value) {
        if (groupBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              group_ != mrtech.smarthome.rpc.Models.Group.getDefaultInstance()) {
            group_ =
              mrtech.smarthome.rpc.Models.Group.newBuilder(group_).mergeFrom(value).buildPartial();
          } else {
            group_ = value;
          }
          onChanged();
        } else {
          groupBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearGroup() {
        if (groupBuilder_ == null) {
          group_ = mrtech.smarthome.rpc.Models.Group.getDefaultInstance();
          onChanged();
        } else {
          groupBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public mrtech.smarthome.rpc.Models.Group.Builder getGroupBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getGroupFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.GroupOrBuilder getGroupOrBuilder() {
        if (groupBuilder_ != null) {
          return groupBuilder_.getMessageOrBuilder();
        } else {
          return group_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder> 
          getGroupFieldBuilder() {
        if (groupBuilder_ == null) {
          groupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.Group, mrtech.smarthome.rpc.Models.Group.Builder, mrtech.smarthome.rpc.Models.GroupOrBuilder>(
                  group_,
                  getParentForChildren(),
                  isClean());
          group_ = null;
        }
        return groupBuilder_;
      }
      
      // repeated string device_models = 2;
      private com.google.protobuf.LazyStringList deviceModels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDeviceModelsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          deviceModels_ = new com.google.protobuf.LazyStringArrayList(deviceModels_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getDeviceModelsList() {
        return java.util.Collections.unmodifiableList(deviceModels_);
      }
      public int getDeviceModelsCount() {
        return deviceModels_.size();
      }
      public String getDeviceModels(int index) {
        return deviceModels_.get(index);
      }
      public Builder setDeviceModels(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDeviceModelsIsMutable();
        deviceModels_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addDeviceModels(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDeviceModelsIsMutable();
        deviceModels_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllDeviceModels(
          java.lang.Iterable<String> values) {
        ensureDeviceModelsIsMutable();
        super.addAll(values, deviceModels_);
        onChanged();
        return this;
      }
      public Builder clearDeviceModels() {
        deviceModels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addDeviceModels(com.google.protobuf.ByteString value) {
        ensureDeviceModelsIsMutable();
        deviceModels_.add(value);
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.GroupSummary)
    }
    
    static {
      defaultInstance = new GroupSummary(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.GroupSummary)
  }
  
  public interface CpuInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.CpuId id = 1;
    boolean hasId();
    mrtech.smarthome.rpc.Models.CpuId getId();
    
    // optional uint64 user = 2;
    boolean hasUser();
    long getUser();
    
    // optional uint64 kernel = 3;
    boolean hasKernel();
    long getKernel();
    
    // optional uint64 nice = 4;
    boolean hasNice();
    long getNice();
    
    // optional uint64 idle = 5;
    boolean hasIdle();
    long getIdle();
  }
  public static final class CpuInfo extends
      com.google.protobuf.GeneratedMessage
      implements CpuInfoOrBuilder {
    // Use CpuInfo.newBuilder() to construct.
    private CpuInfo(Builder builder) {
      super(builder);
    }
    private CpuInfo(boolean noInit) {}
    
    private static final CpuInfo defaultInstance;
    public static CpuInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public CpuInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CpuInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CpuInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.CpuId id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.CpuId id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.CpuId getId() {
      return id_;
    }
    
    // optional uint64 user = 2;
    public static final int USER_FIELD_NUMBER = 2;
    private long user_;
    public boolean hasUser() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUser() {
      return user_;
    }
    
    // optional uint64 kernel = 3;
    public static final int KERNEL_FIELD_NUMBER = 3;
    private long kernel_;
    public boolean hasKernel() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getKernel() {
      return kernel_;
    }
    
    // optional uint64 nice = 4;
    public static final int NICE_FIELD_NUMBER = 4;
    private long nice_;
    public boolean hasNice() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public long getNice() {
      return nice_;
    }
    
    // optional uint64 idle = 5;
    public static final int IDLE_FIELD_NUMBER = 5;
    private long idle_;
    public boolean hasIdle() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public long getIdle() {
      return idle_;
    }
    
    private void initFields() {
      id_ = mrtech.smarthome.rpc.Models.CpuId.CPU_ID_CPU0;
      user_ = 0L;
      kernel_ = 0L;
      nice_ = 0L;
      idle_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, id_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, user_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, kernel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt64(4, nice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt64(5, idle_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, id_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, user_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, kernel_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, nice_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, idle_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.CpuInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.CpuInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.CpuInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CpuInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_CpuInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.CpuInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = mrtech.smarthome.rpc.Models.CpuId.CPU_ID_CPU0;
        bitField0_ = (bitField0_ & ~0x00000001);
        user_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        kernel_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        nice_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        idle_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.CpuInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.CpuInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.CpuInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.CpuInfo build() {
        mrtech.smarthome.rpc.Models.CpuInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.CpuInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.CpuInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.CpuInfo buildPartial() {
        mrtech.smarthome.rpc.Models.CpuInfo result = new mrtech.smarthome.rpc.Models.CpuInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.user_ = user_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kernel_ = kernel_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nice_ = nice_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.idle_ = idle_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.CpuInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.CpuInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.CpuInfo other) {
        if (other == mrtech.smarthome.rpc.Models.CpuInfo.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUser()) {
          setUser(other.getUser());
        }
        if (other.hasKernel()) {
          setKernel(other.getKernel());
        }
        if (other.hasNice()) {
          setNice(other.getNice());
        }
        if (other.hasIdle()) {
          setIdle(other.getIdle());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.CpuId value = mrtech.smarthome.rpc.Models.CpuId.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                id_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              user_ = input.readUInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              kernel_ = input.readUInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              nice_ = input.readUInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              idle_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.CpuId id = 1;
      private mrtech.smarthome.rpc.Models.CpuId id_ = mrtech.smarthome.rpc.Models.CpuId.CPU_ID_CPU0;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.CpuId getId() {
        return id_;
      }
      public Builder setId(mrtech.smarthome.rpc.Models.CpuId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = mrtech.smarthome.rpc.Models.CpuId.CPU_ID_CPU0;
        onChanged();
        return this;
      }
      
      // optional uint64 user = 2;
      private long user_ ;
      public boolean hasUser() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUser() {
        return user_;
      }
      public Builder setUser(long value) {
        bitField0_ |= 0x00000002;
        user_ = value;
        onChanged();
        return this;
      }
      public Builder clearUser() {
        bitField0_ = (bitField0_ & ~0x00000002);
        user_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 kernel = 3;
      private long kernel_ ;
      public boolean hasKernel() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getKernel() {
        return kernel_;
      }
      public Builder setKernel(long value) {
        bitField0_ |= 0x00000004;
        kernel_ = value;
        onChanged();
        return this;
      }
      public Builder clearKernel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kernel_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 nice = 4;
      private long nice_ ;
      public boolean hasNice() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public long getNice() {
        return nice_;
      }
      public Builder setNice(long value) {
        bitField0_ |= 0x00000008;
        nice_ = value;
        onChanged();
        return this;
      }
      public Builder clearNice() {
        bitField0_ = (bitField0_ & ~0x00000008);
        nice_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 idle = 5;
      private long idle_ ;
      public boolean hasIdle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public long getIdle() {
        return idle_;
      }
      public Builder setIdle(long value) {
        bitField0_ |= 0x00000010;
        idle_ = value;
        onChanged();
        return this;
      }
      public Builder clearIdle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        idle_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.CpuInfo)
    }
    
    static {
      defaultInstance = new CpuInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.CpuInfo)
  }
  
  public interface MemoryInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 total_ram = 1;
    boolean hasTotalRam();
    long getTotalRam();
    
    // optional uint64 free_ram = 2;
    boolean hasFreeRam();
    long getFreeRam();
  }
  public static final class MemoryInfo extends
      com.google.protobuf.GeneratedMessage
      implements MemoryInfoOrBuilder {
    // Use MemoryInfo.newBuilder() to construct.
    private MemoryInfo(Builder builder) {
      super(builder);
    }
    private MemoryInfo(boolean noInit) {}
    
    private static final MemoryInfo defaultInstance;
    public static MemoryInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public MemoryInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MemoryInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MemoryInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 total_ram = 1;
    public static final int TOTAL_RAM_FIELD_NUMBER = 1;
    private long totalRam_;
    public boolean hasTotalRam() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTotalRam() {
      return totalRam_;
    }
    
    // optional uint64 free_ram = 2;
    public static final int FREE_RAM_FIELD_NUMBER = 2;
    private long freeRam_;
    public boolean hasFreeRam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getFreeRam() {
      return freeRam_;
    }
    
    private void initFields() {
      totalRam_ = 0L;
      freeRam_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, totalRam_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, freeRam_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, totalRam_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, freeRam_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.MemoryInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.MemoryInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MemoryInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_MemoryInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.MemoryInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        totalRam_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        freeRam_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.MemoryInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.MemoryInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.MemoryInfo build() {
        mrtech.smarthome.rpc.Models.MemoryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.MemoryInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.MemoryInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.MemoryInfo buildPartial() {
        mrtech.smarthome.rpc.Models.MemoryInfo result = new mrtech.smarthome.rpc.Models.MemoryInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.totalRam_ = totalRam_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freeRam_ = freeRam_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.MemoryInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.MemoryInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.MemoryInfo other) {
        if (other == mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance()) return this;
        if (other.hasTotalRam()) {
          setTotalRam(other.getTotalRam());
        }
        if (other.hasFreeRam()) {
          setFreeRam(other.getFreeRam());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              totalRam_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freeRam_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 total_ram = 1;
      private long totalRam_ ;
      public boolean hasTotalRam() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTotalRam() {
        return totalRam_;
      }
      public Builder setTotalRam(long value) {
        bitField0_ |= 0x00000001;
        totalRam_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalRam() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalRam_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 free_ram = 2;
      private long freeRam_ ;
      public boolean hasFreeRam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getFreeRam() {
        return freeRam_;
      }
      public Builder setFreeRam(long value) {
        bitField0_ |= 0x00000002;
        freeRam_ = value;
        onChanged();
        return this;
      }
      public Builder clearFreeRam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freeRam_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.MemoryInfo)
    }
    
    static {
      defaultInstance = new MemoryInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.MemoryInfo)
  }
  
  public interface InternalStorageInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint64 total_size = 1;
    boolean hasTotalSize();
    long getTotalSize();
    
    // optional uint64 free_size = 2;
    boolean hasFreeSize();
    long getFreeSize();
  }
  public static final class InternalStorageInfo extends
      com.google.protobuf.GeneratedMessage
      implements InternalStorageInfoOrBuilder {
    // Use InternalStorageInfo.newBuilder() to construct.
    private InternalStorageInfo(Builder builder) {
      super(builder);
    }
    private InternalStorageInfo(boolean noInit) {}
    
    private static final InternalStorageInfo defaultInstance;
    public static InternalStorageInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public InternalStorageInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_InternalStorageInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_InternalStorageInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint64 total_size = 1;
    public static final int TOTAL_SIZE_FIELD_NUMBER = 1;
    private long totalSize_;
    public boolean hasTotalSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getTotalSize() {
      return totalSize_;
    }
    
    // optional uint64 free_size = 2;
    public static final int FREE_SIZE_FIELD_NUMBER = 2;
    private long freeSize_;
    public boolean hasFreeSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getFreeSize() {
      return freeSize_;
    }
    
    private void initFields() {
      totalSize_ = 0L;
      freeSize_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, totalSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, freeSize_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, totalSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, freeSize_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.InternalStorageInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.InternalStorageInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_InternalStorageInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_InternalStorageInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.InternalStorageInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        totalSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        freeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.InternalStorageInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.InternalStorageInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.InternalStorageInfo build() {
        mrtech.smarthome.rpc.Models.InternalStorageInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.InternalStorageInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.InternalStorageInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.InternalStorageInfo buildPartial() {
        mrtech.smarthome.rpc.Models.InternalStorageInfo result = new mrtech.smarthome.rpc.Models.InternalStorageInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.totalSize_ = totalSize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.freeSize_ = freeSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.InternalStorageInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.InternalStorageInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.InternalStorageInfo other) {
        if (other == mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance()) return this;
        if (other.hasTotalSize()) {
          setTotalSize(other.getTotalSize());
        }
        if (other.hasFreeSize()) {
          setFreeSize(other.getFreeSize());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              totalSize_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              freeSize_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 total_size = 1;
      private long totalSize_ ;
      public boolean hasTotalSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getTotalSize() {
        return totalSize_;
      }
      public Builder setTotalSize(long value) {
        bitField0_ |= 0x00000001;
        totalSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearTotalSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalSize_ = 0L;
        onChanged();
        return this;
      }
      
      // optional uint64 free_size = 2;
      private long freeSize_ ;
      public boolean hasFreeSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getFreeSize() {
        return freeSize_;
      }
      public Builder setFreeSize(long value) {
        bitField0_ |= 0x00000002;
        freeSize_ = value;
        onChanged();
        return this;
      }
      public Builder clearFreeSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        freeSize_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.InternalStorageInfo)
    }
    
    static {
      defaultInstance = new InternalStorageInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.InternalStorageInfo)
  }
  
  public interface SystemInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .mrtech.smarthome.rpc.CpuInfo cpu = 1;
    java.util.List<mrtech.smarthome.rpc.Models.CpuInfo> 
        getCpuList();
    mrtech.smarthome.rpc.Models.CpuInfo getCpu(int index);
    int getCpuCount();
    java.util.List<? extends mrtech.smarthome.rpc.Models.CpuInfoOrBuilder> 
        getCpuOrBuilderList();
    mrtech.smarthome.rpc.Models.CpuInfoOrBuilder getCpuOrBuilder(
        int index);
    
    // optional .mrtech.smarthome.rpc.MemoryInfo memory = 2;
    boolean hasMemory();
    mrtech.smarthome.rpc.Models.MemoryInfo getMemory();
    mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder getMemoryOrBuilder();
    
    // optional .mrtech.smarthome.rpc.InternalStorageInfo internal_storage = 3;
    boolean hasInternalStorage();
    mrtech.smarthome.rpc.Models.InternalStorageInfo getInternalStorage();
    mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder getInternalStorageOrBuilder();
  }
  public static final class SystemInfo extends
      com.google.protobuf.GeneratedMessage
      implements SystemInfoOrBuilder {
    // Use SystemInfo.newBuilder() to construct.
    private SystemInfo(Builder builder) {
      super(builder);
    }
    private SystemInfo(boolean noInit) {}
    
    private static final SystemInfo defaultInstance;
    public static SystemInfo getDefaultInstance() {
      return defaultInstance;
    }
    
    public SystemInfo getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemInfo_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemInfo_fieldAccessorTable;
    }
    
    private int bitField0_;
    // repeated .mrtech.smarthome.rpc.CpuInfo cpu = 1;
    public static final int CPU_FIELD_NUMBER = 1;
    private java.util.List<mrtech.smarthome.rpc.Models.CpuInfo> cpu_;
    public java.util.List<mrtech.smarthome.rpc.Models.CpuInfo> getCpuList() {
      return cpu_;
    }
    public java.util.List<? extends mrtech.smarthome.rpc.Models.CpuInfoOrBuilder> 
        getCpuOrBuilderList() {
      return cpu_;
    }
    public int getCpuCount() {
      return cpu_.size();
    }
    public mrtech.smarthome.rpc.Models.CpuInfo getCpu(int index) {
      return cpu_.get(index);
    }
    public mrtech.smarthome.rpc.Models.CpuInfoOrBuilder getCpuOrBuilder(
        int index) {
      return cpu_.get(index);
    }
    
    // optional .mrtech.smarthome.rpc.MemoryInfo memory = 2;
    public static final int MEMORY_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.MemoryInfo memory_;
    public boolean hasMemory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.MemoryInfo getMemory() {
      return memory_;
    }
    public mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder getMemoryOrBuilder() {
      return memory_;
    }
    
    // optional .mrtech.smarthome.rpc.InternalStorageInfo internal_storage = 3;
    public static final int INTERNAL_STORAGE_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.InternalStorageInfo internalStorage_;
    public boolean hasInternalStorage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.InternalStorageInfo getInternalStorage() {
      return internalStorage_;
    }
    public mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder getInternalStorageOrBuilder() {
      return internalStorage_;
    }
    
    private void initFields() {
      cpu_ = java.util.Collections.emptyList();
      memory_ = mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance();
      internalStorage_ = mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cpu_.size(); i++) {
        output.writeMessage(1, cpu_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(2, memory_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(3, internalStorage_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < cpu_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cpu_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, memory_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, internalStorage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.SystemInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.SystemInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.SystemInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_SystemInfo_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.SystemInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCpuFieldBuilder();
          getMemoryFieldBuilder();
          getInternalStorageFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (cpuBuilder_ == null) {
          cpu_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cpuBuilder_.clear();
        }
        if (memoryBuilder_ == null) {
          memory_ = mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance();
        } else {
          memoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (internalStorageBuilder_ == null) {
          internalStorage_ = mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance();
        } else {
          internalStorageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.SystemInfo.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.SystemInfo getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.SystemInfo.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.SystemInfo build() {
        mrtech.smarthome.rpc.Models.SystemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.SystemInfo buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.SystemInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.SystemInfo buildPartial() {
        mrtech.smarthome.rpc.Models.SystemInfo result = new mrtech.smarthome.rpc.Models.SystemInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cpuBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cpu_ = java.util.Collections.unmodifiableList(cpu_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cpu_ = cpu_;
        } else {
          result.cpu_ = cpuBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        if (memoryBuilder_ == null) {
          result.memory_ = memory_;
        } else {
          result.memory_ = memoryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        if (internalStorageBuilder_ == null) {
          result.internalStorage_ = internalStorage_;
        } else {
          result.internalStorage_ = internalStorageBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.SystemInfo) {
          return mergeFrom((mrtech.smarthome.rpc.Models.SystemInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.SystemInfo other) {
        if (other == mrtech.smarthome.rpc.Models.SystemInfo.getDefaultInstance()) return this;
        if (cpuBuilder_ == null) {
          if (!other.cpu_.isEmpty()) {
            if (cpu_.isEmpty()) {
              cpu_ = other.cpu_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCpuIsMutable();
              cpu_.addAll(other.cpu_);
            }
            onChanged();
          }
        } else {
          if (!other.cpu_.isEmpty()) {
            if (cpuBuilder_.isEmpty()) {
              cpuBuilder_.dispose();
              cpuBuilder_ = null;
              cpu_ = other.cpu_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cpuBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCpuFieldBuilder() : null;
            } else {
              cpuBuilder_.addAllMessages(other.cpu_);
            }
          }
        }
        if (other.hasMemory()) {
          mergeMemory(other.getMemory());
        }
        if (other.hasInternalStorage()) {
          mergeInternalStorage(other.getInternalStorage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              mrtech.smarthome.rpc.Models.CpuInfo.Builder subBuilder = mrtech.smarthome.rpc.Models.CpuInfo.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCpu(subBuilder.buildPartial());
              break;
            }
            case 18: {
              mrtech.smarthome.rpc.Models.MemoryInfo.Builder subBuilder = mrtech.smarthome.rpc.Models.MemoryInfo.newBuilder();
              if (hasMemory()) {
                subBuilder.mergeFrom(getMemory());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setMemory(subBuilder.buildPartial());
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder subBuilder = mrtech.smarthome.rpc.Models.InternalStorageInfo.newBuilder();
              if (hasInternalStorage()) {
                subBuilder.mergeFrom(getInternalStorage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInternalStorage(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .mrtech.smarthome.rpc.CpuInfo cpu = 1;
      private java.util.List<mrtech.smarthome.rpc.Models.CpuInfo> cpu_ =
        java.util.Collections.emptyList();
      private void ensureCpuIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cpu_ = new java.util.ArrayList<mrtech.smarthome.rpc.Models.CpuInfo>(cpu_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.CpuInfo, mrtech.smarthome.rpc.Models.CpuInfo.Builder, mrtech.smarthome.rpc.Models.CpuInfoOrBuilder> cpuBuilder_;
      
      public java.util.List<mrtech.smarthome.rpc.Models.CpuInfo> getCpuList() {
        if (cpuBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cpu_);
        } else {
          return cpuBuilder_.getMessageList();
        }
      }
      public int getCpuCount() {
        if (cpuBuilder_ == null) {
          return cpu_.size();
        } else {
          return cpuBuilder_.getCount();
        }
      }
      public mrtech.smarthome.rpc.Models.CpuInfo getCpu(int index) {
        if (cpuBuilder_ == null) {
          return cpu_.get(index);
        } else {
          return cpuBuilder_.getMessage(index);
        }
      }
      public Builder setCpu(
          int index, mrtech.smarthome.rpc.Models.CpuInfo value) {
        if (cpuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpuIsMutable();
          cpu_.set(index, value);
          onChanged();
        } else {
          cpuBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCpu(
          int index, mrtech.smarthome.rpc.Models.CpuInfo.Builder builderForValue) {
        if (cpuBuilder_ == null) {
          ensureCpuIsMutable();
          cpu_.set(index, builderForValue.build());
          onChanged();
        } else {
          cpuBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCpu(mrtech.smarthome.rpc.Models.CpuInfo value) {
        if (cpuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpuIsMutable();
          cpu_.add(value);
          onChanged();
        } else {
          cpuBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCpu(
          int index, mrtech.smarthome.rpc.Models.CpuInfo value) {
        if (cpuBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpuIsMutable();
          cpu_.add(index, value);
          onChanged();
        } else {
          cpuBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCpu(
          mrtech.smarthome.rpc.Models.CpuInfo.Builder builderForValue) {
        if (cpuBuilder_ == null) {
          ensureCpuIsMutable();
          cpu_.add(builderForValue.build());
          onChanged();
        } else {
          cpuBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCpu(
          int index, mrtech.smarthome.rpc.Models.CpuInfo.Builder builderForValue) {
        if (cpuBuilder_ == null) {
          ensureCpuIsMutable();
          cpu_.add(index, builderForValue.build());
          onChanged();
        } else {
          cpuBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCpu(
          java.lang.Iterable<? extends mrtech.smarthome.rpc.Models.CpuInfo> values) {
        if (cpuBuilder_ == null) {
          ensureCpuIsMutable();
          super.addAll(values, cpu_);
          onChanged();
        } else {
          cpuBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCpu() {
        if (cpuBuilder_ == null) {
          cpu_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cpuBuilder_.clear();
        }
        return this;
      }
      public Builder removeCpu(int index) {
        if (cpuBuilder_ == null) {
          ensureCpuIsMutable();
          cpu_.remove(index);
          onChanged();
        } else {
          cpuBuilder_.remove(index);
        }
        return this;
      }
      public mrtech.smarthome.rpc.Models.CpuInfo.Builder getCpuBuilder(
          int index) {
        return getCpuFieldBuilder().getBuilder(index);
      }
      public mrtech.smarthome.rpc.Models.CpuInfoOrBuilder getCpuOrBuilder(
          int index) {
        if (cpuBuilder_ == null) {
          return cpu_.get(index);  } else {
          return cpuBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends mrtech.smarthome.rpc.Models.CpuInfoOrBuilder> 
           getCpuOrBuilderList() {
        if (cpuBuilder_ != null) {
          return cpuBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cpu_);
        }
      }
      public mrtech.smarthome.rpc.Models.CpuInfo.Builder addCpuBuilder() {
        return getCpuFieldBuilder().addBuilder(
            mrtech.smarthome.rpc.Models.CpuInfo.getDefaultInstance());
      }
      public mrtech.smarthome.rpc.Models.CpuInfo.Builder addCpuBuilder(
          int index) {
        return getCpuFieldBuilder().addBuilder(
            index, mrtech.smarthome.rpc.Models.CpuInfo.getDefaultInstance());
      }
      public java.util.List<mrtech.smarthome.rpc.Models.CpuInfo.Builder> 
           getCpuBuilderList() {
        return getCpuFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          mrtech.smarthome.rpc.Models.CpuInfo, mrtech.smarthome.rpc.Models.CpuInfo.Builder, mrtech.smarthome.rpc.Models.CpuInfoOrBuilder> 
          getCpuFieldBuilder() {
        if (cpuBuilder_ == null) {
          cpuBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              mrtech.smarthome.rpc.Models.CpuInfo, mrtech.smarthome.rpc.Models.CpuInfo.Builder, mrtech.smarthome.rpc.Models.CpuInfoOrBuilder>(
                  cpu_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cpu_ = null;
        }
        return cpuBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.MemoryInfo memory = 2;
      private mrtech.smarthome.rpc.Models.MemoryInfo memory_ = mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.MemoryInfo, mrtech.smarthome.rpc.Models.MemoryInfo.Builder, mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder> memoryBuilder_;
      public boolean hasMemory() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.MemoryInfo getMemory() {
        if (memoryBuilder_ == null) {
          return memory_;
        } else {
          return memoryBuilder_.getMessage();
        }
      }
      public Builder setMemory(mrtech.smarthome.rpc.Models.MemoryInfo value) {
        if (memoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          memory_ = value;
          onChanged();
        } else {
          memoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setMemory(
          mrtech.smarthome.rpc.Models.MemoryInfo.Builder builderForValue) {
        if (memoryBuilder_ == null) {
          memory_ = builderForValue.build();
          onChanged();
        } else {
          memoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeMemory(mrtech.smarthome.rpc.Models.MemoryInfo value) {
        if (memoryBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              memory_ != mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance()) {
            memory_ =
              mrtech.smarthome.rpc.Models.MemoryInfo.newBuilder(memory_).mergeFrom(value).buildPartial();
          } else {
            memory_ = value;
          }
          onChanged();
        } else {
          memoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearMemory() {
        if (memoryBuilder_ == null) {
          memory_ = mrtech.smarthome.rpc.Models.MemoryInfo.getDefaultInstance();
          onChanged();
        } else {
          memoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public mrtech.smarthome.rpc.Models.MemoryInfo.Builder getMemoryBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getMemoryFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder getMemoryOrBuilder() {
        if (memoryBuilder_ != null) {
          return memoryBuilder_.getMessageOrBuilder();
        } else {
          return memory_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.MemoryInfo, mrtech.smarthome.rpc.Models.MemoryInfo.Builder, mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder> 
          getMemoryFieldBuilder() {
        if (memoryBuilder_ == null) {
          memoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.MemoryInfo, mrtech.smarthome.rpc.Models.MemoryInfo.Builder, mrtech.smarthome.rpc.Models.MemoryInfoOrBuilder>(
                  memory_,
                  getParentForChildren(),
                  isClean());
          memory_ = null;
        }
        return memoryBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.InternalStorageInfo internal_storage = 3;
      private mrtech.smarthome.rpc.Models.InternalStorageInfo internalStorage_ = mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.InternalStorageInfo, mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder, mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder> internalStorageBuilder_;
      public boolean hasInternalStorage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.InternalStorageInfo getInternalStorage() {
        if (internalStorageBuilder_ == null) {
          return internalStorage_;
        } else {
          return internalStorageBuilder_.getMessage();
        }
      }
      public Builder setInternalStorage(mrtech.smarthome.rpc.Models.InternalStorageInfo value) {
        if (internalStorageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          internalStorage_ = value;
          onChanged();
        } else {
          internalStorageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setInternalStorage(
          mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder builderForValue) {
        if (internalStorageBuilder_ == null) {
          internalStorage_ = builderForValue.build();
          onChanged();
        } else {
          internalStorageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeInternalStorage(mrtech.smarthome.rpc.Models.InternalStorageInfo value) {
        if (internalStorageBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              internalStorage_ != mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance()) {
            internalStorage_ =
              mrtech.smarthome.rpc.Models.InternalStorageInfo.newBuilder(internalStorage_).mergeFrom(value).buildPartial();
          } else {
            internalStorage_ = value;
          }
          onChanged();
        } else {
          internalStorageBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearInternalStorage() {
        if (internalStorageBuilder_ == null) {
          internalStorage_ = mrtech.smarthome.rpc.Models.InternalStorageInfo.getDefaultInstance();
          onChanged();
        } else {
          internalStorageBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder getInternalStorageBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getInternalStorageFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder getInternalStorageOrBuilder() {
        if (internalStorageBuilder_ != null) {
          return internalStorageBuilder_.getMessageOrBuilder();
        } else {
          return internalStorage_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.InternalStorageInfo, mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder, mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder> 
          getInternalStorageFieldBuilder() {
        if (internalStorageBuilder_ == null) {
          internalStorageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.InternalStorageInfo, mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder, mrtech.smarthome.rpc.Models.InternalStorageInfoOrBuilder>(
                  internalStorage_,
                  getParentForChildren(),
                  isClean());
          internalStorage_ = null;
        }
        return internalStorageBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.SystemInfo)
    }
    
    static {
      defaultInstance = new SystemInfo(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.SystemInfo)
  }
  
  public interface DeviceStatisticsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional uint32 zigbee_devices = 1;
    boolean hasZigbeeDevices();
    int getZigbeeDevices();
    
    // optional uint32 ias_zones = 2;
    boolean hasIasZones();
    int getIasZones();
    
    // optional uint32 cameras = 3;
    boolean hasCameras();
    int getCameras();
  }
  public static final class DeviceStatistics extends
      com.google.protobuf.GeneratedMessage
      implements DeviceStatisticsOrBuilder {
    // Use DeviceStatistics.newBuilder() to construct.
    private DeviceStatistics(Builder builder) {
      super(builder);
    }
    private DeviceStatistics(boolean noInit) {}
    
    private static final DeviceStatistics defaultInstance;
    public static DeviceStatistics getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeviceStatistics getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceStatistics_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceStatistics_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional uint32 zigbee_devices = 1;
    public static final int ZIGBEE_DEVICES_FIELD_NUMBER = 1;
    private int zigbeeDevices_;
    public boolean hasZigbeeDevices() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getZigbeeDevices() {
      return zigbeeDevices_;
    }
    
    // optional uint32 ias_zones = 2;
    public static final int IAS_ZONES_FIELD_NUMBER = 2;
    private int iasZones_;
    public boolean hasIasZones() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getIasZones() {
      return iasZones_;
    }
    
    // optional uint32 cameras = 3;
    public static final int CAMERAS_FIELD_NUMBER = 3;
    private int cameras_;
    public boolean hasCameras() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getCameras() {
      return cameras_;
    }
    
    private void initFields() {
      zigbeeDevices_ = 0;
      iasZones_ = 0;
      cameras_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, zigbeeDevices_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, iasZones_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, cameras_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, zigbeeDevices_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, iasZones_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cameras_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.DeviceStatistics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.DeviceStatistics prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.DeviceStatisticsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceStatistics_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_DeviceStatistics_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.DeviceStatistics.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        zigbeeDevices_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        iasZones_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cameras_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.DeviceStatistics.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.DeviceStatistics getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.DeviceStatistics.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.DeviceStatistics build() {
        mrtech.smarthome.rpc.Models.DeviceStatistics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.DeviceStatistics buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.DeviceStatistics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.DeviceStatistics buildPartial() {
        mrtech.smarthome.rpc.Models.DeviceStatistics result = new mrtech.smarthome.rpc.Models.DeviceStatistics(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.zigbeeDevices_ = zigbeeDevices_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iasZones_ = iasZones_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cameras_ = cameras_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.DeviceStatistics) {
          return mergeFrom((mrtech.smarthome.rpc.Models.DeviceStatistics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.DeviceStatistics other) {
        if (other == mrtech.smarthome.rpc.Models.DeviceStatistics.getDefaultInstance()) return this;
        if (other.hasZigbeeDevices()) {
          setZigbeeDevices(other.getZigbeeDevices());
        }
        if (other.hasIasZones()) {
          setIasZones(other.getIasZones());
        }
        if (other.hasCameras()) {
          setCameras(other.getCameras());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              zigbeeDevices_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              iasZones_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cameras_ = input.readUInt32();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint32 zigbee_devices = 1;
      private int zigbeeDevices_ ;
      public boolean hasZigbeeDevices() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getZigbeeDevices() {
        return zigbeeDevices_;
      }
      public Builder setZigbeeDevices(int value) {
        bitField0_ |= 0x00000001;
        zigbeeDevices_ = value;
        onChanged();
        return this;
      }
      public Builder clearZigbeeDevices() {
        bitField0_ = (bitField0_ & ~0x00000001);
        zigbeeDevices_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 ias_zones = 2;
      private int iasZones_ ;
      public boolean hasIasZones() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getIasZones() {
        return iasZones_;
      }
      public Builder setIasZones(int value) {
        bitField0_ |= 0x00000002;
        iasZones_ = value;
        onChanged();
        return this;
      }
      public Builder clearIasZones() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iasZones_ = 0;
        onChanged();
        return this;
      }
      
      // optional uint32 cameras = 3;
      private int cameras_ ;
      public boolean hasCameras() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCameras() {
        return cameras_;
      }
      public Builder setCameras(int value) {
        bitField0_ |= 0x00000004;
        cameras_ = value;
        onChanged();
        return this;
      }
      public Builder clearCameras() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cameras_ = 0;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.DeviceStatistics)
    }
    
    static {
      defaultInstance = new DeviceStatistics(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.DeviceStatistics)
  }
  
  public interface VpnConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .mrtech.smarthome.rpc.VpnType type = 1;
    boolean hasType();
    mrtech.smarthome.rpc.Models.VpnType getType();
    
    // optional .mrtech.smarthome.rpc.PptpConfig pptp = 2;
    boolean hasPptp();
    mrtech.smarthome.rpc.Models.PptpConfig getPptp();
    mrtech.smarthome.rpc.Models.PptpConfigOrBuilder getPptpOrBuilder();
    
    // optional .mrtech.smarthome.rpc.L2tpConfig l2tp = 3;
    boolean hasL2Tp();
    mrtech.smarthome.rpc.Models.L2tpConfig getL2Tp();
    mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder getL2TpOrBuilder();
  }
  public static final class VpnConfig extends
      com.google.protobuf.GeneratedMessage
      implements VpnConfigOrBuilder {
    // Use VpnConfig.newBuilder() to construct.
    private VpnConfig(Builder builder) {
      super(builder);
    }
    private VpnConfig(boolean noInit) {}
    
    private static final VpnConfig defaultInstance;
    public static VpnConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public VpnConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_VpnConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_VpnConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .mrtech.smarthome.rpc.VpnType type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private mrtech.smarthome.rpc.Models.VpnType type_;
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public mrtech.smarthome.rpc.Models.VpnType getType() {
      return type_;
    }
    
    // optional .mrtech.smarthome.rpc.PptpConfig pptp = 2;
    public static final int PPTP_FIELD_NUMBER = 2;
    private mrtech.smarthome.rpc.Models.PptpConfig pptp_;
    public boolean hasPptp() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public mrtech.smarthome.rpc.Models.PptpConfig getPptp() {
      return pptp_;
    }
    public mrtech.smarthome.rpc.Models.PptpConfigOrBuilder getPptpOrBuilder() {
      return pptp_;
    }
    
    // optional .mrtech.smarthome.rpc.L2tpConfig l2tp = 3;
    public static final int L2TP_FIELD_NUMBER = 3;
    private mrtech.smarthome.rpc.Models.L2tpConfig l2Tp_;
    public boolean hasL2Tp() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public mrtech.smarthome.rpc.Models.L2tpConfig getL2Tp() {
      return l2Tp_;
    }
    public mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder getL2TpOrBuilder() {
      return l2Tp_;
    }
    
    private void initFields() {
      type_ = mrtech.smarthome.rpc.Models.VpnType.VPN_TYPE_NONE;
      pptp_ = mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance();
      l2Tp_ = mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, pptp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, l2Tp_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, pptp_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, l2Tp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.VpnConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.VpnConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.VpnConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_VpnConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_VpnConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.VpnConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPptpFieldBuilder();
          getL2TpFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        type_ = mrtech.smarthome.rpc.Models.VpnType.VPN_TYPE_NONE;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (pptpBuilder_ == null) {
          pptp_ = mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance();
        } else {
          pptpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (l2TpBuilder_ == null) {
          l2Tp_ = mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance();
        } else {
          l2TpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.VpnConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.VpnConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.VpnConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.VpnConfig build() {
        mrtech.smarthome.rpc.Models.VpnConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.VpnConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.VpnConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.VpnConfig buildPartial() {
        mrtech.smarthome.rpc.Models.VpnConfig result = new mrtech.smarthome.rpc.Models.VpnConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (pptpBuilder_ == null) {
          result.pptp_ = pptp_;
        } else {
          result.pptp_ = pptpBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (l2TpBuilder_ == null) {
          result.l2Tp_ = l2Tp_;
        } else {
          result.l2Tp_ = l2TpBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.VpnConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.VpnConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.VpnConfig other) {
        if (other == mrtech.smarthome.rpc.Models.VpnConfig.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasPptp()) {
          mergePptp(other.getPptp());
        }
        if (other.hasL2Tp()) {
          mergeL2Tp(other.getL2Tp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              mrtech.smarthome.rpc.Models.VpnType value = mrtech.smarthome.rpc.Models.VpnType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              mrtech.smarthome.rpc.Models.PptpConfig.Builder subBuilder = mrtech.smarthome.rpc.Models.PptpConfig.newBuilder();
              if (hasPptp()) {
                subBuilder.mergeFrom(getPptp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPptp(subBuilder.buildPartial());
              break;
            }
            case 26: {
              mrtech.smarthome.rpc.Models.L2tpConfig.Builder subBuilder = mrtech.smarthome.rpc.Models.L2tpConfig.newBuilder();
              if (hasL2Tp()) {
                subBuilder.mergeFrom(getL2Tp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setL2Tp(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .mrtech.smarthome.rpc.VpnType type = 1;
      private mrtech.smarthome.rpc.Models.VpnType type_ = mrtech.smarthome.rpc.Models.VpnType.VPN_TYPE_NONE;
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public mrtech.smarthome.rpc.Models.VpnType getType() {
        return type_;
      }
      public Builder setType(mrtech.smarthome.rpc.Models.VpnType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = mrtech.smarthome.rpc.Models.VpnType.VPN_TYPE_NONE;
        onChanged();
        return this;
      }
      
      // optional .mrtech.smarthome.rpc.PptpConfig pptp = 2;
      private mrtech.smarthome.rpc.Models.PptpConfig pptp_ = mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.PptpConfig, mrtech.smarthome.rpc.Models.PptpConfig.Builder, mrtech.smarthome.rpc.Models.PptpConfigOrBuilder> pptpBuilder_;
      public boolean hasPptp() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public mrtech.smarthome.rpc.Models.PptpConfig getPptp() {
        if (pptpBuilder_ == null) {
          return pptp_;
        } else {
          return pptpBuilder_.getMessage();
        }
      }
      public Builder setPptp(mrtech.smarthome.rpc.Models.PptpConfig value) {
        if (pptpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pptp_ = value;
          onChanged();
        } else {
          pptpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setPptp(
          mrtech.smarthome.rpc.Models.PptpConfig.Builder builderForValue) {
        if (pptpBuilder_ == null) {
          pptp_ = builderForValue.build();
          onChanged();
        } else {
          pptpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergePptp(mrtech.smarthome.rpc.Models.PptpConfig value) {
        if (pptpBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              pptp_ != mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance()) {
            pptp_ =
              mrtech.smarthome.rpc.Models.PptpConfig.newBuilder(pptp_).mergeFrom(value).buildPartial();
          } else {
            pptp_ = value;
          }
          onChanged();
        } else {
          pptpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearPptp() {
        if (pptpBuilder_ == null) {
          pptp_ = mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance();
          onChanged();
        } else {
          pptpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public mrtech.smarthome.rpc.Models.PptpConfig.Builder getPptpBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPptpFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.PptpConfigOrBuilder getPptpOrBuilder() {
        if (pptpBuilder_ != null) {
          return pptpBuilder_.getMessageOrBuilder();
        } else {
          return pptp_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.PptpConfig, mrtech.smarthome.rpc.Models.PptpConfig.Builder, mrtech.smarthome.rpc.Models.PptpConfigOrBuilder> 
          getPptpFieldBuilder() {
        if (pptpBuilder_ == null) {
          pptpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.PptpConfig, mrtech.smarthome.rpc.Models.PptpConfig.Builder, mrtech.smarthome.rpc.Models.PptpConfigOrBuilder>(
                  pptp_,
                  getParentForChildren(),
                  isClean());
          pptp_ = null;
        }
        return pptpBuilder_;
      }
      
      // optional .mrtech.smarthome.rpc.L2tpConfig l2tp = 3;
      private mrtech.smarthome.rpc.Models.L2tpConfig l2Tp_ = mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.L2tpConfig, mrtech.smarthome.rpc.Models.L2tpConfig.Builder, mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder> l2TpBuilder_;
      public boolean hasL2Tp() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public mrtech.smarthome.rpc.Models.L2tpConfig getL2Tp() {
        if (l2TpBuilder_ == null) {
          return l2Tp_;
        } else {
          return l2TpBuilder_.getMessage();
        }
      }
      public Builder setL2Tp(mrtech.smarthome.rpc.Models.L2tpConfig value) {
        if (l2TpBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          l2Tp_ = value;
          onChanged();
        } else {
          l2TpBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setL2Tp(
          mrtech.smarthome.rpc.Models.L2tpConfig.Builder builderForValue) {
        if (l2TpBuilder_ == null) {
          l2Tp_ = builderForValue.build();
          onChanged();
        } else {
          l2TpBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeL2Tp(mrtech.smarthome.rpc.Models.L2tpConfig value) {
        if (l2TpBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              l2Tp_ != mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance()) {
            l2Tp_ =
              mrtech.smarthome.rpc.Models.L2tpConfig.newBuilder(l2Tp_).mergeFrom(value).buildPartial();
          } else {
            l2Tp_ = value;
          }
          onChanged();
        } else {
          l2TpBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearL2Tp() {
        if (l2TpBuilder_ == null) {
          l2Tp_ = mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance();
          onChanged();
        } else {
          l2TpBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public mrtech.smarthome.rpc.Models.L2tpConfig.Builder getL2TpBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getL2TpFieldBuilder().getBuilder();
      }
      public mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder getL2TpOrBuilder() {
        if (l2TpBuilder_ != null) {
          return l2TpBuilder_.getMessageOrBuilder();
        } else {
          return l2Tp_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          mrtech.smarthome.rpc.Models.L2tpConfig, mrtech.smarthome.rpc.Models.L2tpConfig.Builder, mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder> 
          getL2TpFieldBuilder() {
        if (l2TpBuilder_ == null) {
          l2TpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              mrtech.smarthome.rpc.Models.L2tpConfig, mrtech.smarthome.rpc.Models.L2tpConfig.Builder, mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder>(
                  l2Tp_,
                  getParentForChildren(),
                  isClean());
          l2Tp_ = null;
        }
        return l2TpBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.VpnConfig)
    }
    
    static {
      defaultInstance = new VpnConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.VpnConfig)
  }
  
  public interface PptpConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string account = 1;
    boolean hasAccount();
    String getAccount();
    
    // optional string passphrase = 2;
    boolean hasPassphrase();
    String getPassphrase();
    
    // optional string server_host = 3;
    boolean hasServerHost();
    String getServerHost();
    
    // optional bool enable_mppe = 4;
    boolean hasEnableMppe();
    boolean getEnableMppe();
    
    // optional string route = 5;
    boolean hasRoute();
    String getRoute();
  }
  public static final class PptpConfig extends
      com.google.protobuf.GeneratedMessage
      implements PptpConfigOrBuilder {
    // Use PptpConfig.newBuilder() to construct.
    private PptpConfig(Builder builder) {
      super(builder);
    }
    private PptpConfig(boolean noInit) {}
    
    private static final PptpConfig defaultInstance;
    public static PptpConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public PptpConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PptpConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PptpConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string account = 1;
    public static final int ACCOUNT_FIELD_NUMBER = 1;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string passphrase = 2;
    public static final int PASSPHRASE_FIELD_NUMBER = 2;
    private java.lang.Object passphrase_;
    public boolean hasPassphrase() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPassphrase() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passphrase_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPassphraseBytes() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passphrase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string server_host = 3;
    public static final int SERVER_HOST_FIELD_NUMBER = 3;
    private java.lang.Object serverHost_;
    public boolean hasServerHost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getServerHost() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serverHost_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getServerHostBytes() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serverHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool enable_mppe = 4;
    public static final int ENABLE_MPPE_FIELD_NUMBER = 4;
    private boolean enableMppe_;
    public boolean hasEnableMppe() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getEnableMppe() {
      return enableMppe_;
    }
    
    // optional string route = 5;
    public static final int ROUTE_FIELD_NUMBER = 5;
    private java.lang.Object route_;
    public boolean hasRoute() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getRoute() {
      java.lang.Object ref = route_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          route_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRouteBytes() {
      java.lang.Object ref = route_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        route_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      account_ = "";
      passphrase_ = "";
      serverHost_ = "";
      enableMppe_ = false;
      route_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enableMppe_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getRouteBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableMppe_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getRouteBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.PptpConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.PptpConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.PptpConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PptpConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_PptpConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.PptpConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        passphrase_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        serverHost_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        enableMppe_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        route_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.PptpConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.PptpConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.PptpConfig build() {
        mrtech.smarthome.rpc.Models.PptpConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.PptpConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.PptpConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.PptpConfig buildPartial() {
        mrtech.smarthome.rpc.Models.PptpConfig result = new mrtech.smarthome.rpc.Models.PptpConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.passphrase_ = passphrase_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverHost_ = serverHost_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enableMppe_ = enableMppe_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.route_ = route_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.PptpConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.PptpConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.PptpConfig other) {
        if (other == mrtech.smarthome.rpc.Models.PptpConfig.getDefaultInstance()) return this;
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasPassphrase()) {
          setPassphrase(other.getPassphrase());
        }
        if (other.hasServerHost()) {
          setServerHost(other.getServerHost());
        }
        if (other.hasEnableMppe()) {
          setEnableMppe(other.getEnableMppe());
        }
        if (other.hasRoute()) {
          setRoute(other.getRoute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              account_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              passphrase_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              serverHost_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enableMppe_ = input.readBool();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              route_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string account = 1;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
      }
      
      // optional string passphrase = 2;
      private java.lang.Object passphrase_ = "";
      public boolean hasPassphrase() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPassphrase() {
        java.lang.Object ref = passphrase_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passphrase_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassphrase(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passphrase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphrase() {
        bitField0_ = (bitField0_ & ~0x00000002);
        passphrase_ = getDefaultInstance().getPassphrase();
        onChanged();
        return this;
      }
      void setPassphrase(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        passphrase_ = value;
        onChanged();
      }
      
      // optional string server_host = 3;
      private java.lang.Object serverHost_ = "";
      public boolean hasServerHost() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getServerHost() {
        java.lang.Object ref = serverHost_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serverHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setServerHost(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serverHost_ = value;
        onChanged();
        return this;
      }
      public Builder clearServerHost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverHost_ = getDefaultInstance().getServerHost();
        onChanged();
        return this;
      }
      void setServerHost(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        serverHost_ = value;
        onChanged();
      }
      
      // optional bool enable_mppe = 4;
      private boolean enableMppe_ ;
      public boolean hasEnableMppe() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getEnableMppe() {
        return enableMppe_;
      }
      public Builder setEnableMppe(boolean value) {
        bitField0_ |= 0x00000008;
        enableMppe_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableMppe() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enableMppe_ = false;
        onChanged();
        return this;
      }
      
      // optional string route = 5;
      private java.lang.Object route_ = "";
      public boolean hasRoute() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getRoute() {
        java.lang.Object ref = route_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          route_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRoute(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        route_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoute() {
        bitField0_ = (bitField0_ & ~0x00000010);
        route_ = getDefaultInstance().getRoute();
        onChanged();
        return this;
      }
      void setRoute(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        route_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.PptpConfig)
    }
    
    static {
      defaultInstance = new PptpConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.PptpConfig)
  }
  
  public interface L2tpConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string account = 1;
    boolean hasAccount();
    String getAccount();
    
    // optional string passphrase = 2;
    boolean hasPassphrase();
    String getPassphrase();
    
    // optional string server_host = 3;
    boolean hasServerHost();
    String getServerHost();
    
    // optional bool enable_ipsec = 4;
    boolean hasEnableIpsec();
    boolean getEnableIpsec();
    
    // optional string ipsec_psk = 5;
    boolean hasIpsecPsk();
    String getIpsecPsk();
    
    // optional string route = 6;
    boolean hasRoute();
    String getRoute();
  }
  public static final class L2tpConfig extends
      com.google.protobuf.GeneratedMessage
      implements L2tpConfigOrBuilder {
    // Use L2tpConfig.newBuilder() to construct.
    private L2tpConfig(Builder builder) {
      super(builder);
    }
    private L2tpConfig(boolean noInit) {}
    
    private static final L2tpConfig defaultInstance;
    public static L2tpConfig getDefaultInstance() {
      return defaultInstance;
    }
    
    public L2tpConfig getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_L2tpConfig_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_L2tpConfig_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string account = 1;
    public static final int ACCOUNT_FIELD_NUMBER = 1;
    private java.lang.Object account_;
    public boolean hasAccount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getAccount() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          account_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getAccountBytes() {
      java.lang.Object ref = account_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        account_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string passphrase = 2;
    public static final int PASSPHRASE_FIELD_NUMBER = 2;
    private java.lang.Object passphrase_;
    public boolean hasPassphrase() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getPassphrase() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          passphrase_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getPassphraseBytes() {
      java.lang.Object ref = passphrase_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        passphrase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string server_host = 3;
    public static final int SERVER_HOST_FIELD_NUMBER = 3;
    private java.lang.Object serverHost_;
    public boolean hasServerHost() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getServerHost() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          serverHost_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getServerHostBytes() {
      java.lang.Object ref = serverHost_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        serverHost_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional bool enable_ipsec = 4;
    public static final int ENABLE_IPSEC_FIELD_NUMBER = 4;
    private boolean enableIpsec_;
    public boolean hasEnableIpsec() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getEnableIpsec() {
      return enableIpsec_;
    }
    
    // optional string ipsec_psk = 5;
    public static final int IPSEC_PSK_FIELD_NUMBER = 5;
    private java.lang.Object ipsecPsk_;
    public boolean hasIpsecPsk() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getIpsecPsk() {
      java.lang.Object ref = ipsecPsk_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          ipsecPsk_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getIpsecPskBytes() {
      java.lang.Object ref = ipsecPsk_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        ipsecPsk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string route = 6;
    public static final int ROUTE_FIELD_NUMBER = 6;
    private java.lang.Object route_;
    public boolean hasRoute() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getRoute() {
      java.lang.Object ref = route_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          route_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getRouteBytes() {
      java.lang.Object ref = route_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        route_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      account_ = "";
      passphrase_ = "";
      serverHost_ = "";
      enableIpsec_ = false;
      ipsecPsk_ = "";
      route_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, enableIpsec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIpsecPskBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getRouteBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getAccountBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPassphraseBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getServerHostBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, enableIpsec_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIpsecPskBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getRouteBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static mrtech.smarthome.rpc.Models.L2tpConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(mrtech.smarthome.rpc.Models.L2tpConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements mrtech.smarthome.rpc.Models.L2tpConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_L2tpConfig_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return mrtech.smarthome.rpc.Models.internal_static_mrtech_smarthome_rpc_L2tpConfig_fieldAccessorTable;
      }
      
      // Construct using mrtech.smarthome.rpc.Models.L2tpConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        account_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        passphrase_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        serverHost_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        enableIpsec_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        ipsecPsk_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        route_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return mrtech.smarthome.rpc.Models.L2tpConfig.getDescriptor();
      }
      
      public mrtech.smarthome.rpc.Models.L2tpConfig getDefaultInstanceForType() {
        return mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance();
      }
      
      public mrtech.smarthome.rpc.Models.L2tpConfig build() {
        mrtech.smarthome.rpc.Models.L2tpConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private mrtech.smarthome.rpc.Models.L2tpConfig buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        mrtech.smarthome.rpc.Models.L2tpConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public mrtech.smarthome.rpc.Models.L2tpConfig buildPartial() {
        mrtech.smarthome.rpc.Models.L2tpConfig result = new mrtech.smarthome.rpc.Models.L2tpConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.account_ = account_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.passphrase_ = passphrase_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.serverHost_ = serverHost_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.enableIpsec_ = enableIpsec_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ipsecPsk_ = ipsecPsk_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.route_ = route_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof mrtech.smarthome.rpc.Models.L2tpConfig) {
          return mergeFrom((mrtech.smarthome.rpc.Models.L2tpConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(mrtech.smarthome.rpc.Models.L2tpConfig other) {
        if (other == mrtech.smarthome.rpc.Models.L2tpConfig.getDefaultInstance()) return this;
        if (other.hasAccount()) {
          setAccount(other.getAccount());
        }
        if (other.hasPassphrase()) {
          setPassphrase(other.getPassphrase());
        }
        if (other.hasServerHost()) {
          setServerHost(other.getServerHost());
        }
        if (other.hasEnableIpsec()) {
          setEnableIpsec(other.getEnableIpsec());
        }
        if (other.hasIpsecPsk()) {
          setIpsecPsk(other.getIpsecPsk());
        }
        if (other.hasRoute()) {
          setRoute(other.getRoute());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              account_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              passphrase_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              serverHost_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              enableIpsec_ = input.readBool();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              ipsecPsk_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              route_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string account = 1;
      private java.lang.Object account_ = "";
      public boolean hasAccount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getAccount() {
        java.lang.Object ref = account_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          account_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setAccount(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
        return this;
      }
      public Builder clearAccount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        account_ = getDefaultInstance().getAccount();
        onChanged();
        return this;
      }
      void setAccount(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        account_ = value;
        onChanged();
      }
      
      // optional string passphrase = 2;
      private java.lang.Object passphrase_ = "";
      public boolean hasPassphrase() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getPassphrase() {
        java.lang.Object ref = passphrase_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          passphrase_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setPassphrase(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        passphrase_ = value;
        onChanged();
        return this;
      }
      public Builder clearPassphrase() {
        bitField0_ = (bitField0_ & ~0x00000002);
        passphrase_ = getDefaultInstance().getPassphrase();
        onChanged();
        return this;
      }
      void setPassphrase(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        passphrase_ = value;
        onChanged();
      }
      
      // optional string server_host = 3;
      private java.lang.Object serverHost_ = "";
      public boolean hasServerHost() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getServerHost() {
        java.lang.Object ref = serverHost_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          serverHost_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setServerHost(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        serverHost_ = value;
        onChanged();
        return this;
      }
      public Builder clearServerHost() {
        bitField0_ = (bitField0_ & ~0x00000004);
        serverHost_ = getDefaultInstance().getServerHost();
        onChanged();
        return this;
      }
      void setServerHost(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        serverHost_ = value;
        onChanged();
      }
      
      // optional bool enable_ipsec = 4;
      private boolean enableIpsec_ ;
      public boolean hasEnableIpsec() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getEnableIpsec() {
        return enableIpsec_;
      }
      public Builder setEnableIpsec(boolean value) {
        bitField0_ |= 0x00000008;
        enableIpsec_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnableIpsec() {
        bitField0_ = (bitField0_ & ~0x00000008);
        enableIpsec_ = false;
        onChanged();
        return this;
      }
      
      // optional string ipsec_psk = 5;
      private java.lang.Object ipsecPsk_ = "";
      public boolean hasIpsecPsk() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getIpsecPsk() {
        java.lang.Object ref = ipsecPsk_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          ipsecPsk_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setIpsecPsk(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        ipsecPsk_ = value;
        onChanged();
        return this;
      }
      public Builder clearIpsecPsk() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ipsecPsk_ = getDefaultInstance().getIpsecPsk();
        onChanged();
        return this;
      }
      void setIpsecPsk(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        ipsecPsk_ = value;
        onChanged();
      }
      
      // optional string route = 6;
      private java.lang.Object route_ = "";
      public boolean hasRoute() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getRoute() {
        java.lang.Object ref = route_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          route_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setRoute(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        route_ = value;
        onChanged();
        return this;
      }
      public Builder clearRoute() {
        bitField0_ = (bitField0_ & ~0x00000020);
        route_ = getDefaultInstance().getRoute();
        onChanged();
        return this;
      }
      void setRoute(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        route_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:mrtech.smarthome.rpc.L2tpConfig)
    }
    
    static {
      defaultInstance = new L2tpConfig(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:mrtech.smarthome.rpc.L2tpConfig)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SystemConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SystemConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_DhcpReserved_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_DhcpReserved_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_DnsRecord_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_DnsRecord_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_EthernetConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_EthernetConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SystemLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SystemLog_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SystemLogQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SystemLogQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_EthernetInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_EthernetInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_WlanInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_WlanInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_BatteryInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_BatteryInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_MobileInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_MobileInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_EncryptionMode_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_EncryptionMode_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_WlanAccessPoint_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_WlanAccessPoint_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_PhoneNumber_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_PhoneNumber_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_AccountQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_AccountQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Account_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Account_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Device_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_ZigBeeDevice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_ZigBeeDevice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_OnOffCluster_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_OnOffCluster_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_IasZone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_IasZone_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CieConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CieConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_DeviceQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_DeviceQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_ZoneQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_ZoneQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Timeline_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Timeline_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraDevice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraDevice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraAlarm_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraAlarm_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraTime_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraNetwork_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraNetwork_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraWlan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraWlan_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CameraWifiAp_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CameraWifiAp_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_TimelineQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_TimelineQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_ProductInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_ProductInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Component_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Component_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_OtaStatus_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_OtaStatus_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Group_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Group_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_GroupQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_GroupQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Scene_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Scene_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Action_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Action_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SceneQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SceneQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_PlanQuery_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_PlanQuery_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_Plan_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_Plan_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_WanConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_WanConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_WlanConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_WlanConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_GuestWlanConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_GuestWlanConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SambaConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SambaConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_NetworkDevice_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_NetworkDevice_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_BandwidthTestResult_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_BandwidthTestResult_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_HddInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_HddInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_PortFilter_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_PortFilter_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_PortForward_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_PortForward_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_NetworkInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_NetworkInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_QosConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_QosConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_QosRule_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_QosRule_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_GroupSummary_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_GroupSummary_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_CpuInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_CpuInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_MemoryInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_MemoryInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_InternalStorageInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_InternalStorageInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_SystemInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_SystemInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_DeviceStatistics_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_DeviceStatistics_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_VpnConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_VpnConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_PptpConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_PptpConfig_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_mrtech_smarthome_rpc_L2tpConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_mrtech_smarthome_rpc_L2tpConfig_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014models.proto\022\024mrtech.smarthome.rpc\"\305\001\n" +
      "\023SystemConfiguration\022\016\n\006locale\030\001 \001(\t\022\020\n\010" +
      "timezone\030\002 \001(\t\022\023\n\013ntp_enabled\030\003 \001(\010\022\026\n\016a" +
      "dmin_password\030\004 \001(\t\022\023\n\013device_name\030\005 \001(\t" +
      "\022\014\n\004time\030\006 \001(\003\022\024\n\014netbios_name\030\007 \001(\t\022\021\n\t" +
      "workgroup\030\010 \001(\t\022\023\n\013auto_update\030\t \001(\010\",\n\014" +
      "DhcpReserved\022\017\n\007address\030\001 \001(\t\022\013\n\003mac\030\002 \001" +
      "(\t\",\n\tDnsRecord\022\016\n\006domain\030\001 \001(\t\022\017\n\007addre" +
      "ss\030\002 \001(\t\"\307\002\n\025EthernetConfiguration\022\017\n\007ad" +
      "dress\030\001 \001(\t\022\023\n\013subnet_mask\030\002 \001(\t\022\017\n\007gate",
      "way\030\003 \001(\t\022\024\n\014dhcp_enabled\030\004 \001(\010\022\022\n\ndhcp_" +
      "start\030\005 \001(\t\022\020\n\010dhcp_end\030\006 \001(\t\0229\n\rdhcp_re" +
      "served\030\007 \003(\0132\".mrtech.smarthome.rpc.Dhcp" +
      "Reserved\022\031\n\021local_dns_enabled\030\010 \001(\010\022\023\n\013p" +
      "rimary_dns\030\t \001(\t\022\025\n\rsecondary_dns\030\n \001(\t\022" +
      "9\n\020local_dns_record\030\013 \003(\0132\037.mrtech.smart" +
      "home.rpc.DnsRecord\"\226\001\n\tSystemLog\022\n\n\002id\030\001" +
      " \001(\005\022\021\n\ttimestamp\030\002 \001(\003\022\021\n\tthread_id\030\003 \001" +
      "(\005\022\017\n\007channel\030\004 \001(\t\0225\n\010severity\030\005 \001(\0162#." +
      "mrtech.smarthome.rpc.SeverityLevel\022\017\n\007me",
      "ssage\030\006 \001(\t\"\250\001\n\016SystemLogQuery\022\r\n\005since\030" +
      "\001 \001(\003\022\r\n\005until\030\002 \001(\003\022\017\n\007channel\030\003 \001(\t\022\017\n" +
      "\007message\030\004 \001(\t\0225\n\010severity\030\005 \001(\0162#.mrtec" +
      "h.smarthome.rpc.SeverityLevel\022\014\n\004page\030\006 " +
      "\001(\005\022\021\n\tpage_size\030\007 \001(\005\"\"\n\014EthernetInfo\022\022" +
      "\n\nip_address\030\001 \001(\t\"i\n\010WlanInfo\022\r\n\005essid\030" +
      "\001 \001(\t\022\017\n\007address\030\002 \001(\t\022=\n\017encryption_mod" +
      "e\030\003 \003(\0132$.mrtech.smarthome.rpc.Encryptio" +
      "nMode\"U\n\013BatteryInfo\022\021\n\tremaining\030\001 \001(\002\022" +
      "3\n\006status\030\002 \001(\0162#.mrtech.smarthome.rpc.B",
      "atteryStatus\"\211\001\n\021MobileNetworkInfo\0228\n\010su" +
      "b_mode\030\001 \001(\0162&.mrtech.smarthome.rpc.SubO" +
      "perationMode\022\014\n\004rssi\030\002 \001(\005\022\022\n\nip_address" +
      "\030\003 \001(\t\022\013\n\003mcc\030\004 \001(\005\022\013\n\003mnc\030\005 \001(\005\"\227\003\n\nMob" +
      "ileInfo\0223\n\006status\030\001 \001(\0162#.mrtech.smartho" +
      "me.rpc.ServiceStatus\0223\n\006domain\030\002 \001(\0162#.m" +
      "rtech.smarthome.rpc.ServiceDomain\022\022\n\nis_" +
      "roaming\030\003 \001(\010\0221\n\004mode\030\004 \001(\0162#.mrtech.sma" +
      "rthome.rpc.OperationMode\0221\n\tsim_state\030\005 " +
      "\001(\0162\036.mrtech.smarthome.rpc.SimState\0228\n\010s",
      "ub_mode\030\006 \001(\0162&.mrtech.smarthome.rpc.Sub" +
      "OperationMode\022\014\n\004imei\030\007 \001(\t\022\014\n\004rssi\030\010 \001(" +
      "\005\022\013\n\003mcc\030\t \001(\005\022\013\n\003mnc\030\n \001(\005\022\032\n\022is_modem_" +
      "installed\030\013 \001(\010\022\031\n\021is_data_connected\030\014 \001" +
      "(\010\"\207\001\n\016EncryptionMode\0221\n\007version\030\001 \001(\0162 " +
      ".mrtech.smarthome.rpc.WpaVersion\022B\n\025auth" +
      "entication_suites\030\002 \001(\0162#.mrtech.smartho" +
      "me.rpc.KeyManagement\"\362\002\n\017WlanAccessPoint" +
      "\022\n\n\002id\030\001 \001(\005\022\017\n\007channel\030\002 \001(\005\022\r\n\005essid\030\003" +
      " \001(\t\022\017\n\007quality\030\004 \001(\002\022\024\n\014signal_level\030\005 ",
      "\001(\005\022\023\n\013noise_level\030\006 \001(\005\022\023\n\013mac_address\030" +
      "\007 \001(\t\0220\n\004mode\030\010 \001(\0162\".mrtech.smarthome.r" +
      "pc.WirelessMode\022=\n\017encryption_mode\030\t \003(\013" +
      "2$.mrtech.smarthome.rpc.EncryptionMode\022\020" +
      "\n\010password\030\n \001(\t\022\026\n\016encryption_key\030\013 \001(\010" +
      "\022G\n\022wlan_configuration\030\014 \001(\0132+.mrtech.sm" +
      "arthome.rpc.EthernetConfiguration\"^\n\013Pho" +
      "neNumber\022\n\n\002id\030\001 \001(\005\022\016\n\006number\030\002 \001(\t\0223\n\004" +
      "type\030\003 \001(\0162%.mrtech.smarthome.rpc.PhoneN" +
      "umberType\"\323\001\n\021MobilePhoneConfig\0228\n\013event",
      "_level\030\001 \001(\0162#.mrtech.smarthome.rpc.Time" +
      "lineLevel\022\021\n\tallow_sms\030\002 \001(\010\022\025\n\rallow_di" +
      "aling\030\003 \001(\010\022\022\n\nallow_data\030\004 \001(\010\0222\n\007numbe" +
      "rs\030\005 \003(\0132!.mrtech.smarthome.rpc.PhoneNum" +
      "ber\022\022\n\nenable_nat\030\006 \001(\010\"=\n\014AccountQuery\022" +
      "\014\n\004page\030\001 \001(\005\022\021\n\tpage_size\030\002 \001(\005\022\014\n\004name" +
      "\030\003 \001(\t\"{\n\007Account\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 " +
      "\001(\t\022\017\n\007api_key\030\003 \001(\t\022\025\n\rlast_activity\030\004 " +
      "\001(\005\022\022\n\npassphrase\030\005 \001(\t\022\032\n\022passphrase_no" +
      "t_set\030\006 \001(\010\"\234\001\n\006Device\022\n\n\002id\030\001 \001(\005\022.\n\004ty",
      "pe\030\002 \001(\0162 .mrtech.smarthome.rpc.DeviceTy" +
      "pe\022\r\n\005alias\030\003 \001(\t\022\020\n\010group_id\030\004 \001(\005\022*\n\005g" +
      "roup\030\005 \001(\0132\033.mrtech.smarthome.rpc.Group*" +
      "\t\010\200\002\020\200\200\200\200\002\"\215\004\n\014ZigBeeDevice\022\n\n\002id\030\001 \001(\005\022" +
      "\017\n\007address\030\002 \001(\005\022\023\n\013mac_address\030\003 \001(\004\022\024\n" +
      "\014link_quality\030\004 \001(\002\022\020\n\010endpoint\030\005 \001(\005\0221\n" +
      "\tdevice_id\030\006 \001(\0162\036.mrtech.smarthome.rpc." +
      "DeviceId\022\023\n\013zcl_version\030\007 \001(\005\022\033\n\023applica" +
      "tion_version\030\010 \001(\005\022\025\n\rstack_version\030\t \001(" +
      "\005\022\030\n\020hardware_version\030\n \001(\005\022\031\n\021manufactu",
      "rer_name\030\013 \001(\t\022\030\n\020model_identifier\030\014 \001(\t" +
      "\022\021\n\tdate_code\030\r \001(\t\0227\n\014power_source\030\016 \001(" +
      "\0162!.mrtech.smarthome.rpc.PowerSource\022\036\n\026" +
      "secondary_power_source\030\017 \001(\010\022\016\n\006online\030\020" +
      " \001(\010*\t\010\200\002\020\200\200\200\200\0022Q\n\006detail\022\034.mrtech.smart" +
      "home.rpc.Device\030\200\002 \001(\0132\".mrtech.smarthom" +
      "e.rpc.ZigBeeDevice\"w\n\014OnOffCluster\022\r\n\005st" +
      "ate\030\001 \001(\0102X\n\006detail\022\".mrtech.smarthome.r" +
      "pc.ZigBeeDevice\030\206\200\004 \001(\0132\".mrtech.smartho" +
      "me.rpc.OnOffCluster\"\367\002\n\034ElectricalMeasur",
      "ementCluster\022?\n\020measurement_type\030\001 \001(\0162%" +
      ".mrtech.smarthome.rpc.MeasurementType\022\021\n" +
      "\tfrequency\030\002 \001(\005\022\023\n\013rms_voltage\030\003 \001(\001\022\023\n" +
      "\013rms_current\030\004 \001(\001\022\024\n\014active_power\030\005 \001(\001" +
      "\022\026\n\016reactive_power\030\006 \001(\005\022\026\n\016apparent_pow" +
      "er\030\007 \001(\005\022\024\n\014power_factor\030\010 \001(\005\022\023\n\013overcu" +
      "rrent\030\t \001(\0102h\n\006detail\022\".mrtech.smarthome" +
      ".rpc.ZigBeeDevice\030\204\226\004 \001(\01322.mrtech.smart" +
      "home.rpc.ElectricalMeasurementCluster\"\322\001" +
      "\n\025SimpleMeteringCluster\022#\n\033current_summa",
      "tion_delivered\030\001 \001(\001\0221\n\004unit\030\002 \001(\0162#.mrt" +
      "ech.smarthome.rpc.UnitOfMeasure2a\n\006detai" +
      "l\022\".mrtech.smarthome.rpc.ZigBeeDevice\030\202\216" +
      "\004 \001(\0132+.mrtech.smarthome.rpc.SimpleMeter" +
      "ingCluster\"\242\001\n\035TemperatureMeasurementClu" +
      "ster\022\026\n\016measured_value\030\001 \001(\0012i\n\006detail\022\"" +
      ".mrtech.smarthome.rpc.ZigBeeDevice\030\202\210\004 \001" +
      "(\01323.mrtech.smarthome.rpc.TemperatureMea" +
      "surementCluster\"\336\003\n\007IasZone\022\n\n\002id\030\001 \001(\005\022" +
      "\021\n\tdevice_id\030\002 \001(\005\022,\n\006device\030\003 \001(\0132\034.mrt",
      "ech.smarthome.rpc.Device\022,\n\004type\030\004 \001(\0162\036" +
      ".mrtech.smarthome.rpc.ZoneType\022\025\n\rprimar" +
      "y_alarm\030\005 \001(\010\022\027\n\017secondary_alarm\030\006 \001(\010\022\016" +
      "\n\006tamper\030\007 \001(\010\022\023\n\013low_battery\030\010 \001(\010\022\032\n\022s" +
      "upervision_report\030\t \001(\010\022\026\n\016restore_repor" +
      "t\030\n \001(\010\022\017\n\007trouble\030\013 \001(\010\022\023\n\013mains_fault\030" +
      "\014 \001(\010\022\021\n\ttest_mode\030\r \001(\010\022\026\n\016battery_defe" +
      "ct\030\016 \001(\010\022\"\n\032lack_of_supervision_report\030\017" +
      " \001(\010\022\025\n\rlast_activity\030\020 \001(\005\022\020\n\010bypassed\030" +
      "\021 \001(\010\0221\n\tarm_group\030\022 \001(\0162\036.mrtech.smarth",
      "ome.rpc.ArmGroup\"\264\001\n\020CieConfiguration\022/\n" +
      "\010arm_mode\030\001 \001(\0162\035.mrtech.smarthome.rpc.A" +
      "rmMode\022\033\n\023supervision_timeout\030\002 \001(\005\022\027\n\017r" +
      "estore_timeout\030\003 \001(\005\022\023\n\013entry_delay\030\004 \001(" +
      "\005\022\022\n\nexit_delay\030\005 \001(\005\022\020\n\010passcode\030\006 \001(\t\"" +
      "\314\001\n\013DeviceQuery\022.\n\004type\030\001 \001(\0162 .mrtech.s" +
      "marthome.rpc.DeviceType\022\r\n\005alias\030\002 \001(\t\022\027" +
      "\n\017filter_by_group\030\003 \001(\010\022\020\n\010group_id\030\004 \001(" +
      "\005\022\014\n\004page\030\005 \001(\005\022\021\n\tpage_size\030\006 \001(\005\0222\n\nde" +
      "vice_ids\030\007 \003(\0162\036.mrtech.smarthome.rpc.De",
      "viceId\"Z\n\tZoneQuery\022,\n\004type\030\001 \001(\0162\036.mrte" +
      "ch.smarthome.rpc.ZoneType\022\014\n\004page\030\003 \001(\005\022" +
      "\021\n\tpage_size\030\004 \001(\005\"\242\001\n\010Timeline\022\n\n\002id\030\001 " +
      "\001(\005\022\021\n\ttimestamp\030\002 \001(\003\0222\n\005level\030\003 \001(\0162#." +
      "mrtech.smarthome.rpc.TimelineLevel\0220\n\004ty" +
      "pe\030\004 \001(\0162\".mrtech.smarthome.rpc.Timeline" +
      "Type\022\021\n\tparameter\030\005 \001(\t\"\321\003\n\014CameraDevice" +
      "\022\n\n\002id\030\001 \001(\005\022\023\n\013device_name\030\002 \001(\t\022\020\n\010dev" +
      "iceid\030\003 \001(\t\022\022\n\nip_address\030\004 \001(\t\022\014\n\004port\030" +
      "\005 \001(\005\022\014\n\004user\030\006 \001(\t\022\020\n\010password\030\007 \001(\t\022\020\n",
      "\010new_user\030\010 \001(\t\022\024\n\014new_password\030\t \001(\t\022\021\n" +
      "\tis_online\030\n \001(\010\022\034\n\024local_record_enabled" +
      "\030\013 \001(\010\022\020\n\010bypassed\030\014 \001(\010\0221\n\tarm_group\030\r " +
      "\001(\0162\036.mrtech.smarthome.rpc.ArmGroup\022\024\n\014m" +
      "otion_alarm\030\016 \001(\010\022\024\n\014is_connected\030\017 \001(\010\022" +
      "\021\n\tlast_seen\030\020 \001(\004\022\034\n\024authentication_err" +
      "or\030\021 \001(\0102Q\n\006detail\022\034.mrtech.smarthome.rp" +
      "c.Device\030\201\002 \001(\0132\".mrtech.smarthome.rpc.C" +
      "ameraDevice\"\263\001\n\nCameraInfo\0222\n\006status\030\001 \001" +
      "(\0132\".mrtech.smarthome.rpc.CameraStatus\0220",
      "\n\005param\030\002 \001(\0132!.mrtech.smarthome.rpc.Cam" +
      "eraParam\022?\n\006record\030\003 \001(\0132/.mrtech.smarth" +
      "ome.rpc.CameraRecordConfiguration\"\245\003\n\014Ca" +
      "meraStatus\022\r\n\005alias\030\001 \001(\t\022\020\n\010deviceid\030\002 " +
      "\001(\t\022\017\n\007sys_ver\030\003 \001(\t\022\013\n\003now\030\004 \001(\005\022\024\n\014ala" +
      "rm_status\030\005 \001(\005\022\023\n\013upnp_status\030\006 \001(\010\022\021\n\t" +
      "dnsenable\030\007 \001(\010\022\021\n\tosdenable\030\010 \001(\010\022\024\n\014sy" +
      "swifi_mode\030\t \001(\010\022\013\n\003mac\030\n \001(\t\022\017\n\007wifimac" +
      "\030\013 \001(\t\022\030\n\020record_sd_status\030\014 \001(\005\022\022\n\ndns_" +
      "status\030\r \001(\005\022\020\n\010internet\030\016 \001(\010\022\021\n\tp2psta",
      "tus\030\017 \001(\010\022\022\n\ndevicetype\030\020 \001(\005\022\025\n\rdevices" +
      "ubtype\030\021 \001(\005\022\022\n\nexternwifi\030\022 \001(\005\022\017\n\007encr" +
      "ypt\030\023 \001(\010\022\r\n\005under\030\024 \001(\010\022\017\n\007sdtotal\030\025 \001(" +
      "\004\022\016\n\006sdfree\030\026 \001(\004\"\227\002\n\013CameraParam\022.\n\004tim" +
      "e\030\001 \001(\0132 .mrtech.smarthome.rpc.CameraTim" +
      "e\0224\n\007network\030\002 \001(\0132#.mrtech.smarthome.rp" +
      "c.CameraNetwork\022.\n\004wlan\030\003 \001(\0132 .mrtech.s" +
      "marthome.rpc.CameraWlan\0220\n\005alarm\030\004 \001(\0132!" +
      ".mrtech.smarthome.rpc.CameraAlarm\022@\n\rsna" +
      "pshotparam\030\005 \001(\0132).mrtech.smarthome.rpc.",
      "CameraSnapshotParam\"\302\001\n\031CameraRecordConf" +
      "iguration\022\026\n\016record_enabled\030\001 \001(\010\022\034\n\024rec" +
      "ord_cover_enabled\030\002 \001(\010\022\030\n\020sd_card_capac" +
      "ity\030\003 \001(\004\0227\n\tsd_status\030\004 \001(\0162$.mrtech.sm" +
      "arthome.rpc.CameraSdStatus\022\034\n\024local_reco" +
      "rd_enabled\030\005 \001(\010\"w\n\030LocalRecordConfigura" +
      "tion\022\"\n\032local_record_cover_enabled\030\001 \001(\010" +
      "\022\032\n\022record_file_length\030\002 \001(\005\022\033\n\023reserved" +
      "_disk_space\030\003 \001(\005\"S\n\013CameraAlarm\022\036\n\026moti" +
      "on_detection_armed\030\001 \001(\010\022$\n\034motion_detec",
      "tion_sensitivity\030\002 \001(\005\"N\n\nCameraTime\022\013\n\003" +
      "now\030\001 \001(\005\022\n\n\002tz\030\002 \001(\005\022\023\n\013ntp_enabled\030\003 \001" +
      "(\010\022\022\n\nntp_server\030\004 \001(\t\"%\n\021CameraSetSnaps" +
      "hot\022\020\n\010Snapshot\030\001 \001(\t\"\220\006\n\023CameraSnapshot" +
      "Param\022\022\n\ncameratype\030\001 \001(\005\022\022\n\nresolution\030" +
      "\002 \001(\005\022\025\n\rresolutionsub\030\003 \001(\005\022\030\n\020resoluti" +
      "onsubsub\030\004 \001(\005\022\017\n\007vbright\030\005 \001(\005\022\021\n\tvcont" +
      "rast\030\006 \001(\005\022\014\n\004vhue\030\007 \001(\005\022\023\n\013vsaturation\030" +
      "\010 \001(\005\022\021\n\tOSDEnable\030\t \001(\010\022\014\n\004mode\030\n \001(\005\022\014" +
      "\n\004flip\030\013 \001(\005\022\020\n\010enc_size\030\014 \001(\005\022\025\n\renc_fr",
      "amerate\030\r \001(\005\022\024\n\014enc_keyframe\030\016 \001(\005\022\021\n\te" +
      "nc_quant\030\017 \001(\005\022\024\n\014enc_ratemode\030\020 \001(\005\022\023\n\013" +
      "enc_bitrate\030\021 \001(\005\022\025\n\renc_main_mode\030\022 \001(\005" +
      "\022\024\n\014sub_enc_size\030\023 \001(\005\022\031\n\021sub_enc_framer" +
      "ate\030\024 \001(\005\022\030\n\020sub_enc_keyframe\030\025 \001(\005\022\025\n\rs" +
      "ub_enc_quant\030\026 \001(\005\022\030\n\020sub_enc_ratemode\030\027" +
      " \001(\005\022\027\n\017sub_enc_bitrate\030\030 \001(\005\022\030\n\020sub_sub" +
      "_enc_size\030\031 \001(\005\022\035\n\025sub_sub_enc_framerate" +
      "\030\032 \001(\005\022\034\n\024sub_sub_enc_keyframe\030\033 \001(\005\022\031\n\021" +
      "sub_sub_enc_quant\030\034 \001(\005\022\034\n\024sub_sub_enc_r",
      "atemode\030\035 \001(\005\022\033\n\023sub_sub_enc_bitrate\030\036 \001" +
      "(\005\022\r\n\005speed\030\037 \001(\005\022\r\n\005ircut\030  \001(\005\022\020\n\010invo" +
      "lume\030! \001(\005\022\021\n\toutvolume\030\" \001(\005\022\021\n\taudioty" +
      "pe\030# \001(\005\"\211\001\n\rCameraNetwork\022\024\n\014dhcp_enabl" +
      "ed\030\001 \001(\010\022\022\n\nip_address\030\002 \001(\t\022\023\n\013subnet_m" +
      "ask\030\003 \001(\t\022\017\n\007gateway\030\004 \001(\t\022\014\n\004dns1\030\005 \001(\t" +
      "\022\014\n\004dns2\030\006 \001(\t\022\014\n\004port\030\007 \001(\005\"\216\003\n\nCameraW" +
      "lan\022\017\n\007enabled\030\001 \001(\010\022\014\n\004ssid\030\002 \001(\t\0222\n\004mo" +
      "de\030\003 \001(\0162$.mrtech.smarthome.rpc.CameraWl" +
      "anMode\022@\n\017encryption_type\030\004 \001(\0162\'.mrtech",
      ".smarthome.rpc.CameraWlanEncrypt\022E\n\023auth" +
      "entication_type\030\005 \001(\0162(.mrtech.smarthome" +
      ".rpc.CameraWlanAuthtype\022A\n\016wep_key_forma" +
      "t\030\006 \001(\0162).mrtech.smarthome.rpc.CameraWla" +
      "nKeyFormat\022\017\n\007wep_key\030\007 \001(\t\022?\n\014wep_key_b" +
      "its\030\010 \001(\0162).mrtech.smarthome.rpc.CameraW" +
      "lanKeyLength\022\017\n\007wpa_psk\030\t \001(\t\"\257\001\n\014Camera" +
      "WifiAp\022\014\n\004ssid\030\001 \001(\t\022\013\n\003mac\030\002 \001(\t\022:\n\010sec" +
      "urity\030\003 \001(\0162(.mrtech.smarthome.rpc.Camer" +
      "aWlanAuthtype\0222\n\004mode\030\004 \001(\0162$.mrtech.sma",
      "rthome.rpc.CameraWlanMode\022\024\n\014link_qualit" +
      "y\030\005 \001(\002\"\312\001\n\rTimelineQuery\022\r\n\005since\030\001 \001(\003" +
      "\022\r\n\005until\030\002 \001(\003\0222\n\005level\030\003 \001(\0162#.mrtech." +
      "smarthome.rpc.TimelineLevel\0220\n\004type\030\004 \001(" +
      "\0162\".mrtech.smarthome.rpc.TimelineType\022\024\n" +
      "\014fixed_paging\030\005 \001(\010\022\014\n\004page\030\006 \001(\005\022\021\n\tpag" +
      "e_size\030\007 \001(\005\"\312\002\n\013ProductInfo\022\022\n\nhw_versi" +
      "on\030\001 \001(\t\022\022\n\nsw_version\030\002 \001(\t\022\031\n\021db_schem" +
      "a_version\030\003 \001(\002\022\013\n\003sku\030\004 \001(\t\022\014\n\004imei\030\005 \001" +
      "(\t\022\020\n\010cloud_id\030\006 \001(\t\022\017\n\007lan_mac\030\007 \001(\t\022\020\n",
      "\010wlan_mac\030\010 \001(\t\022\023\n\013wlan_5g_mac\030\t \001(\t\022\022\n\n" +
      "zigbee_mac\030\n \001(\t\022\022\n\nproduct_id\030\013 \001(\t\022\030\n\020" +
      "manufacture_date\030\014 \001(\t\022\027\n\017runtime_versio" +
      "n\030\r \001(\t\022\023\n\013web_version\030\016 \001(\t\022\022\n\nos_versi" +
      "on\030\017 \001(\t\022\017\n\007wan_mac\030\020 \001(\t\"y\n\tComponent\022\014" +
      "\n\004name\030\001 \001(\t\022\027\n\017current_version\030\002 \001(\t\022\026\n" +
      "\016latest_version\030\003 \001(\t\022\026\n\016time_published\030" +
      "\004 \001(\005\022\025\n\rfile_checksum\030\005 \001(\t\"\347\001\n\tOtaStat" +
      "us\0222\n\tcomponent\030\001 \003(\0132\037.mrtech.smarthome" +
      ".rpc.Component\022>\n\006status\030\002 \001(\0162..mrtech.",
      "smarthome.rpc.OtaStatus.OtaAgentStatus\022\027" +
      "\n\017last_check_time\030\003 \001(\005\"M\n\016OtaAgentStatu" +
      "s\022\010\n\004IDLE\020\000\022\017\n\013DOWNLOADING\020\001\022\024\n\020READY_TO" +
      "_INSTALL\020\002\022\n\n\006FAILED\020\003\"!\n\005Group\022\n\n\002id\030\001 " +
      "\001(\005\022\014\n\004name\030\002 \001(\t\";\n\nGroupQuery\022\014\n\004name\030" +
      "\001 \001(\t\022\014\n\004page\030\002 \001(\005\022\021\n\tpage_size\030\003 \001(\005\"P" +
      "\n\005Scene\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022-\n\007act" +
      "ions\030\003 \003(\0132\034.mrtech.smarthome.rpc.Action" +
      "\"\226\001\n\006Action\022\n\n\002id\030\001 \001(\005\022\020\n\010scene_id\030\002 \001(" +
      "\005\022\017\n\007plan_id\030\003 \001(\005\0220\n\006action\030\004 \001(\0162 .mrt",
      "ech.smarthome.rpc.ActionType\022\022\n\nparamete" +
      "rs\030\005 \001(\t\022\027\n\017execution_order\030\006 \001(\005\";\n\nSce" +
      "neQuery\022\014\n\004name\030\001 \001(\t\022\014\n\004page\030\002 \001(\005\022\021\n\tp" +
      "age_size\030\003 \001(\005\":\n\tPlanQuery\022\014\n\004name\030\001 \001(" +
      "\t\022\014\n\004page\030\002 \001(\005\022\021\n\tpage_size\030\003 \001(\005\"\271\001\n\004P" +
      "lan\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\025\n\rlast_ac" +
      "tivity\030\003 \001(\005\022\017\n\007enabled\030\004 \001(\010\022,\n\004type\030\005 " +
      "\001(\0162\036.mrtech.smarthome.rpc.PlanType\022\022\n\np" +
      "arameters\030\006 \001(\t\022-\n\007actions\030\007 \003(\0132\034.mrtec" +
      "h.smarthome.rpc.Action\"\204\004\n\tWanConfig\022/\n\010",
      "wan_mode\030\001 \001(\0162\035.mrtech.smarthome.rpc.Wa" +
      "nMode\022\017\n\007account\030\002 \001(\t\022\020\n\010password\030\003 \001(\t" +
      "\022\022\n\nip_address\030\004 \001(\t\022\023\n\013subnet_mask\030\005 \001(" +
      "\t\022\017\n\007gateway\030\006 \001(\t\022\022\n\nstatic_dns\030\007 \001(\010\022\023" +
      "\n\013primary_dns\030\010 \001(\t\022\025\n\rsecondary_dns\030\t \001" +
      "(\t\022+\n\004type\030\n \001(\0162\035.mrtech.smarthome.rpc." +
      "WanType\0225\n\nclone_mode\030\013 \001(\0162!.mrtech.sma" +
      "rthome.rpc.WanMacClone\022\021\n\tclone_mac\030\014 \001(" +
      "\t\022\016\n\006domain\030\r \001(\t\022\024\n\014service_name\030\016 \001(\t\022" +
      "\035\n\025enable_dos_protection\030\017 \001(\010\022\022\n\nenable",
      "_dmz\030\020 \001(\010\022\020\n\010dmz_host\030\021 \001(\t\022\031\n\021enable_i" +
      "gmp_proxy\030\022 \001(\010\022\013\n\003mtu\030\023 \001(\005\022\013\n\003mru\030\024 \001(" +
      "\005\022\022\n\nallow_ping\030\025 \001(\010\"\314\002\n\nWlanConfig\022\014\n\004" +
      "ssid\030\001 \001(\t\022\026\n\016ssid_broadcast\030\002 \001(\010\022:\n\016op" +
      "eration_mode\030\003 \001(\0162\".mrtech.smarthome.rp" +
      "c.WirelessMode\0226\n\010security\030\004 \003(\0132$.mrtec" +
      "h.smarthome.rpc.EncryptionMode\022\022\n\npassph" +
      "rase\030\005 \001(\t\022\017\n\007channel\030\006 \001(\005\0229\n\013access_ru" +
      "le\030\007 \001(\0162$.mrtech.smarthome.rpc.AccessRu" +
      "leMode\022\017\n\007enabled\030\010 \001(\010\0223\n\nband_width\030\t ",
      "\001(\0162\037.mrtech.smarthome.rpc.BandWidth\"\252\001\n" +
      "\017GuestWlanConfig\022\017\n\007enabled\030\001 \001(\010\022\024\n\014loc" +
      "al_access\030\002 \001(\010\022\014\n\004ssid\030\003 \001(\t\022\026\n\016ssid_br" +
      "oadcast\030\004 \001(\010\0226\n\010security\030\005 \003(\0132$.mrtech" +
      ".smarthome.rpc.EncryptionMode\022\022\n\npassphr" +
      "ase\030\006 \001(\t\"\\\n\013SambaConfig\022-\n\004mode\030\001 \001(\0162\037" +
      ".mrtech.smarthome.rpc.SambaMode\022\014\n\004user\030" +
      "\002 \001(\t\022\020\n\010password\030\003 \001(\t\"\303\001\n\rNetworkDevic" +
      "e\022\013\n\003mac\030\001 \001(\t\022\n\n\002ip\030\002 \001(\t\022\017\n\007netbios\030\003 " +
      "\001(\t\022.\n\004type\030\004 \001(\0162 .mrtech.smarthome.rpc",
      ".AccessType\022,\n\004port\030\005 \001(\0162\036.mrtech.smart" +
      "home.rpc.WlanPort\022\023\n\013upload_rate\030\006 \001(\004\022\025" +
      "\n\rdownload_rate\030\007 \001(\004\"\247\001\n\023BandwidthTestR" +
      "esult\022\017\n\007testing\030\001 \001(\010\022\032\n\022download_bandw" +
      "idth\030\002 \001(\004\022\030\n\020upload_bandwidth\030\003 \001(\004\022\r\n\005" +
      "delay\030\004 \001(\005\022\017\n\007carrier\030\005 \001(\t\022\020\n\010location" +
      "\030\006 \001(\t\022\027\n\017server_location\030\007 \001(\t\"c\n\007HddIn" +
      "fo\022/\n\006status\030\001 \001(\0162\037.mrtech.smarthome.rp" +
      "c.HddStatus\022\023\n\013total_space\030\002 \001(\004\022\022\n\nused" +
      "_space\030\003 \001(\004\"|\n\nPortFilter\0227\n\010protocol\030\001",
      " \001(\0162%.mrtech.smarthome.rpc.NetworkProto" +
      "col\022\022\n\nstart_port\030\002 \001(\r\022\020\n\010end_port\030\003 \001(" +
      "\r\022\017\n\007enabled\030\004 \001(\010\"\220\001\n\013PortForward\022\020\n\010wa" +
      "n_port\030\001 \001(\r\022\020\n\010lan_port\030\002 \001(\r\022\023\n\013lan_ad" +
      "dress\030\003 \001(\t\0227\n\010protocol\030\004 \001(\0162%.mrtech.s" +
      "marthome.rpc.NetworkProtocol\022\017\n\007enabled\030" +
      "\005 \001(\010\"\200\010\n\013NetworkInfo\022\026\n\016lan_ip_address\030" +
      "\001 \001(\t\022\027\n\017lan_subnet_mask\030\002 \001(\t\022/\n\010wan_mo" +
      "de\030\003 \001(\0162\035.mrtech.smarthome.rpc.WanMode\022" +
      ":\n\020wan_pppoe_status\030\004 \001(\0162 .mrtech.smart",
      "home.rpc.PPPoEState\022\026\n\016wan_ip_address\030\005 " +
      "\001(\t\022\027\n\017wan_subnet_mask\030\006 \001(\t\022\023\n\013wan_gate" +
      "way\030\007 \001(\t\022\027\n\017wan_primary_dns\030\010 \001(\t\022\031\n\021wa" +
      "n_secondary_dns\030\t \001(\t\022/\n\005modem\030\n \001(\0132 .m" +
      "rtech.smarthome.rpc.MobileInfo\022\026\n\016wifi_2" +
      "_4g_ssid\030\013 \001(\t\022@\n\022wifi_2_4g_security\030\014 \003" +
      "(\0132$.mrtech.smarthome.rpc.EncryptionMode" +
      "\022\031\n\021wifi_2_4g_channel\030\r \001(\005\022<\n\023wifi_2_4g" +
      "_bandwidth\030\016 \001(\0162\037.mrtech.smarthome.rpc." +
      "BandWidth\022\034\n\024guest_wifi_2_4g_ssid\030\017 \001(\t\022",
      "F\n\030guest_wifi_2_4g_security\030\020 \003(\0132$.mrte" +
      "ch.smarthome.rpc.EncryptionMode\022\026\n\016wifi_" +
      "5_8g_ssid\030\021 \001(\t\022@\n\022wifi_5_8g_security\030\022 " +
      "\003(\0132$.mrtech.smarthome.rpc.EncryptionMod" +
      "e\022\031\n\021wifi_5_8g_channel\030\023 \001(\005\022<\n\023wifi_5_8" +
      "g_bandwidth\030\024 \001(\0162\037.mrtech.smarthome.rpc" +
      ".BandWidth\022\034\n\024guest_wifi_5_8g_ssid\030\025 \001(\t" +
      "\022F\n\030guest_wifi_5_8g_security\030\026 \003(\0132$.mrt" +
      "ech.smarthome.rpc.EncryptionMode\022\031\n\021wifi" +
      "_2_4g_enabled\030\027 \001(\010\022\037\n\027guest_wifi_2_4g_e",
      "nabled\030\030 \001(\010\022\031\n\021wifi_5_8g_enabled\030\031 \001(\010\022" +
      "\037\n\027guest_wifi_5_8g_enabled\030\032 \001(\010\"\324\001\n\tQos" +
      "Config\022\017\n\007enabled\030\001 \001(\010\022+\n\004mode\030\002 \001(\0162\035." +
      "mrtech.smarthome.rpc.QosMode\022\025\n\rexclusiv" +
      "e_mac\030\003 \001(\t\022\035\n\025max_inbound_bandwidth\030\004 \001" +
      "(\005\022\036\n\026max_outbound_bandwidth\030\005 \001(\005\0223\n\010pr" +
      "iority\030\006 \001(\0162!.mrtech.smarthome.rpc.QosP" +
      "riority\"S\n\007QosRule\0223\n\010priority\030\001 \001(\0162!.m" +
      "rtech.smarthome.rpc.QosPriority\022\023\n\013mac_a" +
      "ddress\030\002 \001(\t\"Q\n\014GroupSummary\022*\n\005group\030\001 ",
      "\001(\0132\033.mrtech.smarthome.rpc.Group\022\025\n\rdevi" +
      "ce_models\030\002 \003(\t\"l\n\007CpuInfo\022\'\n\002id\030\001 \001(\0162\033" +
      ".mrtech.smarthome.rpc.CpuId\022\014\n\004user\030\002 \001(" +
      "\004\022\016\n\006kernel\030\003 \001(\004\022\014\n\004nice\030\004 \001(\004\022\014\n\004idle\030" +
      "\005 \001(\004\"1\n\nMemoryInfo\022\021\n\ttotal_ram\030\001 \001(\004\022\020" +
      "\n\010free_ram\030\002 \001(\004\"<\n\023InternalStorageInfo\022" +
      "\022\n\ntotal_size\030\001 \001(\004\022\021\n\tfree_size\030\002 \001(\004\"\257" +
      "\001\n\nSystemInfo\022*\n\003cpu\030\001 \003(\0132\035.mrtech.smar" +
      "thome.rpc.CpuInfo\0220\n\006memory\030\002 \001(\0132 .mrte" +
      "ch.smarthome.rpc.MemoryInfo\022C\n\020internal_",
      "storage\030\003 \001(\0132).mrtech.smarthome.rpc.Int" +
      "ernalStorageInfo\"N\n\020DeviceStatistics\022\026\n\016" +
      "zigbee_devices\030\001 \001(\r\022\021\n\tias_zones\030\002 \001(\r\022" +
      "\017\n\007cameras\030\003 \001(\r\"\230\001\n\tVpnConfig\022+\n\004type\030\001" +
      " \001(\0162\035.mrtech.smarthome.rpc.VpnType\022.\n\004p" +
      "ptp\030\002 \001(\0132 .mrtech.smarthome.rpc.PptpCon" +
      "fig\022.\n\004l2tp\030\003 \001(\0132 .mrtech.smarthome.rpc" +
      ".L2tpConfig\"j\n\nPptpConfig\022\017\n\007account\030\001 \001" +
      "(\t\022\022\n\npassphrase\030\002 \001(\t\022\023\n\013server_host\030\003 " +
      "\001(\t\022\023\n\013enable_mppe\030\004 \001(\010\022\r\n\005route\030\005 \001(\t\"",
      "~\n\nL2tpConfig\022\017\n\007account\030\001 \001(\t\022\022\n\npassph" +
      "rase\030\002 \001(\t\022\023\n\013server_host\030\003 \001(\t\022\024\n\014enabl" +
      "e_ipsec\030\004 \001(\010\022\021\n\tipsec_psk\030\005 \001(\t\022\r\n\005rout" +
      "e\030\006 \001(\t*<\n\rSeverityLevel\022\010\n\004INFO\020\001\022\013\n\007WA" +
      "RNING\020\002\022\t\n\005ERROR\020\003\022\t\n\005FATAL\020\004*\214\001\n\rBatter" +
      "yStatus\022\035\n\031BATTERY_STATUS_NO_BATTERY\020\000\022\033" +
      "\n\027BATTERY_STATUS_CHARGING\020\001\022\036\n\032BATTERY_S" +
      "TATUS_DISCHARGING\020\002\022\037\n\033BATTERY_STATUS_NO" +
      "T_CHARGING\020\003*\265\001\n\rServiceStatus\022\035\n\031SERVIC" +
      "E_STATUS_NO_SERVICE\020\000\022\035\n\031SERVICE_STATUS_",
      "RESTRICTED\020\001\022\030\n\024SERVICE_STATUS_VALID\020\002\022." +
      "\n*SERVICE_STATUS_RESTRICTED_REGIONAL_SER" +
      "VICE\020\003\022\034\n\030SERVICE_STATUS_HIBERNATE\020\004*\263\001\n" +
      "\rServiceDomain\022\035\n\031SERVICE_DOMAIN_NO_SERV" +
      "ICE\020\000\022\025\n\021SERVICE_DOMAIN_CS\020\001\022\025\n\021SERVICE_" +
      "DOMAIN_PS\020\002\022\030\n\024SERVICE_DOMAIN_PS_CS\020\003\022!\n" +
      "\035SERVICE_DOMAIN_NOT_REGISTERED\020\004\022\030\n\023SERV" +
      "ICE_DOMAIN_CDMA\020\377\001*\237\002\n\rOperationMode\022\035\n\031" +
      "OPERATION_MODE_NO_SERVICE\020\000\022\027\n\023OPERATION" +
      "_MODE_AMPS\020\001\022\027\n\023OPERATION_MODE_CDMA\020\002\022\033\n",
      "\027OPERATION_MODE_GSM_GPRS\020\003\022\026\n\022OPERATION_" +
      "MODE_HDR\020\004\022\030\n\024OPERATION_MODE_WCDMA\020\005\022\026\n\022" +
      "OPERATION_MODE_GPS\020\006\022\034\n\030OPERATION_MODE_G" +
      "SM_WCDMA\020\007\022\033\n\027OPERATION_MODE_CDMA_HDR\020\010\022" +
      "\033\n\027OPERATION_MODE_TD_SCDMA\020\017*\265\001\n\010SimStat" +
      "e\022\025\n\021SIM_STATE_INVALID\020\000\022\023\n\017SIM_STATE_VA" +
      "LID\020\001\022\030\n\024SIM_STATE_CS_INVALID\020\002\022\030\n\024SIM_S" +
      "TATE_PS_INVALID\020\003\022\033\n\027SIM_STATE_PS_CS_INV" +
      "ALID\020\004\022\025\n\020SIM_STATE_ROMSIM\020\360\001\022\025\n\020SIM_STA" +
      "TE_NO_SIM\020\372\001*\205\005\n\020SubOperationMode\022!\n\035SUB",
      "_OPERATION_MODE_NO_SERVICE\020\000\022\032\n\026SUB_OPER" +
      "ATION_MODE_GSM\020\001\022\033\n\027SUB_OPERATION_MODE_G" +
      "PRS\020\002\022\033\n\027SUB_OPERATION_MODE_EDGE\020\003\022\034\n\030SU" +
      "B_OPERATION_MODE_WCDMA\020\004\022\034\n\030SUB_OPERATIO" +
      "N_MODE_HSDPA\020\005\022\034\n\030SUB_OPERATION_MODE_HSU" +
      "PA\020\006\022\"\n\036SUB_OPERATION_MODE_HSUPA_HSDPA\020\007" +
      "\022\037\n\033SUB_OPERATION_MODE_TD_SCDMA\020\010\022 \n\034SUB" +
      "_OPERATION_MODE_HSPA_PLUS\020\t\022\035\n\031SUB_OPERA" +
      "TION_MODE_EVDO_0\020\n\022\035\n\031SUB_OPERATION_MODE" +
      "_EVDO_A\020\013\022\035\n\031SUB_OPERATION_MODE_EVDO_B\020\014",
      "\022\"\n\036SUB_OPERATION_MODE_CDMA2000_1X\020\r\022\032\n\026" +
      "SUB_OPERATION_MODE_UMB\020\016\022\'\n#SUB_OPERATIO" +
      "N_MODE_CDMA2000_1X_EVDV\020\017\022\"\n\036SUB_OPERATI" +
      "ON_MODE_CDMA2000_3X\020\020\022&\n\"SUB_OPERATION_M" +
      "ODE_HSPA_PLUS_64QAM\020\021\022%\n!SUB_OPERATION_M" +
      "ODE_HSPA_PLUS_MIMO\020\022*\321\001\n\014WirelessMode\022\023\n" +
      "\017WIRELESS_MODE_B\020\000\022\023\n\017WIRELESS_MODE_G\020\001\022" +
      "\023\n\017WIRELESS_MODE_N\020\002\022\024\n\020WIRELESS_MODE_BG" +
      "\020\003\022\024\n\020WIRELESS_MODE_NG\020\004\022\025\n\021WIRELESS_MOD" +
      "E_BGN\020\005\022\023\n\017WIRELESS_MODE_A\020\006\022\024\n\020WIRELESS",
      "_MODE_AN\020\007\022\024\n\020WIRELESS_MODE_AC\020\010*P\n\nWpaV" +
      "ersion\022\023\n\017WPA_VERSION_WPA\020\000\022\024\n\020WPA_VERSI" +
      "ON_WPA2\020\001\022\027\n\023WPA_VERSION_UNKNOWN\020\002*E\n\rKe" +
      "yManagement\022\026\n\022KEY_MANAGEMENT_PSK\020\000\022\034\n\030K" +
      "EY_MANAGEMENT_IEEE8021X\020\001*H\n\017PhoneNumber" +
      "Type\022\031\n\025PHONE_NUMBER_TYPE_SMS\020\000\022\032\n\026PHONE" +
      "_NUMBER_TYPE_DIAL\020\001*<\n\nDeviceType\022\026\n\022DEV" +
      "ICE_TYPE_ZIGBEE\020\000\022\026\n\022DEVICE_TYPE_CAMERA\020" +
      "\001*\344\001\n\013PowerSource\022\030\n\024POWER_SOURCE_UNKNOW" +
      "N\020\000\022\036\n\032POWER_SOURCE_MAINS_1_PHASE\020\001\022\036\n\032P",
      "OWER_SOURCE_MAINS_3_PHASE\020\002\022\030\n\024POWER_SOU" +
      "RCE_BATTERY\020\003\022\023\n\017POWER_SOURCE_DC\020\004\022&\n\"PO" +
      "WER_SOURCE_EMERG_MAINS_CONST_PWR\020\005\022$\n PO" +
      "WER_SOURCE_EMERG_MAINS_XFER_SW\020\006*\202\013\n\010Dev" +
      "iceId\022\033\n\027DEVICE_ID_ON_OFF_SWITCH\020\000\022\"\n\036DE" +
      "VICE_ID_LEVEL_CONTROL_SWITCH\020\001\022\033\n\027DEVICE" +
      "_ID_ON_OFF_OUTPUT\020\002\022\'\n#DEVICE_ID_LEVEL_C" +
      "ONTROLLABLE_OUTPUT\020\003\022\034\n\030DEVICE_ID_SCENE_" +
      "SELECTOR\020\004\022 \n\034DEVICE_ID_CONFIGURATION_TO" +
      "OL\020\005\022\034\n\030DEVICE_ID_REMOTE_CONTROL\020\006\022 \n\034DE",
      "VICE_ID_COMBINED_INTERFACE\020\007\022\034\n\030DEVICE_I" +
      "D_RANGE_EXTENDER\020\010\022 \n\034DEVICE_ID_MAINS_PO" +
      "WER_OUTLET\020\t\022\027\n\023DEVICE_ID_DOOR_LOCK\020\n\022\"\n" +
      "\036DEVICE_ID_DOOR_LOCK_CONTROLLER\020\013\022\033\n\027DEV" +
      "ICE_ID_SIMPLE_SENSOR\020\014\022*\n&DEVICE_ID_CONS" +
      "UMPTION_AWARENESS_DEVICE\020\r\022\032\n\026DEVICE_ID_" +
      "HOME_GATEWAY\020P\022\030\n\024DEVICE_ID_SMART_PLUG\020Q" +
      "\022\031\n\025DEVICE_ID_WHITE_GOODS\020R\022\035\n\031DEVICE_ID" +
      "_METER_INTERFACE\020S\022\032\n\025DEVICE_ID_TEST_DEV" +
      "ICE\020\377\001\022\033\n\026DEVICE_ID_ON_OFF_LIGHT\020\200\002\022\035\n\030D",
      "EVICE_ID_DIMMABLE_LIGHT\020\201\002\022%\n DEVICE_ID_" +
      "COLORED_DIMMABLE_LIGHT\020\202\002\022\"\n\035DEVICE_ID_O" +
      "N_OFF_LIGHT_SWITCH\020\203\002\022\034\n\027DEVICE_ID_DIMME" +
      "R_SWITCH\020\204\002\022\"\n\035DEVICE_ID_COLOR_DIMMER_SW" +
      "ITCH\020\205\002\022\033\n\026DEVICE_ID_LIGHT_SENSOR\020\206\002\022\037\n\032" +
      "DEVICE_ID_OCCUPANCY_SENSOR\020\207\002\022\024\n\017DEVICE_" +
      "ID_SHADE\020\200\004\022\037\n\032DEVICE_ID_SHADE_CONTROLLE" +
      "R\020\201\004\022%\n DEVICE_ID_WINDOW_COVERING_DEVICE" +
      "\020\202\004\022)\n$DEVICE_ID_WINDOW_COVERING_CONTROL" +
      "LER\020\203\004\022#\n\036DEVICE_ID_HEATING_COOLING_UNIT",
      "\020\200\006\022\031\n\024DEVICE_ID_THERMOSTAT\020\201\006\022!\n\034DEVICE" +
      "_ID_TEMPERATURE_SENSOR\020\202\006\022\023\n\016DEVICE_ID_P" +
      "UMP\020\203\006\022\036\n\031DEVICE_ID_PUMP_CONTROLLER\020\204\006\022\036" +
      "\n\031DEVICE_ID_PRESSURE_SENSOR\020\205\006\022\032\n\025DEVICE" +
      "_ID_FLOW_SENSOR\020\206\006\022\034\n\027DEVICE_ID_MINI_SPL" +
      "IT_AC\020\207\006\022/\n*DEVICE_ID_IAS_CONTROL_INDICA" +
      "TING_EQUIPMENT\020\200\010\022.\n)DEVICE_ID_IAS_ANCIL" +
      "LARY_CONTROL_EQUIPMENT\020\201\010\022\027\n\022DEVICE_ID_I" +
      "AS_ZONE\020\202\010\022!\n\034DEVICE_ID_IAS_WARNING_DEVI" +
      "CE\020\203\010*Z\n\nTargetType\022\035\n\031TARGET_TYPE_NOT_S",
      "PECIFIED\020\000\022\026\n\022TARGET_TYPE_DEVICE\020\001\022\025\n\021TA" +
      "RGET_TYPE_GROUP\020\002*\300\002\n\017MeasurementType\022\031\n" +
      "\025MEASUREMENT_TYPE_NONE\020\000\022\033\n\027MEASUREMENT_" +
      "TYPE_ACTIVE\020\001\022\035\n\031MEASUREMENT_TYPE_REACTI" +
      "VE\020\002\022\035\n\031MEASUREMENT_TYPE_APPARENT\020\004\022\034\n\030M" +
      "EASUREMENT_TYPE_PHASE_A\020\010\022\034\n\030MEASUREMENT" +
      "_TYPE_PHASE_B\020\020\022\034\n\030MEASUREMENT_TYPE_PHAS" +
      "E_C\020 \022\027\n\023MEASUREMENT_TYPE_DC\020@\022\037\n\032MEASUR" +
      "EMENT_TYPE_HARMONICS\020\200\001\022#\n\036MEASUREMENT_T" +
      "YPE_POWER_QUALITY\020\200\002*\222\003\n\rUnitOfMeasure\022#",
      "\n\037UNIT_OF_MEASURE_KILO_WATT_HOURS\020\000\022(\n$U" +
      "NIT_OF_MEASURE_CUBIC_METER_PER_HOUR\020\001\022\'\n" +
      "#UNIT_OF_MEASURE_CUBIC_FEET_PER_HOUR\020\002\022." +
      "\n*UNIT_OF_MEASURE_CENTUM_CUBIC_FEET_PER_" +
      "HOUR\020\003\022\'\n#UNIT_OF_MEASURE_US_GALLONS_PER" +
      "_HOUR\020\004\022(\n$UNIT_OF_MEASURE_IMP_GALLONS_P" +
      "ER_HOUR\020\005\022 \n\034UNIT_OF_MEASURE_BTU_PER_HOU" +
      "R\020\006\022#\n\037UNIT_OF_MEASURE_LITERS_PER_HOUR\020\007" +
      "\022\035\n\031UNIT_OF_MEASURE_GUAGE_KPA\020\010\022 \n\034UNIT_" +
      "OF_MEASURE_ABSOLUTE_KPA\020\t*\342\003\n\010ZoneType\022\032",
      "\n\026ZONE_TYPE_STANDARD_CIE\020\000\022\033\n\027ZONE_TYPE_" +
      "MOTION_SENSOR\020\r\022\034\n\030ZONE_TYPE_CONTACT_SWI" +
      "TCH\020\025\022\031\n\025ZONE_TYPE_FIRE_SENSOR\020(\022\032\n\026ZONE" +
      "_TYPE_WATER_SENSOR\020*\022\030\n\024ZONE_TYPE_GAS_SE" +
      "NSOR\020+\022\'\n#ZONE_TYPE_PERSONAL_EMERGENCY_D" +
      "EVICE\020,\022\'\n#ZONE_TYPE_VIBRATION_MOVEMENT_" +
      "SENSOR\020-\022\035\n\030ZONE_TYPE_REMOTE_CONTROL\020\217\002\022" +
      "\026\n\021ZONE_TYPE_KEY_FOB\020\225\002\022\025\n\020ZONE_TYPE_KEY" +
      "PAD\020\235\004\022&\n!ZONE_TYPE_STANDARD_WARNING_DEV" +
      "ICE\020\245\004\022!\n\034ZONE_TYPE_GLASS_BREAK_SENSOR\020\246",
      "\004\022 \n\033ZONE_TYPE_SECURITY_REPEATER\020\251\004\022!\n\033Z" +
      "ONE_TYPE_INVALID_ZONE_TYPE\020\377\377\003*]\n\010ArmGro" +
      "up\022\022\n\016ARM_GROUP_STAY\020\000\022\023\n\017ARM_GROUP_SLEE" +
      "P\020\001\022\022\n\016ARM_GROUP_BOTH\020\002\022\024\n\020ARM_GROUP_ALW" +
      "AYS\020\003*X\n\007ArmMode\022\023\n\017ARM_MODE_DISARM\020\000\022\021\n" +
      "\rARM_MODE_STAY\020\001\022\022\n\016ARM_MODE_SLEEP\020\002\022\021\n\r" +
      "ARM_MODE_AWAY\020\003*\371\001\n\013PanelStatus\022\031\n\025PANEL" +
      "_STATUS_DISARMED\020\000\022\033\n\027PANEL_STATUS_ARMED" +
      "_STAY\020\001\022\034\n\030PANEL_STATUS_ARMED_SLEEP\020\002\022\033\n" +
      "\027PANEL_STATUS_ARMED_AWAY\020\003\022\033\n\027PANEL_STAT",
      "US_EXIT_DELAY\020\004\022\034\n\030PANEL_STATUS_ENTRY_DE" +
      "LAY\020\005\022!\n\035PANEL_STATUS_NOT_READY_TO_ARM\020\006" +
      "\022\031\n\025PANEL_STATUS_IN_ALARM\020\007*\323\001\n\013AlarmSta" +
      "tus\022\031\n\025ALARM_STATUS_NO_ALARM\020\000\022\030\n\024ALARM_" +
      "STATUS_BURGLAR\020\001\022\025\n\021ALARM_STATUS_FIRE\020\002\022" +
      "\032\n\026ALARM_STATUS_EMERGENCY\020\003\022\035\n\031ALARM_STA" +
      "TUS_POLICE_PANIC\020\004\022\033\n\027ALARM_STATUS_FIRE_" +
      "PANIC\020\005\022 \n\034ALARM_STATUS_EMERGENCY_PANIC\020" +
      "\006*^\n\rTimelineLevel\022\027\n\023TIMELINE_LEVEL_INF" +
      "O\020\000\022\032\n\026TIMELINE_LEVEL_WARNING\020\001\022\030\n\024TIMEL",
      "INE_LEVEL_ALARM\020\002*\222\005\n\014TimelineType\022 \n\034TI" +
      "MELINE_TYPE_SYSTEM_STARTUP\020\000\022\027\n\023TIMELINE" +
      "_TYPE_ARMED\020\001\022\032\n\026TIMELINE_TYPE_DISARMED\020" +
      "\002\022&\n\"TIMELINE_TYPE_IAS_ZONE_BATTERY_LOW\020" +
      "\003\022 \n\034TIMELINE_TYPE_IAS_ZONE_ALARM\020\004\022!\n\035T" +
      "IMELINE_TYPE_IAS_ZONE_TAMPER\020\005\022\"\n\036TIMELI" +
      "NE_TYPE_IAS_ZONE_TROUBLE\020\006\022&\n\"TIMELINE_T" +
      "YPE_IAS_ZONE_MAINS_FAULT\020\007\0225\n1TIMELINE_T" +
      "YPE_IAS_ZONE_LACK_OF_SUPERVISION_REPORT\020" +
      "\010\022)\n%TIMELINE_TYPE_IAS_ZONE_BATTERY_DEFE",
      "CT\020\t\022\037\n\033TIMELINE_TYPE_TOGGLE_ON_OFF\020\n\022&\n" +
      "\"TIMELINE_TYPE_ON_OFF_STATE_CHANGED\020\013\022 \n" +
      "\034TIMELINE_TYPE_CAMERA_OFFLINE\020\014\022/\n+TIMEL" +
      "INE_TYPE_CAMERA_MOTION_DETECTION_ALARM\020\r" +
      "\022&\n\"TIMELINE_TYPE_OVERCURRENT_DETECTED\020\016" +
      "\022&\n\"TIMELINE_TYPE_POWER_SOURCE_CHANGED\020\017" +
      "\022$\n TIMELINE_TYPE_SYSTEM_BATTERY_LOW\020\020*\266" +
      "\001\n\016CameraSdStatus\022\035\n\031CAMERA_SD_STATUS_NO" +
      "_EXIST\020\000\022\035\n\031CAMERA_SD_STATUS_INSERTED\020\001\022" +
      "\036\n\032CAMERA_SD_STATUS_RECORDING\020\002\022%\n!CAMER",
      "A_SD_STATUS_FILESYSTEM_ERROR\020\003\022\037\n\033CAMERA" +
      "_SD_STATUS_FORMATTING\020\004*H\n\016CameraWlanMod" +
      "e\022\032\n\026CAMERA_WLAN_MODE_INFRA\020\000\022\032\n\026CAMERA_" +
      "WLAN_MODE_ADHOC\020\001*P\n\021CameraWlanEncrypt\022\034" +
      "\n\030CAMERA_WLAN_ENCRYPT_OPEN\020\000\022\035\n\031CAMERA_W" +
      "LAN_ENCRYPT_SHARE\020\001*\355\001\n\022CameraWlanAuthty" +
      "pe\022\035\n\031CAMERA_WLAN_AUTHTYPE_NONE\020\000\022\034\n\030CAM" +
      "ERA_WLAN_AUTHTYPE_WEP\020\001\022%\n!CAMERA_WLAN_A" +
      "UTHTYPE_WPA_PSK_TKIP\020\002\022$\n CAMERA_WLAN_AU" +
      "THTYPE_WPA_PSK_AES\020\003\022&\n\"CAMERA_WLAN_AUTH",
      "TYPE_WPA2_PSK_TKIP\020\004\022%\n!CAMERA_WLAN_AUTH" +
      "TYPE_WPA2_PSK_AES\020\005*W\n\023CameraWlanKeyForm" +
      "at\022\036\n\032CAMERA_WLAN_KEY_FORMAT_HEX\020\000\022 \n\034CA" +
      "MERA_WLAN_KEY_FORMAT_ASCII\020\001*Z\n\023CameraWl" +
      "anKeyLength\022 \n\034CAMERA_WLAN_KEY_LENGTH_64" +
      "BIT\020\000\022!\n\035CAMERA_WLAN_KEY_LENGTH_128BIT\020\001" +
      "*@\n\nActionType\022\023\n\017ACTION_TYPE_ARM\020\000\022\035\n\031A" +
      "CTION_TYPE_TOGGLE_ON_OFF\020\001*3\n\010PlanType\022\023" +
      "\n\017PLAN_TYPE_TIMER\020\000\022\022\n\016PLAN_TYPE_FAKE\020\001*" +
      "E\n\007WanMode\022\022\n\016WAN_MODE_PPPOE\020\000\022\021\n\rWAN_MO",
      "DE_DHCP\020\001\022\023\n\017WAN_MODE_STATIC\020\002*)\n\007WanPor" +
      "t\022\016\n\nWAN_PORT_1\020\001\022\016\n\nWAN_PORT_2\020\002*3\n\007Wan" +
      "Type\022\025\n\021WAN_TYPE_INTERNET\020\000\022\021\n\rWAN_TYPE_" +
      "AREA\020\001*W\n\013WanMacClone\022\026\n\022WAN_MAC_CLONE_N" +
      "ONE\020\000\022\026\n\022WAN_MAC_CLONE_AUTO\020\001\022\030\n\024WAN_MAC" +
      "_CLONE_MANUAL\020\002*,\n\010WlanPort\022\017\n\013WLAN_PORT" +
      "_1\020\001\022\017\n\013WLAN_PORT_2\020\002*_\n\016AccessRuleMode\022" +
      "\027\n\023ACCESS_RULE_DISABLE\020\000\022\031\n\025ACCESS_RULE_" +
      "BLACKLIST\020\001\022\031\n\025ACCESS_RULE_WHITELIST\020\002*G" +
      "\n\tBandWidth\022\022\n\016BAND_WIDTH_20M\020\000\022\022\n\016BAND_",
      "WIDTH_40M\020\001\022\022\n\016BAND_WIDTH_80M\020\002*P\n\tSamba" +
      "Mode\022\027\n\023SAMBA_MODE_DISABLED\020\000\022\023\n\017SAMBA_M" +
      "ODE_USER\020\001\022\025\n\021SAMBA_MODE_PUBLIC\020\002*=\n\nAcc" +
      "essType\022\025\n\021ACCESS_TYPE_WIRED\020\001\022\030\n\024ACCESS" +
      "_TYPE_WIRELESS\020\002*6\n\007QosMode\022\023\n\017QOS_MODE_" +
      "NORMAL\020\001\022\026\n\022QOS_MODE_EXCLUSIVE\020\002*S\n\013AclR" +
      "uleMode\022\024\n\020ACL_RULE_DISABLE\020\000\022\026\n\022ACL_RUL" +
      "E_BLACKLIST\020\001\022\026\n\022ACL_RULE_WHITELIST\020\002*c\n" +
      "\tHddStatus\022\034\n\030HDD_STATUS_NOT_INSTALLED\020\000" +
      "\022\036\n\032HDD_STATUS_NOT_INITIALIZED\020\001\022\030\n\024HDD_",
      "STATUS_AVAILABLE\020\002*E\n\017NetworkProtocol\022\030\n" +
      "\024NETWORK_PROTOCOL_TCP\020\000\022\030\n\024NETWORK_PROTO" +
      "COL_UDP\020\001*v\n\023SignalStrengthLevel\022\035\n\031SIGN" +
      "AL_STRENGTH_LEVEL_LOW\020\000\022 \n\034SIGNAL_STRENG" +
      "TH_LEVEL_MIDDLE\020\001\022\036\n\032SIGNAL_STRENGTH_LEV" +
      "EL_HIGH\020\002*E\n\nPPPoEState\022\034\n\030PPPOE_STATE_D" +
      "ISCONNECTED\020\000\022\031\n\025PPPOE_STATE_CONNECTED\020\001" +
      "*\206\001\n\013QosPriority\022\030\n\024QOS_PRIORITY_HIGHEST" +
      "\020\000\022\025\n\021QOS_PRIORITY_HIGH\020\001\022\027\n\023QOS_PRIORIT" +
      "Y_MEDIUM\020\002\022\024\n\020QOS_PRIORITY_LOW\020\003\022\027\n\023QOS_",
      "PRIORITY_LOWEST\020\004*)\n\005CpuId\022\017\n\013CPU_ID_CPU" +
      "0\020\000\022\017\n\013CPU_ID_CPU1\020\001*B\n\007VpnType\022\021\n\rVPN_T" +
      "YPE_NONE\020\000\022\021\n\rVPN_TYPE_PPTP\020\001\022\021\n\rVPN_TYP" +
      "E_L2TP\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_mrtech_smarthome_rpc_SystemConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_mrtech_smarthome_rpc_SystemConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SystemConfiguration_descriptor,
              new java.lang.String[] { "Locale", "Timezone", "NtpEnabled", "AdminPassword", "DeviceName", "Time", "NetbiosName", "Workgroup", "AutoUpdate", },
              mrtech.smarthome.rpc.Models.SystemConfiguration.class,
              mrtech.smarthome.rpc.Models.SystemConfiguration.Builder.class);
          internal_static_mrtech_smarthome_rpc_DhcpReserved_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_mrtech_smarthome_rpc_DhcpReserved_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_DhcpReserved_descriptor,
              new java.lang.String[] { "Address", "Mac", },
              mrtech.smarthome.rpc.Models.DhcpReserved.class,
              mrtech.smarthome.rpc.Models.DhcpReserved.Builder.class);
          internal_static_mrtech_smarthome_rpc_DnsRecord_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_mrtech_smarthome_rpc_DnsRecord_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_DnsRecord_descriptor,
              new java.lang.String[] { "Domain", "Address", },
              mrtech.smarthome.rpc.Models.DnsRecord.class,
              mrtech.smarthome.rpc.Models.DnsRecord.Builder.class);
          internal_static_mrtech_smarthome_rpc_EthernetConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_mrtech_smarthome_rpc_EthernetConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_EthernetConfiguration_descriptor,
              new java.lang.String[] { "Address", "SubnetMask", "Gateway", "DhcpEnabled", "DhcpStart", "DhcpEnd", "DhcpReserved", "LocalDnsEnabled", "PrimaryDns", "SecondaryDns", "LocalDnsRecord", },
              mrtech.smarthome.rpc.Models.EthernetConfiguration.class,
              mrtech.smarthome.rpc.Models.EthernetConfiguration.Builder.class);
          internal_static_mrtech_smarthome_rpc_SystemLog_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_mrtech_smarthome_rpc_SystemLog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SystemLog_descriptor,
              new java.lang.String[] { "Id", "Timestamp", "ThreadId", "Channel", "Severity", "Message", },
              mrtech.smarthome.rpc.Models.SystemLog.class,
              mrtech.smarthome.rpc.Models.SystemLog.Builder.class);
          internal_static_mrtech_smarthome_rpc_SystemLogQuery_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_mrtech_smarthome_rpc_SystemLogQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SystemLogQuery_descriptor,
              new java.lang.String[] { "Since", "Until", "Channel", "Message", "Severity", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.SystemLogQuery.class,
              mrtech.smarthome.rpc.Models.SystemLogQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_EthernetInfo_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_mrtech_smarthome_rpc_EthernetInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_EthernetInfo_descriptor,
              new java.lang.String[] { "IpAddress", },
              mrtech.smarthome.rpc.Models.EthernetInfo.class,
              mrtech.smarthome.rpc.Models.EthernetInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_WlanInfo_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_mrtech_smarthome_rpc_WlanInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_WlanInfo_descriptor,
              new java.lang.String[] { "Essid", "Address", "EncryptionMode", },
              mrtech.smarthome.rpc.Models.WlanInfo.class,
              mrtech.smarthome.rpc.Models.WlanInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_BatteryInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_mrtech_smarthome_rpc_BatteryInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_BatteryInfo_descriptor,
              new java.lang.String[] { "Remaining", "Status", },
              mrtech.smarthome.rpc.Models.BatteryInfo.class,
              mrtech.smarthome.rpc.Models.BatteryInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_MobileNetworkInfo_descriptor,
              new java.lang.String[] { "SubMode", "Rssi", "IpAddress", "Mcc", "Mnc", },
              mrtech.smarthome.rpc.Models.MobileNetworkInfo.class,
              mrtech.smarthome.rpc.Models.MobileNetworkInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_MobileInfo_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_mrtech_smarthome_rpc_MobileInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_MobileInfo_descriptor,
              new java.lang.String[] { "Status", "Domain", "IsRoaming", "Mode", "SimState", "SubMode", "Imei", "Rssi", "Mcc", "Mnc", "IsModemInstalled", "IsDataConnected", },
              mrtech.smarthome.rpc.Models.MobileInfo.class,
              mrtech.smarthome.rpc.Models.MobileInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_EncryptionMode_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_mrtech_smarthome_rpc_EncryptionMode_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_EncryptionMode_descriptor,
              new java.lang.String[] { "Version", "AuthenticationSuites", },
              mrtech.smarthome.rpc.Models.EncryptionMode.class,
              mrtech.smarthome.rpc.Models.EncryptionMode.Builder.class);
          internal_static_mrtech_smarthome_rpc_WlanAccessPoint_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_mrtech_smarthome_rpc_WlanAccessPoint_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_WlanAccessPoint_descriptor,
              new java.lang.String[] { "Id", "Channel", "Essid", "Quality", "SignalLevel", "NoiseLevel", "MacAddress", "Mode", "EncryptionMode", "Password", "EncryptionKey", "WlanConfiguration", },
              mrtech.smarthome.rpc.Models.WlanAccessPoint.class,
              mrtech.smarthome.rpc.Models.WlanAccessPoint.Builder.class);
          internal_static_mrtech_smarthome_rpc_PhoneNumber_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_mrtech_smarthome_rpc_PhoneNumber_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_PhoneNumber_descriptor,
              new java.lang.String[] { "Id", "Number", "Type", },
              mrtech.smarthome.rpc.Models.PhoneNumber.class,
              mrtech.smarthome.rpc.Models.PhoneNumber.Builder.class);
          internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_MobilePhoneConfig_descriptor,
              new java.lang.String[] { "EventLevel", "AllowSms", "AllowDialing", "AllowData", "Numbers", "EnableNat", },
              mrtech.smarthome.rpc.Models.MobilePhoneConfig.class,
              mrtech.smarthome.rpc.Models.MobilePhoneConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_AccountQuery_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_mrtech_smarthome_rpc_AccountQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_AccountQuery_descriptor,
              new java.lang.String[] { "Page", "PageSize", "Name", },
              mrtech.smarthome.rpc.Models.AccountQuery.class,
              mrtech.smarthome.rpc.Models.AccountQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_Account_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_mrtech_smarthome_rpc_Account_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Account_descriptor,
              new java.lang.String[] { "Id", "Name", "ApiKey", "LastActivity", "Passphrase", "PassphraseNotSet", },
              mrtech.smarthome.rpc.Models.Account.class,
              mrtech.smarthome.rpc.Models.Account.Builder.class);
          internal_static_mrtech_smarthome_rpc_Device_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_mrtech_smarthome_rpc_Device_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Device_descriptor,
              new java.lang.String[] { "Id", "Type", "Alias", "GroupId", "Group", },
              mrtech.smarthome.rpc.Models.Device.class,
              mrtech.smarthome.rpc.Models.Device.Builder.class);
          internal_static_mrtech_smarthome_rpc_ZigBeeDevice_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_mrtech_smarthome_rpc_ZigBeeDevice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_ZigBeeDevice_descriptor,
              new java.lang.String[] { "Id", "Address", "MacAddress", "LinkQuality", "Endpoint", "DeviceId", "ZclVersion", "ApplicationVersion", "StackVersion", "HardwareVersion", "ManufacturerName", "ModelIdentifier", "DateCode", "PowerSource", "SecondaryPowerSource", "Online", },
              mrtech.smarthome.rpc.Models.ZigBeeDevice.class,
              mrtech.smarthome.rpc.Models.ZigBeeDevice.Builder.class);
          internal_static_mrtech_smarthome_rpc_OnOffCluster_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_mrtech_smarthome_rpc_OnOffCluster_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_OnOffCluster_descriptor,
              new java.lang.String[] { "State", },
              mrtech.smarthome.rpc.Models.OnOffCluster.class,
              mrtech.smarthome.rpc.Models.OnOffCluster.Builder.class);
          internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_ElectricalMeasurementCluster_descriptor,
              new java.lang.String[] { "MeasurementType", "Frequency", "RmsVoltage", "RmsCurrent", "ActivePower", "ReactivePower", "ApparentPower", "PowerFactor", "Overcurrent", },
              mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.class,
              mrtech.smarthome.rpc.Models.ElectricalMeasurementCluster.Builder.class);
          internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SimpleMeteringCluster_descriptor,
              new java.lang.String[] { "CurrentSummationDelivered", "Unit", },
              mrtech.smarthome.rpc.Models.SimpleMeteringCluster.class,
              mrtech.smarthome.rpc.Models.SimpleMeteringCluster.Builder.class);
          internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_TemperatureMeasurementCluster_descriptor,
              new java.lang.String[] { "MeasuredValue", },
              mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.class,
              mrtech.smarthome.rpc.Models.TemperatureMeasurementCluster.Builder.class);
          internal_static_mrtech_smarthome_rpc_IasZone_descriptor =
            getDescriptor().getMessageTypes().get(23);
          internal_static_mrtech_smarthome_rpc_IasZone_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_IasZone_descriptor,
              new java.lang.String[] { "Id", "DeviceId", "Device", "Type", "PrimaryAlarm", "SecondaryAlarm", "Tamper", "LowBattery", "SupervisionReport", "RestoreReport", "Trouble", "MainsFault", "TestMode", "BatteryDefect", "LackOfSupervisionReport", "LastActivity", "Bypassed", "ArmGroup", },
              mrtech.smarthome.rpc.Models.IasZone.class,
              mrtech.smarthome.rpc.Models.IasZone.Builder.class);
          internal_static_mrtech_smarthome_rpc_CieConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(24);
          internal_static_mrtech_smarthome_rpc_CieConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CieConfiguration_descriptor,
              new java.lang.String[] { "ArmMode", "SupervisionTimeout", "RestoreTimeout", "EntryDelay", "ExitDelay", "Passcode", },
              mrtech.smarthome.rpc.Models.CieConfiguration.class,
              mrtech.smarthome.rpc.Models.CieConfiguration.Builder.class);
          internal_static_mrtech_smarthome_rpc_DeviceQuery_descriptor =
            getDescriptor().getMessageTypes().get(25);
          internal_static_mrtech_smarthome_rpc_DeviceQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_DeviceQuery_descriptor,
              new java.lang.String[] { "Type", "Alias", "FilterByGroup", "GroupId", "Page", "PageSize", "DeviceIds", },
              mrtech.smarthome.rpc.Models.DeviceQuery.class,
              mrtech.smarthome.rpc.Models.DeviceQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_ZoneQuery_descriptor =
            getDescriptor().getMessageTypes().get(26);
          internal_static_mrtech_smarthome_rpc_ZoneQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_ZoneQuery_descriptor,
              new java.lang.String[] { "Type", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.ZoneQuery.class,
              mrtech.smarthome.rpc.Models.ZoneQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_Timeline_descriptor =
            getDescriptor().getMessageTypes().get(27);
          internal_static_mrtech_smarthome_rpc_Timeline_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Timeline_descriptor,
              new java.lang.String[] { "Id", "Timestamp", "Level", "Type", "Parameter", },
              mrtech.smarthome.rpc.Models.Timeline.class,
              mrtech.smarthome.rpc.Models.Timeline.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraDevice_descriptor =
            getDescriptor().getMessageTypes().get(28);
          internal_static_mrtech_smarthome_rpc_CameraDevice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraDevice_descriptor,
              new java.lang.String[] { "Id", "DeviceName", "Deviceid", "IpAddress", "Port", "User", "Password", "NewUser", "NewPassword", "IsOnline", "LocalRecordEnabled", "Bypassed", "ArmGroup", "MotionAlarm", "IsConnected", "LastSeen", "AuthenticationError", },
              mrtech.smarthome.rpc.Models.CameraDevice.class,
              mrtech.smarthome.rpc.Models.CameraDevice.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraInfo_descriptor =
            getDescriptor().getMessageTypes().get(29);
          internal_static_mrtech_smarthome_rpc_CameraInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraInfo_descriptor,
              new java.lang.String[] { "Status", "Param", "Record", },
              mrtech.smarthome.rpc.Models.CameraInfo.class,
              mrtech.smarthome.rpc.Models.CameraInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraStatus_descriptor =
            getDescriptor().getMessageTypes().get(30);
          internal_static_mrtech_smarthome_rpc_CameraStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraStatus_descriptor,
              new java.lang.String[] { "Alias", "Deviceid", "SysVer", "Now", "AlarmStatus", "UpnpStatus", "Dnsenable", "Osdenable", "SyswifiMode", "Mac", "Wifimac", "RecordSdStatus", "DnsStatus", "Internet", "P2Pstatus", "Devicetype", "Devicesubtype", "Externwifi", "Encrypt", "Under", "Sdtotal", "Sdfree", },
              mrtech.smarthome.rpc.Models.CameraStatus.class,
              mrtech.smarthome.rpc.Models.CameraStatus.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraParam_descriptor =
            getDescriptor().getMessageTypes().get(31);
          internal_static_mrtech_smarthome_rpc_CameraParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraParam_descriptor,
              new java.lang.String[] { "Time", "Network", "Wlan", "Alarm", "Snapshotparam", },
              mrtech.smarthome.rpc.Models.CameraParam.class,
              mrtech.smarthome.rpc.Models.CameraParam.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(32);
          internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraRecordConfiguration_descriptor,
              new java.lang.String[] { "RecordEnabled", "RecordCoverEnabled", "SdCardCapacity", "SdStatus", "LocalRecordEnabled", },
              mrtech.smarthome.rpc.Models.CameraRecordConfiguration.class,
              mrtech.smarthome.rpc.Models.CameraRecordConfiguration.Builder.class);
          internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_descriptor =
            getDescriptor().getMessageTypes().get(33);
          internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_LocalRecordConfiguration_descriptor,
              new java.lang.String[] { "LocalRecordCoverEnabled", "RecordFileLength", "ReservedDiskSpace", },
              mrtech.smarthome.rpc.Models.LocalRecordConfiguration.class,
              mrtech.smarthome.rpc.Models.LocalRecordConfiguration.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraAlarm_descriptor =
            getDescriptor().getMessageTypes().get(34);
          internal_static_mrtech_smarthome_rpc_CameraAlarm_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraAlarm_descriptor,
              new java.lang.String[] { "MotionDetectionArmed", "MotionDetectionSensitivity", },
              mrtech.smarthome.rpc.Models.CameraAlarm.class,
              mrtech.smarthome.rpc.Models.CameraAlarm.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraTime_descriptor =
            getDescriptor().getMessageTypes().get(35);
          internal_static_mrtech_smarthome_rpc_CameraTime_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraTime_descriptor,
              new java.lang.String[] { "Now", "Tz", "NtpEnabled", "NtpServer", },
              mrtech.smarthome.rpc.Models.CameraTime.class,
              mrtech.smarthome.rpc.Models.CameraTime.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_descriptor =
            getDescriptor().getMessageTypes().get(36);
          internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraSetSnapshot_descriptor,
              new java.lang.String[] { "Snapshot", },
              mrtech.smarthome.rpc.Models.CameraSetSnapshot.class,
              mrtech.smarthome.rpc.Models.CameraSetSnapshot.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_descriptor =
            getDescriptor().getMessageTypes().get(37);
          internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraSnapshotParam_descriptor,
              new java.lang.String[] { "Cameratype", "Resolution", "Resolutionsub", "Resolutionsubsub", "Vbright", "Vcontrast", "Vhue", "Vsaturation", "OSDEnable", "Mode", "Flip", "EncSize", "EncFramerate", "EncKeyframe", "EncQuant", "EncRatemode", "EncBitrate", "EncMainMode", "SubEncSize", "SubEncFramerate", "SubEncKeyframe", "SubEncQuant", "SubEncRatemode", "SubEncBitrate", "SubSubEncSize", "SubSubEncFramerate", "SubSubEncKeyframe", "SubSubEncQuant", "SubSubEncRatemode", "SubSubEncBitrate", "Speed", "Ircut", "Involume", "Outvolume", "Audiotype", },
              mrtech.smarthome.rpc.Models.CameraSnapshotParam.class,
              mrtech.smarthome.rpc.Models.CameraSnapshotParam.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraNetwork_descriptor =
            getDescriptor().getMessageTypes().get(38);
          internal_static_mrtech_smarthome_rpc_CameraNetwork_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraNetwork_descriptor,
              new java.lang.String[] { "DhcpEnabled", "IpAddress", "SubnetMask", "Gateway", "Dns1", "Dns2", "Port", },
              mrtech.smarthome.rpc.Models.CameraNetwork.class,
              mrtech.smarthome.rpc.Models.CameraNetwork.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraWlan_descriptor =
            getDescriptor().getMessageTypes().get(39);
          internal_static_mrtech_smarthome_rpc_CameraWlan_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraWlan_descriptor,
              new java.lang.String[] { "Enabled", "Ssid", "Mode", "EncryptionType", "AuthenticationType", "WepKeyFormat", "WepKey", "WepKeyBits", "WpaPsk", },
              mrtech.smarthome.rpc.Models.CameraWlan.class,
              mrtech.smarthome.rpc.Models.CameraWlan.Builder.class);
          internal_static_mrtech_smarthome_rpc_CameraWifiAp_descriptor =
            getDescriptor().getMessageTypes().get(40);
          internal_static_mrtech_smarthome_rpc_CameraWifiAp_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CameraWifiAp_descriptor,
              new java.lang.String[] { "Ssid", "Mac", "Security", "Mode", "LinkQuality", },
              mrtech.smarthome.rpc.Models.CameraWifiAp.class,
              mrtech.smarthome.rpc.Models.CameraWifiAp.Builder.class);
          internal_static_mrtech_smarthome_rpc_TimelineQuery_descriptor =
            getDescriptor().getMessageTypes().get(41);
          internal_static_mrtech_smarthome_rpc_TimelineQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_TimelineQuery_descriptor,
              new java.lang.String[] { "Since", "Until", "Level", "Type", "FixedPaging", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.TimelineQuery.class,
              mrtech.smarthome.rpc.Models.TimelineQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_ProductInfo_descriptor =
            getDescriptor().getMessageTypes().get(42);
          internal_static_mrtech_smarthome_rpc_ProductInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_ProductInfo_descriptor,
              new java.lang.String[] { "HwVersion", "SwVersion", "DbSchemaVersion", "Sku", "Imei", "CloudId", "LanMac", "WlanMac", "Wlan5GMac", "ZigbeeMac", "ProductId", "ManufactureDate", "RuntimeVersion", "WebVersion", "OsVersion", "WanMac", },
              mrtech.smarthome.rpc.Models.ProductInfo.class,
              mrtech.smarthome.rpc.Models.ProductInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_Component_descriptor =
            getDescriptor().getMessageTypes().get(43);
          internal_static_mrtech_smarthome_rpc_Component_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Component_descriptor,
              new java.lang.String[] { "Name", "CurrentVersion", "LatestVersion", "TimePublished", "FileChecksum", },
              mrtech.smarthome.rpc.Models.Component.class,
              mrtech.smarthome.rpc.Models.Component.Builder.class);
          internal_static_mrtech_smarthome_rpc_OtaStatus_descriptor =
            getDescriptor().getMessageTypes().get(44);
          internal_static_mrtech_smarthome_rpc_OtaStatus_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_OtaStatus_descriptor,
              new java.lang.String[] { "Component", "Status", "LastCheckTime", },
              mrtech.smarthome.rpc.Models.OtaStatus.class,
              mrtech.smarthome.rpc.Models.OtaStatus.Builder.class);
          internal_static_mrtech_smarthome_rpc_Group_descriptor =
            getDescriptor().getMessageTypes().get(45);
          internal_static_mrtech_smarthome_rpc_Group_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Group_descriptor,
              new java.lang.String[] { "Id", "Name", },
              mrtech.smarthome.rpc.Models.Group.class,
              mrtech.smarthome.rpc.Models.Group.Builder.class);
          internal_static_mrtech_smarthome_rpc_GroupQuery_descriptor =
            getDescriptor().getMessageTypes().get(46);
          internal_static_mrtech_smarthome_rpc_GroupQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_GroupQuery_descriptor,
              new java.lang.String[] { "Name", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.GroupQuery.class,
              mrtech.smarthome.rpc.Models.GroupQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_Scene_descriptor =
            getDescriptor().getMessageTypes().get(47);
          internal_static_mrtech_smarthome_rpc_Scene_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Scene_descriptor,
              new java.lang.String[] { "Id", "Name", "Actions", },
              mrtech.smarthome.rpc.Models.Scene.class,
              mrtech.smarthome.rpc.Models.Scene.Builder.class);
          internal_static_mrtech_smarthome_rpc_Action_descriptor =
            getDescriptor().getMessageTypes().get(48);
          internal_static_mrtech_smarthome_rpc_Action_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Action_descriptor,
              new java.lang.String[] { "Id", "SceneId", "PlanId", "Action", "Parameters", "ExecutionOrder", },
              mrtech.smarthome.rpc.Models.Action.class,
              mrtech.smarthome.rpc.Models.Action.Builder.class);
          internal_static_mrtech_smarthome_rpc_SceneQuery_descriptor =
            getDescriptor().getMessageTypes().get(49);
          internal_static_mrtech_smarthome_rpc_SceneQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SceneQuery_descriptor,
              new java.lang.String[] { "Name", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.SceneQuery.class,
              mrtech.smarthome.rpc.Models.SceneQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_PlanQuery_descriptor =
            getDescriptor().getMessageTypes().get(50);
          internal_static_mrtech_smarthome_rpc_PlanQuery_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_PlanQuery_descriptor,
              new java.lang.String[] { "Name", "Page", "PageSize", },
              mrtech.smarthome.rpc.Models.PlanQuery.class,
              mrtech.smarthome.rpc.Models.PlanQuery.Builder.class);
          internal_static_mrtech_smarthome_rpc_Plan_descriptor =
            getDescriptor().getMessageTypes().get(51);
          internal_static_mrtech_smarthome_rpc_Plan_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_Plan_descriptor,
              new java.lang.String[] { "Id", "Name", "LastActivity", "Enabled", "Type", "Parameters", "Actions", },
              mrtech.smarthome.rpc.Models.Plan.class,
              mrtech.smarthome.rpc.Models.Plan.Builder.class);
          internal_static_mrtech_smarthome_rpc_WanConfig_descriptor =
            getDescriptor().getMessageTypes().get(52);
          internal_static_mrtech_smarthome_rpc_WanConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_WanConfig_descriptor,
              new java.lang.String[] { "WanMode", "Account", "Password", "IpAddress", "SubnetMask", "Gateway", "StaticDns", "PrimaryDns", "SecondaryDns", "Type", "CloneMode", "CloneMac", "Domain", "ServiceName", "EnableDosProtection", "EnableDmz", "DmzHost", "EnableIgmpProxy", "Mtu", "Mru", "AllowPing", },
              mrtech.smarthome.rpc.Models.WanConfig.class,
              mrtech.smarthome.rpc.Models.WanConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_WlanConfig_descriptor =
            getDescriptor().getMessageTypes().get(53);
          internal_static_mrtech_smarthome_rpc_WlanConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_WlanConfig_descriptor,
              new java.lang.String[] { "Ssid", "SsidBroadcast", "OperationMode", "Security", "Passphrase", "Channel", "AccessRule", "Enabled", "BandWidth", },
              mrtech.smarthome.rpc.Models.WlanConfig.class,
              mrtech.smarthome.rpc.Models.WlanConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_GuestWlanConfig_descriptor =
            getDescriptor().getMessageTypes().get(54);
          internal_static_mrtech_smarthome_rpc_GuestWlanConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_GuestWlanConfig_descriptor,
              new java.lang.String[] { "Enabled", "LocalAccess", "Ssid", "SsidBroadcast", "Security", "Passphrase", },
              mrtech.smarthome.rpc.Models.GuestWlanConfig.class,
              mrtech.smarthome.rpc.Models.GuestWlanConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_SambaConfig_descriptor =
            getDescriptor().getMessageTypes().get(55);
          internal_static_mrtech_smarthome_rpc_SambaConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SambaConfig_descriptor,
              new java.lang.String[] { "Mode", "User", "Password", },
              mrtech.smarthome.rpc.Models.SambaConfig.class,
              mrtech.smarthome.rpc.Models.SambaConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_NetworkDevice_descriptor =
            getDescriptor().getMessageTypes().get(56);
          internal_static_mrtech_smarthome_rpc_NetworkDevice_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_NetworkDevice_descriptor,
              new java.lang.String[] { "Mac", "Ip", "Netbios", "Type", "Port", "UploadRate", "DownloadRate", },
              mrtech.smarthome.rpc.Models.NetworkDevice.class,
              mrtech.smarthome.rpc.Models.NetworkDevice.Builder.class);
          internal_static_mrtech_smarthome_rpc_BandwidthTestResult_descriptor =
            getDescriptor().getMessageTypes().get(57);
          internal_static_mrtech_smarthome_rpc_BandwidthTestResult_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_BandwidthTestResult_descriptor,
              new java.lang.String[] { "Testing", "DownloadBandwidth", "UploadBandwidth", "Delay", "Carrier", "Location", "ServerLocation", },
              mrtech.smarthome.rpc.Models.BandwidthTestResult.class,
              mrtech.smarthome.rpc.Models.BandwidthTestResult.Builder.class);
          internal_static_mrtech_smarthome_rpc_HddInfo_descriptor =
            getDescriptor().getMessageTypes().get(58);
          internal_static_mrtech_smarthome_rpc_HddInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_HddInfo_descriptor,
              new java.lang.String[] { "Status", "TotalSpace", "UsedSpace", },
              mrtech.smarthome.rpc.Models.HddInfo.class,
              mrtech.smarthome.rpc.Models.HddInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_PortFilter_descriptor =
            getDescriptor().getMessageTypes().get(59);
          internal_static_mrtech_smarthome_rpc_PortFilter_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_PortFilter_descriptor,
              new java.lang.String[] { "Protocol", "StartPort", "EndPort", "Enabled", },
              mrtech.smarthome.rpc.Models.PortFilter.class,
              mrtech.smarthome.rpc.Models.PortFilter.Builder.class);
          internal_static_mrtech_smarthome_rpc_PortForward_descriptor =
            getDescriptor().getMessageTypes().get(60);
          internal_static_mrtech_smarthome_rpc_PortForward_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_PortForward_descriptor,
              new java.lang.String[] { "WanPort", "LanPort", "LanAddress", "Protocol", "Enabled", },
              mrtech.smarthome.rpc.Models.PortForward.class,
              mrtech.smarthome.rpc.Models.PortForward.Builder.class);
          internal_static_mrtech_smarthome_rpc_NetworkInfo_descriptor =
            getDescriptor().getMessageTypes().get(61);
          internal_static_mrtech_smarthome_rpc_NetworkInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_NetworkInfo_descriptor,
              new java.lang.String[] { "LanIpAddress", "LanSubnetMask", "WanMode", "WanPppoeStatus", "WanIpAddress", "WanSubnetMask", "WanGateway", "WanPrimaryDns", "WanSecondaryDns", "Modem", "Wifi24GSsid", "Wifi24GSecurity", "Wifi24GChannel", "Wifi24GBandwidth", "GuestWifi24GSsid", "GuestWifi24GSecurity", "Wifi58GSsid", "Wifi58GSecurity", "Wifi58GChannel", "Wifi58GBandwidth", "GuestWifi58GSsid", "GuestWifi58GSecurity", "Wifi24GEnabled", "GuestWifi24GEnabled", "Wifi58GEnabled", "GuestWifi58GEnabled", },
              mrtech.smarthome.rpc.Models.NetworkInfo.class,
              mrtech.smarthome.rpc.Models.NetworkInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_QosConfig_descriptor =
            getDescriptor().getMessageTypes().get(62);
          internal_static_mrtech_smarthome_rpc_QosConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_QosConfig_descriptor,
              new java.lang.String[] { "Enabled", "Mode", "ExclusiveMac", "MaxInboundBandwidth", "MaxOutboundBandwidth", "Priority", },
              mrtech.smarthome.rpc.Models.QosConfig.class,
              mrtech.smarthome.rpc.Models.QosConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_QosRule_descriptor =
            getDescriptor().getMessageTypes().get(63);
          internal_static_mrtech_smarthome_rpc_QosRule_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_QosRule_descriptor,
              new java.lang.String[] { "Priority", "MacAddress", },
              mrtech.smarthome.rpc.Models.QosRule.class,
              mrtech.smarthome.rpc.Models.QosRule.Builder.class);
          internal_static_mrtech_smarthome_rpc_GroupSummary_descriptor =
            getDescriptor().getMessageTypes().get(64);
          internal_static_mrtech_smarthome_rpc_GroupSummary_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_GroupSummary_descriptor,
              new java.lang.String[] { "Group", "DeviceModels", },
              mrtech.smarthome.rpc.Models.GroupSummary.class,
              mrtech.smarthome.rpc.Models.GroupSummary.Builder.class);
          internal_static_mrtech_smarthome_rpc_CpuInfo_descriptor =
            getDescriptor().getMessageTypes().get(65);
          internal_static_mrtech_smarthome_rpc_CpuInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_CpuInfo_descriptor,
              new java.lang.String[] { "Id", "User", "Kernel", "Nice", "Idle", },
              mrtech.smarthome.rpc.Models.CpuInfo.class,
              mrtech.smarthome.rpc.Models.CpuInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_MemoryInfo_descriptor =
            getDescriptor().getMessageTypes().get(66);
          internal_static_mrtech_smarthome_rpc_MemoryInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_MemoryInfo_descriptor,
              new java.lang.String[] { "TotalRam", "FreeRam", },
              mrtech.smarthome.rpc.Models.MemoryInfo.class,
              mrtech.smarthome.rpc.Models.MemoryInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_InternalStorageInfo_descriptor =
            getDescriptor().getMessageTypes().get(67);
          internal_static_mrtech_smarthome_rpc_InternalStorageInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_InternalStorageInfo_descriptor,
              new java.lang.String[] { "TotalSize", "FreeSize", },
              mrtech.smarthome.rpc.Models.InternalStorageInfo.class,
              mrtech.smarthome.rpc.Models.InternalStorageInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_SystemInfo_descriptor =
            getDescriptor().getMessageTypes().get(68);
          internal_static_mrtech_smarthome_rpc_SystemInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_SystemInfo_descriptor,
              new java.lang.String[] { "Cpu", "Memory", "InternalStorage", },
              mrtech.smarthome.rpc.Models.SystemInfo.class,
              mrtech.smarthome.rpc.Models.SystemInfo.Builder.class);
          internal_static_mrtech_smarthome_rpc_DeviceStatistics_descriptor =
            getDescriptor().getMessageTypes().get(69);
          internal_static_mrtech_smarthome_rpc_DeviceStatistics_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_DeviceStatistics_descriptor,
              new java.lang.String[] { "ZigbeeDevices", "IasZones", "Cameras", },
              mrtech.smarthome.rpc.Models.DeviceStatistics.class,
              mrtech.smarthome.rpc.Models.DeviceStatistics.Builder.class);
          internal_static_mrtech_smarthome_rpc_VpnConfig_descriptor =
            getDescriptor().getMessageTypes().get(70);
          internal_static_mrtech_smarthome_rpc_VpnConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_VpnConfig_descriptor,
              new java.lang.String[] { "Type", "Pptp", "L2Tp", },
              mrtech.smarthome.rpc.Models.VpnConfig.class,
              mrtech.smarthome.rpc.Models.VpnConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_PptpConfig_descriptor =
            getDescriptor().getMessageTypes().get(71);
          internal_static_mrtech_smarthome_rpc_PptpConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_PptpConfig_descriptor,
              new java.lang.String[] { "Account", "Passphrase", "ServerHost", "EnableMppe", "Route", },
              mrtech.smarthome.rpc.Models.PptpConfig.class,
              mrtech.smarthome.rpc.Models.PptpConfig.Builder.class);
          internal_static_mrtech_smarthome_rpc_L2tpConfig_descriptor =
            getDescriptor().getMessageTypes().get(72);
          internal_static_mrtech_smarthome_rpc_L2tpConfig_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_mrtech_smarthome_rpc_L2tpConfig_descriptor,
              new java.lang.String[] { "Account", "Passphrase", "ServerHost", "EnableIpsec", "IpsecPsk", "Route", },
              mrtech.smarthome.rpc.Models.L2tpConfig.class,
              mrtech.smarthome.rpc.Models.L2tpConfig.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
